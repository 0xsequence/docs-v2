{"documentCount":380,"nextId":380,"documentIds":{"0":"docs/pages/builder.mdx#builder-intro","1":"docs/pages/stack.mdx#stack","2":"docs/pages/support.mdx#support","3":"docs/pages/wallet.mdx#wallet","4":"docs/pages/guides/discord.mdx#deploy-an-in-game-collectibles-contract","5":"docs/pages/guides/discord.mdx#query-contract-details","6":"docs/pages/guides/lootbox.mdx#deploy-an-in-game-collectibles-contract","7":"docs/pages/guides/lootbox.mdx#query-contract-details","8":"docs/pages/guides/unity-guide.mdx#integrate-sequencekit-with-waas","9":"docs/pages/guides/unity-guide.mdx#deploy-a-collectibles-contract","10":"docs/pages/guides/unity-guide.mdx#deploy-a-remote-minter","11":"docs/pages/guides/unity-guide.mdx#mint-in-game-achievement-tokens","12":"docs/pages/guides/unity-guide.mdx#burn-in-game-achievement-tokens","13":"docs/pages/guides/unity-guide.mdx#integrate-an-embedded-marketplace","14":"docs/pages/guides/webgl-guide.mdx#integrate-sequencekit-with-waas","15":"docs/pages/guides/webgl-guide.mdx#deploy-a-collectibles-contract","16":"docs/pages/guides/webgl-guide.mdx#deploy-a-remote-minter","17":"docs/pages/guides/webgl-guide.mdx#mint-in-game-achievement-tokens","18":"docs/pages/guides/webgl-guide.mdx#burn-in-game-achievement-tokens","19":"docs/pages/guides/webgl-guide.mdx#integrate-an-embedded-marketplace","20":"docs/pages/indexer/getting-started.mdx#getting-started","21":"docs/pages/solutions/minter.mdx#mint-tokens-using-builder-manually","22":"docs/pages/solutions/minter.mdx#deploy-a-serverless-minter-on-cloudflare-workers","23":"docs/pages/solutions/nft-checkout.mdx#integrate-nft-checkout-on-web","24":"docs/pages/solutions/onramps.mdx#integrate-onramp-on-web","25":"docs/pages/support/token-directory.mdx#token-directory","26":"docs/pages/guides/templates/template-cloudflare-relayer.mdx#deploy-an-in-game-collectibles-contract","27":"docs/pages/guides/templates/template-cloudflare-relayer.mdx#query-contract-details","28":"docs/pages/guides/templates/template-embedded-wallet.mdx#deploy-an-in-game-collectibles-contract","29":"docs/pages/guides/templates/template-embedded-wallet.mdx#query-contract-details","30":"docs/pages/guides/templates/template-go-relayer.mdx#deploy-an-in-game-collectibles-contract","31":"docs/pages/guides/templates/template-go-relayer.mdx#query-contract-details","32":"docs/pages/guides/templates/template-marketplace-api.mdx#deploy-an-in-game-collectibles-contract","33":"docs/pages/guides/templates/template-marketplace-api.mdx#query-contract-details","34":"docs/pages/sdk/sequence-kit/02-getting-started.mdx#getting-started-with-sequence-kit","35":"docs/pages/sdk/sequence-kit/02-getting-started.mdx#installing-sequence-kit-packages","36":"docs/pages/sdk/sequence-kit/02-getting-started.mdx#setting-up-the-kit-wrapper","37":"docs/pages/sdk/sequence-kit/02-getting-started.mdx#setting-up-the-embedded-wallet-wrapper","38":"docs/pages/sdk/sequence-kit/02-getting-started.mdx#triggering-the-connect-modal","39":"docs/pages/sdk/sequence-kit/02-getting-started.mdx#invoking-the-embedded-wallet-modal","40":"docs/pages/sdk/sequence-kit/02-getting-started.mdx#react-example","41":"docs/pages/sdk/sequence-kit/03-configuration.mdx#configuration-options","42":"docs/pages/sdk/sequence-kit/03-configuration.mdx#available-options","43":"docs/pages/sdk/sequence-kit/03-configuration.mdx#defaulttheme","44":"docs/pages/sdk/sequence-kit/03-configuration.mdx#position","45":"docs/pages/sdk/sequence-kit/03-configuration.mdx#sign-in-modal-configuration-signin","46":"docs/pages/sdk/sequence-kit/03-configuration.mdx#signinlogourl","47":"docs/pages/sdk/sequence-kit/03-configuration.mdx#signinprojectname","48":"docs/pages/sdk/sequence-kit/03-configuration.mdx#signinshowemailinput","49":"docs/pages/sdk/sequence-kit/03-configuration.mdx#signinsocialauthoptions","50":"docs/pages/sdk/sequence-kit/03-configuration.mdx#signinwalletauthoptions","51":"docs/pages/sdk/sequence-kit/03-configuration.mdx#displayedassets","52":"docs/pages/sdk/sequence-kit/04-checkout.mdx#overview","53":"docs/pages/sdk/sequence-kit/04-checkout.mdx#integration","54":"docs/pages/sdk/sequence-kit/04-checkout.mdx#opening-the-checkout-modal","55":"docs/pages/sdk/sequence-kit/04-checkout.mdx#configuring-the-checkout-modal","56":"docs/pages/sdk/sequence-kit/04-checkout.mdx#crypto-checkout-configuration-cryptocheckout","57":"docs/pages/sdk/sequence-kit/04-checkout.mdx#order-summary-configuration-ordersummaryitems","58":"docs/pages/sdk/sequence-kit/05-custom-connectors.mdx#custom-connectors-in-sequence-kit","59":"docs/pages/sdk/sequence-kit/05-custom-connectors.mdx#creating-a-custom-connector","60":"docs/pages/sdk/sequence-kit/05-custom-connectors.mdx#using-custom-connectors","61":"docs/pages/sdk/sequence-kit/05-custom-connectors.mdx#share-your-custom-connectors","62":"docs/pages/solutions/builder/contracts.mdx#contracts-in-builder","63":"docs/pages/solutions/builder/contracts.mdx#what-are-my-deployment-options","64":"docs/pages/solutions/builder/contracts.mdx#what-contract-interactions-can-i-do","65":"docs/pages/solutions/builder/contracts.mdx#watch-a-contract-be-deployed-with-builder","66":"docs/pages/solutions/builder/contracts.mdx#add-contract-collaborators-to-audited-contracts","67":"docs/pages/solutions/builder/contracts.mdx#possible-roles","68":"docs/pages/solutions/builder/gas-tank.mdx#gas-tank-in-builder","69":"docs/pages/solutions/builder/gas-tank.mdx#why-would-i-want-to-sponsor-gas-for-my-game","70":"docs/pages/solutions/builder/gas-tank.mdx#sponsoring-gas-with-the-gas-tank","71":"docs/pages/solutions/builder/gas-tank.mdx#watch-the-gas-tank-in-action-in-builder","72":"docs/pages/solutions/builder/getting-started.mdx#get-started","73":"docs/pages/solutions/builder/getting-started.mdx#sign-up-for-builder","74":"docs/pages/solutions/builder/getting-started.mdx#step-1-go-to-sequencebuild","75":"docs/pages/solutions/builder/getting-started.mdx#step-2-choose-a-sign-in-method","76":"docs/pages/solutions/builder/getting-started.mdx#step-3-sign-in-to-sequencebuild","77":"docs/pages/solutions/builder/getting-started.mdx#create-a-project","78":"docs/pages/solutions/builder/getting-started.mdx#step-1-enter-the-project-details","79":"docs/pages/solutions/builder/getting-started.mdx#step-2-create-the-project","80":"docs/pages/solutions/builder/getting-started.mdx#build-things","81":"docs/pages/solutions/builder/indexer.mdx#indexer-in-builder","82":"docs/pages/solutions/builder/indexer.mdx#what-data-can-i-query-for-my-game","83":"docs/pages/solutions/builder/indexer.mdx#how-much-code-will-i-have-to-write-to-query","84":"docs/pages/solutions/builder/indexer.mdx#watch-the-indexer-grab-on-chain-data","85":"docs/pages/solutions/builder/marketplaces.mdx#launch-your-white-label-marketplace","86":"docs/pages/solutions/builder/marketplaces.mdx#try-it-out","87":"docs/pages/solutions/builder/marketplaces.mdx#why-would-i-want-my-own-marketplace-for-my-web3-game","88":"docs/pages/solutions/builder/marketplaces.mdx#watch-a-marketplace-be-launched-in-minutes","89":"docs/pages/solutions/builder/node-gateway.mdx#node-gateway-in-builder","90":"docs/pages/solutions/builder/node-gateway.mdx#what-kind-of-performance-can-i-expect-for-my-game","91":"docs/pages/solutions/builder/node-gateway.mdx#what-can-you-do-to-simplify-the-integration-process-for-me","92":"docs/pages/solutions/builder/node-gateway.mdx#watch-a-node-gateway-integration","93":"docs/pages/solutions/builder/overview.mdx#sequence-builder","94":"docs/pages/solutions/builder/project-management.mdx#project-management","95":"docs/pages/solutions/builder/project-management.mdx#project-name","96":"docs/pages/solutions/builder/project-management.mdx#avatar","97":"docs/pages/solutions/builder/project-management.mdx#configure-networks","98":"docs/pages/solutions/builder/project-management.mdx#watch-a-project-be-created-in-the-builder","99":"docs/pages/solutions/builder/project-settings.mdx#settings-in-builder","100":"docs/pages/solutions/builder/project-settings.mdx#settings-options","101":"docs/pages/solutions/builder/project-settings.mdx#getting-to-settings-in-builder","102":"docs/pages/solutions/builder/project-settings.mdx#select-a-project","103":"docs/pages/solutions/builder/project-settings.mdx#go-to-settings","104":"docs/pages/solutions/builder/project-settings.mdx#1-general-settings","105":"docs/pages/solutions/builder/project-settings.mdx#project-name","106":"docs/pages/solutions/builder/project-settings.mdx#avatar","107":"docs/pages/solutions/builder/project-settings.mdx#2-collaborator-settings","108":"docs/pages/solutions/builder/project-settings.mdx#add-a-collaborator","109":"docs/pages/solutions/builder/project-settings.mdx#create-an-invite-link","110":"docs/pages/solutions/builder/project-settings.mdx#sharing-an-invite-link","111":"docs/pages/solutions/builder/project-settings.mdx#deleting-an-invite-link","112":"docs/pages/solutions/builder/project-settings.mdx#watch-how-to-invite-collaborators","113":"docs/pages/solutions/builder/project-settings.mdx#3-network-settings","114":"docs/pages/solutions/builder/project-settings.mdx#4-api-access-keys-settings","115":"docs/pages/solutions/builder/project-settings.mdx#create-a-new-api-access-key","116":"docs/pages/solutions/builder/project-settings.mdx#rename-or-delete-an-api-access-key","117":"docs/pages/solutions/builder/project-settings.mdx#renaming-your-key","118":"docs/pages/solutions/builder/project-settings.mdx#deleting-your-key","119":"docs/pages/solutions/builder/project-settings.mdx#access-the-credentials-of-a-key","120":"docs/pages/solutions/builder/project-settings.mdx#copy-your-key","121":"docs/pages/solutions/builder/project-settings.mdx#rotate-your-key","122":"docs/pages/solutions/builder/project-settings.mdx#update-api-access-settings-of-a-key","123":"docs/pages/solutions/builder/project-settings.mdx#set-domain-access","124":"docs/pages/solutions/builder/project-settings.mdx#set-service-access","125":"docs/pages/solutions/builder/project-settings.mdx#5-billing-settings","126":"docs/pages/solutions/builder/project-settings.mdx#billing-information","127":"docs/pages/solutions/builder/project-settings.mdx#update-your-project-subscription-plan","128":"docs/pages/solutions/builder/project-settings.mdx#set-your-overage-limit","129":"docs/pages/solutions/builder/project-settings.mdx#delete-a-project","130":"docs/pages/solutions/builder/wallet-sdks.mdx#wallet-sdks-in-builder","131":"docs/pages/solutions/builder/wallet-sdks.mdx#how-can-i-integrate-a-wallet-into-my-game-with-these-options","132":"docs/pages/solutions/builder/wallet-sdks.mdx#what-are-the-differences-between-these-options","133":"docs/pages/solutions/builder/wallet-sdks.mdx#what-are-the-benefits-of-each-and-how-can-i-leverage-them","134":"docs/pages/solutions/builder/wallet-sdks.mdx#watch-a-wallet-integration-using-sequencekit-with-builder","135":"docs/pages/solutions/marketplaces/white-label-marketplace.mdx#launch-your-white-label-marketplace","136":"docs/pages/solutions/marketplaces/white-label-marketplace.mdx#try-it-out","137":"docs/pages/solutions/marketplaces/white-label-marketplace.mdx#why-would-i-want-my-own-marketplace-for-my-web3-game","138":"docs/pages/solutions/marketplaces/white-label-marketplace.mdx#watch-a-marketplace-be-launched-in-minutes","139":"docs/pages/solutions/technical-references/chain-support.mdx#multi-chain-support","140":"docs/pages/solutions/technical-references/chain-support.mdx#networks","141":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#how-to-deploy-an-item-collection-contract","142":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#step-1-go-to-the-contracts-section","143":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#add-a-new-contract","144":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#step-2-choose-a-contract-for-your-item-collection","145":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#select-a-contract","146":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#bring-your-own-smart-contract","147":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#step-3-deploy-your-smart-contract","148":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#selectconfirm-the-network","149":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#provide-a-contract-name-and-symbol","150":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#determine-a-contract-owner","151":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#step-4-sign-the-transaction","152":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#sequence-wallet","153":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#signature-modal","154":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#step-5-collectible-contract-deployed","155":"docs/pages/solutions/collectibles/contracts/200-deploy-an-item-collection-contract.mdx#linked-contract-in-dashboard","156":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#how-to-mint-in-game-items-and-achievements-in-builder","157":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#introduction","158":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#what-is-an-erc-1155","159":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#what-can-you-do-with-it","160":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#prerequisite-create-a-project-and-deploy-a-smart-contract","161":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#step-1-select-the-collection-for-your-item","162":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#step-2-navigate-to-write-contract","163":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#step-3-provide-details-for-the-mint-method","164":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#step-4-mint-and-sign-your-transaction","165":"docs/pages/solutions/collectibles/contracts/900-mint-items-from-ERC1155.mdx#step-5-confirm-your-minted-items","166":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#how-to-mint-digital-collectibles-in-builder","167":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#introduction","168":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#erc-721-vs-erc-1155","169":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#choosing-for-gaming","170":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#prerequisite-create-a-project-and-deploy-a-smart-contract","171":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#step-1-select-the-contract-for-your-digital-collectibles","172":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#step-2-navigate-to-write-contract","173":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#step-3-provide-details-for-the-mint-method","174":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#step-4-mint-and-sign-your-transaction","175":"docs/pages/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721.mdx#step-5-confirm-your-minted-collectibles","176":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#how-to-mint-in-game-currency-in-builder","177":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#introduction","178":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#what-is-an-erc-20-token","179":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#fungability-vs-non-fungibility","180":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#prerequisite-create-a-project-and-deploy-a-smart-contract","181":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#step-1-select-the-contract-for-your-currency","182":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#step-2-navigate-to-write-contract","183":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#step-3-provide-details-for-the-mint-method","184":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#step-4-mint-and-sign-your-transaction","185":"docs/pages/solutions/collectibles/contracts/903-mint-currency-from-ERC20.mdx#step-5-confirm-your-minted-currency","186":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#how-to-manage-item-metadata-in-sequence-builder","187":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#introduction","188":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-1-prepare-your-token-images-and-metadata","189":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-2-set-up-on-pinatacloud","190":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-3-upload-your-metadata-files","191":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-4-get-the-folder-url","192":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-5-set-up-on-sequence-builder","193":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-6-deploy-your-contract","194":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-7-move-to-contract-details","195":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-8-update-contract-attributes","196":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-9-set-the-base-metadata-uri","197":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-10-minting-time","198":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-11-finalize-and-admire","199":"docs/pages/solutions/collectibles/metadata/800-manage-contract-metadata-builder.mdx#step-12-updating-metadata","200":"docs/pages/solutions/marketplaces/orderbook/01-overview.mdx#overview","201":"docs/pages/solutions/marketplaces/orderbook/02-quickstart.mdx#quickstart","202":"docs/pages/solutions/marketplaces/orderbook/02-quickstart.mdx#try-a-demo","203":"docs/pages/solutions/marketplaces/orderbook/02-quickstart.mdx#template","204":"docs/pages/solutions/marketplaces/orderbook/02-quickstart.mdx#getting-started","205":"docs/pages/solutions/payments/onramps/01-fiat-on-ramps.mdx#fiat-on-ramps","206":"docs/pages/solutions/technical-references/wallet-contracts/01-why.mdx#why-smart-contracts-wallets","207":"docs/pages/solutions/technical-references/wallet-contracts/01-why.mdx#externally-owned-accounts","208":"docs/pages/solutions/technical-references/wallet-contracts/01-why.mdx#pros","209":"docs/pages/solutions/technical-references/wallet-contracts/01-why.mdx#popular-examples","210":"docs/pages/solutions/technical-references/wallet-contracts/01-why.mdx#smart-contract-wallets","211":"docs/pages/solutions/technical-references/wallet-contracts/01-why.mdx#pros-1","212":"docs/pages/solutions/technical-references/wallet-contracts/01-why.mdx#examples","213":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#universal-deployer","214":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#deploy-process-v2","215":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#1---deploy-singleton-factory","216":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#2---deploy-wallet-context","217":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#deploy-process-v1","218":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#1---deploy-nanouniversaldeployer","219":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#2---deploy-universaldeployer2","220":"docs/pages/solutions/technical-references/wallet-contracts/02-universal-deployer.mdx#3---deploy-wallet-context","221":"docs/pages/solutions/technical-references/wallet-contracts/03-wallet-factory.mdx#wallet-factory","222":"docs/pages/solutions/technical-references/wallet-contracts/03-wallet-factory.mdx#factory-api","223":"docs/pages/solutions/technical-references/wallet-contracts/03-wallet-factory.mdx#deploy","224":"docs/pages/solutions/technical-references/wallet-contracts/03-wallet-factory.mdx#parameters","225":"docs/pages/solutions/technical-references/wallet-contracts/03-wallet-factory.mdx#return-values","226":"docs/pages/solutions/technical-references/wallet-contracts/03-wallet-factory.mdx#counter-factual-addresses","227":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#wallet-configuration","228":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#configuration-layout","229":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#signer-layout","230":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#example","231":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#the-valid-combinations-of-signers-are","232":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#configuration-hash---imagehash","233":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#compute-image-hash","234":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#todo-implement-table-from-v1-docs","235":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#initial-wallet-configuration","236":"docs/pages/solutions/technical-references/wallet-contracts/04-wallet-configuration.mdx#compute-wallet-address","237":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#modules--wallet-update","238":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#wallet-implementation","239":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#_updateconfiguration","240":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#parameters","241":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#reading-current-implementation","242":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#wallet-configuration-validation","243":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#_isvalidimage","244":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#parameters-1","245":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#return-values","246":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#mainmoduleupgradeable","247":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#updateimagehash","248":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#parameters-2","249":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#first-configuration-update","250":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#delegatecall-false","251":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#revertonerror-true","252":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#to-wallet","253":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#value-ethersconstantszero","254":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#gaslimit-ethersconstantszero","255":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#subsequent-configuration-updates","256":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#retrieving-the-current-configuration","257":"docs/pages/solutions/technical-references/wallet-contracts/05-modules-and-updates.mdx#retrieving-the-wallet-configuration","258":"docs/pages/solutions/technical-references/wallet-contracts/06-main-module-upgradeable.mdx#mainmoduleupgradeable--configuration-migration","259":"docs/pages/solutions/technical-references/wallet-contracts/07-transaction-encoding.mdx#transaction-encoding","260":"docs/pages/solutions/technical-references/wallet-contracts/08-signature-encoding.mdx#signature-encoding","261":"docs/pages/solutions/technical-references/wallet-contracts/08-signature-encoding.mdx#erc-191-ethereum-signed-data","262":"docs/pages/solutions/technical-references/wallet-contracts/08-signature-encoding.mdx#erc-712-structured-data-signatures","263":"docs/pages/solutions/technical-references/wallet-contracts/08-signature-encoding.mdx#verification","264":"docs/pages/solutions/technical-references/wallet-contracts/09-nested-transaction-batching.mdx#nested-transaction-batching","265":"docs/pages/solutions/technical-references/wallet-contracts/10-guest-module.mdx#guestmodule-and-on-demand-deployment","266":"docs/pages/solutions/technical-references/wallet-contracts/11-wallet-context.mdx#wallet-context","267":"docs/pages/solutions/technical-references/wallet-contracts/12-contract-audits.mdx#contract-audits","268":"docs/pages/solutions/technical-references/wallet-contracts/12-contract-audits.mdx#quantstamp","269":"docs/pages/solutions/technical-references/wallet-contracts/12-contract-audits.mdx#consensys-diligence","270":"docs/pages/solutions/technical-references/wallet-contracts/12-contract-audits.mdx#zellic","271":"docs/pages/solutions/wallets/embedded-wallet/01-overview.mdx#sequence-embedded-wallet","272":"docs/pages/solutions/wallets/embedded-wallet/01-overview.mdx#architecture-overview","273":"docs/pages/solutions/wallets/embedded-wallet/01-overview.mdx#signer-1-sequence-auth","274":"docs/pages/solutions/wallets/embedded-wallet/01-overview.mdx#signer-2-sequence-guard","275":"docs/pages/solutions/wallets/embedded-wallet/01-overview.mdx#threat-model","276":"docs/pages/solutions/wallets/embedded-wallet/02-quickstart.mdx#quickstart","277":"docs/pages/solutions/wallets/embedded-wallet/02-quickstart.mdx#try-a-demo","278":"docs/pages/solutions/wallets/embedded-wallet/02-quickstart.mdx#template","279":"docs/pages/solutions/wallets/embedded-wallet/02-quickstart.mdx#getting-started","280":"docs/pages/solutions/wallets/embedded-wallet/02-quickstart.mdx#sdk-installation","281":"docs/pages/solutions/wallets/embedded-wallet/02-quickstart.mdx#project-setup","282":"docs/pages/solutions/wallets/embedded-wallet/02-quickstart.mdx#library-setup","283":"docs/pages/solutions/wallets/embedded-wallet/03-manage-sessions.mdx#session-management","284":"docs/pages/solutions/wallets/embedded-wallet/03-manage-sessions.mdx#sign-in--sign-up","285":"docs/pages/solutions/wallets/embedded-wallet/03-manage-sessions.mdx#email-sign-in--sign-up","286":"docs/pages/solutions/wallets/embedded-wallet/03-manage-sessions.mdx#google--apple-auth","287":"docs/pages/solutions/wallets/embedded-wallet/03-manage-sessions.mdx#list-sessions","288":"docs/pages/solutions/wallets/embedded-wallet/03-manage-sessions.mdx#close-session","289":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#wallets-and-transactions","290":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#wallet-address","291":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#sign-messages","292":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#send-transactions","293":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#raw-transaction","294":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#send-erc20-tokens","295":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#send-erc721-tokens","296":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#send-erc1155-tokens","297":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#call-any-contract","298":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#function-signature","299":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#named-arguments","300":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#positional-arguments","301":"docs/pages/solutions/wallets/embedded-wallet/04-use-wallets.mdx#abi","302":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#validation","303":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#email-login-one-time-code","304":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#social-login","305":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#validation-status","306":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#trigger-session-validation","307":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#onvalidationrequired-callback","308":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#listen-for-session-validations","309":"docs/pages/solutions/wallets/embedded-wallet/05-validation.mdx#automatic-session-validation","310":"docs/pages/solutions/wallets/embedded-wallet/06-transaction-receipts.mdx#transaction-receipts","311":"docs/pages/solutions/wallets/embedded-wallet/06-transaction-receipts.mdx#successful-transaction-response","312":"docs/pages/solutions/wallets/embedded-wallet/06-transaction-receipts.mdx#failed-transaction-response","313":"docs/pages/solutions/wallets/universal-wallet/01-overview.mdx#wallet","314":"docs/pages/solutions/wallets/universal-wallet/02-quickstart.mdx#quickstart","315":"docs/pages/solutions/wallets/universal-wallet/02-quickstart.mdx#try-a-demo","316":"docs/pages/solutions/wallets/universal-wallet/02-quickstart.mdx#template","317":"docs/pages/solutions/wallets/universal-wallet/02-quickstart.mdx#install-for-existing-project","318":"docs/pages/solutions/wallets/universal-wallet/02-quickstart.mdx#cdn-distribution-as-native-js","319":"docs/pages/solutions/wallets/universal-wallet/04-platforms.mdx#platforms","320":"docs/pages/solutions/wallets/universal-wallet/04-platforms.mdx#web-wallet","321":"docs/pages/solutions/wallets/universal-wallet/04-platforms.mdx#mobile-wallet","322":"docs/pages/solutions/wallets/universal-wallet/04-platforms.mdx#browser-extension-wallet","323":"docs/pages/solutions/wallets/universal-wallet/05-fiat-on-ramps.mdx#fiat-on-ramps","324":"docs/pages/solutions/wallets/universal-wallet/06-key-management.mdx#key-management","325":"docs/pages/solutions/wallets/universal-wallet/06-key-management.mdx#social-login-wallets","326":"docs/pages/solutions/wallets/universal-wallet/06-key-management.mdx#session-keys","327":"docs/pages/solutions/wallets/universal-wallet/06-key-management.mdx#guard-key","328":"docs/pages/solutions/wallets/universal-wallet/06-key-management.mdx#torus-key","329":"docs/pages/solutions/wallets/universal-wallet/07-sequence-kit.mdx#sequence-kit-seamlessly-integrate-web3-wallets-into-your-applications","330":"docs/pages/solutions/wallets/universal-wallet/07-sequence-kit.mdx#key-features","331":"docs/pages/solutions/wallets/universal-wallet/07-sequence-kit.mdx#next-steps","332":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#connect-wallet","333":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#connecting-your-dapp-with-0xsequence","334":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#wallet-login-and-connect-options","335":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#app","336":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#appprotocol","337":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#origin","338":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#expiry","339":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#authorize","340":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#authorizenonce","341":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#refresh","342":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#keepwalletopened","343":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#askforemail","344":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingstheme","345":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingsbannerurl","346":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingssigninwith","347":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingssigninwithemail","348":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingssigninoptions","349":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingsincludedpaymentproviders","350":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingsdefaultfundingcurrency","351":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingsdefaultpurchaseamount","352":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#settingslockfundingcurrencytodefault","353":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#connecting-your-dapp-with-web3js-or-ethersjs","354":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#connecting-to-any-ethereum-dapp-with-the-sequence-wallet-chrome-extension","355":"docs/pages/solutions/wallets/universal-wallet/03-guides/01-connect-wallet.mdx#connecting-via-walletconnect","356":"docs/pages/solutions/wallets/universal-wallet/03-guides/02-auth-address.mdx#authenticate-users-with-message-signature","357":"docs/pages/solutions/wallets/universal-wallet/03-guides/02-auth-address.mdx#ask-for-the-wallet-address","358":"docs/pages/solutions/wallets/universal-wallet/03-guides/02-auth-address.mdx#authenticate-wallet","359":"docs/pages/solutions/wallets/universal-wallet/03-guides/02-auth-address.mdx#authenticate-wallet-server-side","360":"docs/pages/solutions/wallets/universal-wallet/03-guides/03-sign-message.mdx#todo---replace-with-code-groups-from-vocs","361":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#no-wallet-confirmation-signatures","362":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#session-keys","363":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#using-session-keys-with-sequence","364":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#1-initialize-sequence-wallet-and-connect","365":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#2-generate-a-session-key","366":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#3-sign-authorization-message","367":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#4-verify-authorization-signature","368":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#5-sign-message-with-session-key","369":"docs/pages/solutions/wallets/universal-wallet/03-guides/04-session-keys.mdx#6-verify-session-signature","370":"docs/pages/solutions/wallets/universal-wallet/03-guides/05-send-transaction.mdx#sending-transactions","371":"docs/pages/solutions/wallets/universal-wallet/03-guides/06-send-erc20.mdx#sending-erc-20-tokens","372":"docs/pages/solutions/wallets/universal-wallet/03-guides/07-send-erc721.mdx#sending-erc-721-nft-tokens","373":"docs/pages/solutions/wallets/universal-wallet/03-guides/08-send-erc1155.mdx#sending-erc-1155-collectible-tokens","374":"docs/pages/solutions/wallets/universal-wallet/03-guides/09-send-batch-transactions.mdx#sending-a-batch-of-transactions","375":"docs/pages/solutions/wallets/universal-wallet/03-guides/10-building-backends.mdx#building-backends-with-sequence","376":"docs/pages/solutions/wallets/universal-wallet/03-guides/10-building-backends.mdx#nodejs","377":"docs/pages/solutions/wallets/universal-wallet/03-guides/10-building-backends.mdx#go","378":"docs/pages/solutions/wallets/universal-wallet/03-guides/10-building-backends.mdx#ethkit","379":"docs/pages/solutions/wallets/universal-wallet/03-guides/10-building-backends.mdx#support-for-other-backend-languages"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[2,1,1],"1":[1,1,2],"2":[1,1,1],"3":[1,1,2],"4":[6,1,1],"5":[3,1,1],"6":[6,1,1],"7":[3,1,1],"8":[4,1,1],"9":[4,1,1],"10":[4,1,1],"11":[5,1,1],"12":[5,1,1],"13":[4,1,1],"14":[4,1,1],"15":[4,1,1],"16":[4,1,1],"17":[5,1,1],"18":[5,1,1],"19":[4,1,1],"20":[2,1,2],"21":[5,1,1],"22":[7,1,1],"23":[5,1,1],"24":[4,1,1],"25":[2,1,1],"26":[6,1,1],"27":[3,1,1],"28":[6,1,1],"29":[3,1,1],"30":[6,1,1],"31":[3,1,1],"32":[6,1,1],"33":[3,1,1],"34":[5,1,23],"35":[4,5,48],"36":[5,1,83],"37":[6,1,72],"38":[4,1,46],"39":[5,1,26],"40":[2,1,18],"41":[2,1,38],"42":[2,1,1],"43":[1,2,40],"44":[1,2,22],"45":[6,2,12],"46":[2,8,12],"47":[2,8,12],"48":[2,8,14],"49":[2,8,48],"50":[2,8,48],"51":[1,2,39],"52":[1,1,11],"53":[1,1,46],"54":[4,1,30],"55":[4,1,12],"56":[5,5,39],"57":[5,5,22],"58":[5,1,30],"59":[4,5,89],"60":[3,1,85],"61":[4,1,34],"62":[3,1,28],"63":[6,4,44],"64":[7,4,39],"65":[7,3,1],"66":[6,3,46],"67":[2,9,29],"68":[4,1,37],"69":[11,5,54],"70":[6,5,58],"71":[7,4,1],"72":[2,1,37],"73":[4,2,1],"74":[6,6,14],"75":[7,6,50],"76":[7,6,43],"77":[3,2,27],"78":[6,5,39],"79":[6,5,18],"80":[3,2,35],"81":[3,1,35],"82":[9,4,51],"83":[10,4,42],"84":[7,3,1],"85":[5,1,31],"86":[3,5,11],"87":[11,9,49],"88":[7,5,1],"89":[4,1,34],"90":[11,5,60],"91":[12,5,42],"92":[5,4,1],"93":[2,1,73],"94":[2,1,32],"95":[2,3,21],"96":[1,3,42],"97":[2,3,44],"98":[8,2,1],"99":[3,1,1],"100":[2,3,70],"101":[5,3,1],"102":[3,6,26],"103":[3,6,28],"104":[3,3,13],"105":[2,7,26],"106":[1,7,33],"107":[3,3,68],"108":[3,5,49],"109":[4,5,74],"110":[4,9,22],"111":[4,9,39],"112":[5,3,16],"113":[3,3,41],"114":[5,3,58],"115":[6,7,50],"116":[7,7,33],"117":[3,15,13],"118":[3,15,18],"119":[6,7,31],"120":[3,16,49],"121":[3,16,40],"122":[7,7,31],"123":[3,17,68],"124":[3,17,48],"125":[3,3,25],"126":[2,16,33],"127":[5,5,56],"128":[4,5,52],"129":[3,3,71],"130":[4,1,13],"131":[13,5,58],"132":[8,5,65],"133":[13,5,70],"134":[8,4,1],"135":[5,1,31],"136":[3,5,11],"137":[11,9,49],"138":[7,5,1],"139":[3,1,26],"140":[1,3,4],"141":[7,1,30],"142":[7,7,11],"143":[4,14,12],"144":[9,7,1],"145":[3,17,40],"146":[5,17,30],"147":[6,7,1],"148":[4,13,20],"149":[6,13,46],"150":[4,13,14],"151":[5,7,30],"152":[2,13,40],"153":[2,13,58],"154":[5,7,28],"155":[4,13,36],"156":[10,1,1],"157":[1,10,42],"158":[6,12,34],"159":[7,12,51],"160":[8,11,47],"161":[8,10,35],"162":[6,10,74],"163":[8,10,68],"164":[7,10,44],"165":[6,10,53],"166":[7,1,1],"167":[1,7,37],"168":[4,9,64],"169":[3,9,56],"170":[8,8,47],"171":[9,7,26],"172":[6,7,57],"173":[8,7,34],"174":[7,7,55],"175":[6,7,22],"176":[7,1,1],"177":[1,7,36],"178":[7,9,49],"179":[4,9,59],"180":[8,8,47],"181":[8,7,25],"182":[6,7,57],"183":[8,7,33],"184":[7,7,54],"185":[6,7,13],"186":[8,1,1],"187":[1,8,25],"188":[8,8,61],"189":[7,8,54],"190":[6,8,31],"191":[6,8,25],"192":[7,8,25],"193":[5,8,20],"194":[6,8,17],"195":[5,8,58],"196":[7,8,66],"197":[4,8,65],"198":[5,8,28],"199":[4,8,62],"200":[1,1,38],"201":[1,1,1],"202":[3,1,12],"203":[1,1,11],"204":[2,1,20],"205":[3,1,63],"206":[5,1,35],"207":[3,5,20],"208":[1,7,11],"209":[2,7,5],"210":[3,5,46],"211":[1,6,23],"212":[1,5,5],"213":[2,1,84],"214":[3,2,42],"215":[4,5,70],"216":[4,5,32],"217":[3,2,61],"218":[3,5,52],"219":[3,5,38],"220":[4,5,25],"221":[2,1,25],"222":[2,2,1],"223":[1,3,28],"224":[2,4,38],"225":[3,4,43],"226":[3,2,71],"227":[2,1,18],"228":[2,2,26],"229":[2,3,26],"230":[1,4,21],"231":[7,4,31],"232":[3,3,51],"233":[3,5,1],"234":[6,2,1],"235":[3,2,23],"236":[3,7,66],"237":[4,1,40],"238":[2,4,25],"239":[2,6,44],"240":[2,7,42],"241":[3,6,53],"242":[3,4,58],"243":[2,7,42],"244":[2,8,9],"245":[3,8,12],"246":[1,4,18],"247":[1,5,20],"248":[2,6,88],"249":[3,4,82],"250":[2,7,31],"251":[2,7,32],"252":[2,7,19],"253":[4,7,20],"254":[4,7,73],"255":[3,6,37],"256":[4,6,35],"257":[4,9,49],"258":[4,1,1],"259":[2,1,1],"260":[2,1,17],"261":[5,2,72],"262":[5,2,96],"263":[1,2,87],"264":[3,1,1],"265":[5,1,1],"266":[2,1,20],"267":[2,1,30],"268":[1,2,7],"269":[2,2,3],"270":[1,2,3],"271":[3,1,57],"272":[2,3,38],"273":[4,5,111],"274":[4,5,116],"275":[2,3,86],"276":[1,1,1],"277":[3,1,11],"278":[1,1,11],"279":[2,1,1],"280":[2,3,32],"281":[2,3,41],"282":[2,3,62],"283":[2,1,40],"284":[3,2,102],"285":[4,5,107],"286":[3,5,173],"287":[2,2,95],"288":[2,2,52],"289":[3,1,29],"290":[2,3,60],"291":[2,3,59],"292":[2,3,25],"293":[2,4,127],"294":[3,4,79],"295":[3,4,75],"296":[3,4,57],"297":[3,4,33],"298":[2,7,30],"299":[2,9,27],"300":[2,9,37],"301":[1,7,120],"302":[1,1,17],"303":[6,2,29],"304":[2,2,68],"305":[2,1,34],"306":[3,2,48],"307":[2,5,60],"308":[4,2,35],"309":[3,1,51],"310":[2,1,21],"311":[3,2,125],"312":[3,2,134],"313":[1,1,71],"314":[1,1,1],"315":[3,1,11],"316":[1,1,9],"317":[4,1,87],"318":[5,6,32],"319":[1,1,1],"320":[2,1,27],"321":[2,1,48],"322":[3,1,5],"323":[3,1,65],"324":[2,1,69],"325":[3,2,76],"326":[2,5,32],"327":[2,5,45],"328":[2,5,102],"329":[9,1,40],"330":[2,9,78],"331":[2,1,33],"332":[2,1,145],"333":[5,2,205],"334":[5,2,26],"335":[1,6,22],"336":[1,6,8],"337":[1,6,23],"338":[1,6,20],"339":[1,6,19],"340":[1,6,23],"341":[1,6,17],"342":[1,6,20],"343":[1,6,26],"344":[2,6,21],"345":[2,6,38],"346":[2,6,36],"347":[2,6,29],"348":[2,6,28],"349":[2,6,27],"350":[2,6,31],"351":[2,6,27],"352":[2,6,40],"353":[8,2,25],"354":[11,2,5],"355":[3,2,106],"356":[5,1,1],"357":[5,5,17],"358":[2,5,121],"359":[4,5,139],"360":[7,1,1],"361":[4,1,28],"362":[2,1,95],"363":[5,1,1],"364":[6,6,17],"365":[5,6,33],"366":[4,6,28],"367":[4,6,35],"368":[6,6,25],"369":[4,6,49],"370":[2,1,42],"371":[4,1,72],"372":[5,1,85],"373":[5,1,93],"374":[5,1,82],"375":[4,1,1],"376":[1,5,22],"377":[1,5,33],"378":[1,5,36],"379":[5,5,72]},"averageFieldLength":[3.8499999999999988,4.394736842105254,35.92894736842104],"storedFields":{"0":{"href":"/builder#builder-intro","html":"</header>","isPage":true,"text":"","title":"builder intro","titles":[]},"1":{"href":"/stack#stack","html":"</header>\n<p>Intro ..............</p>","isPage":true,"text":"\nIntro ..............","title":"Stack","titles":[]},"2":{"href":"/support#support","html":"</header>\n<p>....</p>","isPage":true,"text":"\n....","title":"Support","titles":[]},"3":{"href":"/wallet#wallet","html":"</header>\n<p>sadfasdf</p>","isPage":true,"text":"\nsadfasdf","title":"Wallet","titles":[]},"4":{"href":"/guides/discord#deploy-an-in-game-collectibles-contract","html":"\n","isPage":true,"text":"\n","title":"Deploy an in-game collectibles contract","titles":[null]},"5":{"href":"/guides/discord#query-contract-details","html":"\n","isPage":false,"text":"\n","title":"Query contract details","titles":[null]},"6":{"href":"/guides/lootbox#deploy-an-in-game-collectibles-contract","html":"\n","isPage":true,"text":"\n","title":"Deploy an in-game collectibles contract","titles":[null]},"7":{"href":"/guides/lootbox#query-contract-details","html":"\n","isPage":false,"text":"\n","title":"Query contract details","titles":[null]},"8":{"href":"/guides/unity-guide#integrate-sequencekit-with-waas","html":"\n","isPage":true,"text":"\n","title":"Integrate SequenceKit with WaaS","titles":[null]},"9":{"href":"/guides/unity-guide#deploy-a-collectibles-contract","html":"\n","isPage":false,"text":"\n","title":"Deploy a collectibles contract","titles":[null]},"10":{"href":"/guides/unity-guide#deploy-a-remote-minter","html":"\n","isPage":false,"text":"\n","title":"Deploy a remote minter","titles":[null]},"11":{"href":"/guides/unity-guide#mint-in-game-achievement-tokens","html":"\n","isPage":false,"text":"\n","title":"Mint in-game achievement tokens","titles":[null]},"12":{"href":"/guides/unity-guide#burn-in-game-achievement-tokens","html":"\n","isPage":false,"text":"\n","title":"Burn in-game achievement tokens","titles":[null]},"13":{"href":"/guides/unity-guide#integrate-an-embedded-marketplace","html":"\n","isPage":false,"text":"\n","title":"Integrate an embedded marketplace","titles":[null]},"14":{"href":"/guides/webgl-guide#integrate-sequencekit-with-waas","html":"\n","isPage":true,"text":"\n","title":"Integrate SequenceKit with WaaS","titles":[null]},"15":{"href":"/guides/webgl-guide#deploy-a-collectibles-contract","html":"\n","isPage":false,"text":"\n","title":"Deploy a collectibles contract","titles":[null]},"16":{"href":"/guides/webgl-guide#deploy-a-remote-minter","html":"\n","isPage":false,"text":"\n","title":"Deploy a remote minter","titles":[null]},"17":{"href":"/guides/webgl-guide#mint-in-game-achievement-tokens","html":"\n","isPage":false,"text":"\n","title":"Mint in-game achievement tokens","titles":[null]},"18":{"href":"/guides/webgl-guide#burn-in-game-achievement-tokens","html":"\n","isPage":false,"text":"\n","title":"Burn in-game achievement tokens","titles":[null]},"19":{"href":"/guides/webgl-guide#integrate-an-embedded-marketplace","html":"\n","isPage":false,"text":"\n","title":"Integrate an embedded marketplace","titles":[null]},"20":{"href":"/indexer/getting-started#getting-started","html":"</header>\n<p>start..</p>","isPage":true,"text":"\nstart..","title":"Getting started","titles":[]},"21":{"href":"/solutions/minter#mint-tokens-using-builder-manually","html":"\n","isPage":true,"text":"\n","title":"Mint tokens using Builder manually","titles":[null]},"22":{"href":"/solutions/minter#deploy-a-serverless-minter-on-cloudflare-workers","html":"\n","isPage":false,"text":"\n","title":"Deploy a serverless minter on Cloudflare Workers","titles":[null]},"23":{"href":"/solutions/nft-checkout#integrate-nft-checkout-on-web","html":"\n","isPage":true,"text":"\n","title":"Integrate NFT Checkout on web","titles":[null]},"24":{"href":"/solutions/onramps#integrate-onramp-on-web","html":"\n","isPage":true,"text":"\n","title":"Integrate onramp on web","titles":[null]},"25":{"href":"/support/token-directory#token-directory","html":"</header>\n<p>....</p>","isPage":true,"text":"\n....","title":"Token Directory","titles":[]},"26":{"href":"/guides/templates/template-cloudflare-relayer#deploy-an-in-game-collectibles-contract","html":"\n","isPage":true,"text":"\n","title":"Deploy an in-game collectibles contract","titles":[null]},"27":{"href":"/guides/templates/template-cloudflare-relayer#query-contract-details","html":"\n","isPage":false,"text":"\n","title":"Query contract details","titles":[null]},"28":{"href":"/guides/templates/template-embedded-wallet#deploy-an-in-game-collectibles-contract","html":"\n","isPage":true,"text":"\n","title":"Deploy an in-game collectibles contract","titles":[null]},"29":{"href":"/guides/templates/template-embedded-wallet#query-contract-details","html":"\n","isPage":false,"text":"\n","title":"Query contract details","titles":[null]},"30":{"href":"/guides/templates/template-go-relayer#deploy-an-in-game-collectibles-contract","html":"\n","isPage":true,"text":"\n","title":"Deploy an in-game collectibles contract","titles":[null]},"31":{"href":"/guides/templates/template-go-relayer#query-contract-details","html":"\n","isPage":false,"text":"\n","title":"Query contract details","titles":[null]},"32":{"href":"/guides/templates/template-marketplace-api#deploy-an-in-game-collectibles-contract","html":"\n","isPage":true,"text":"\n","title":"Deploy an in-game collectibles contract","titles":[null]},"33":{"href":"/guides/templates/template-marketplace-api#query-contract-details","html":"\n","isPage":false,"text":"\n","title":"Query contract details","titles":[null]},"34":{"href":"/sdk/sequence-kit/02-getting-started#getting-started-with-sequence-kit","html":"</header>\n<p>In this guide, we will walk you through installing Sequence Kit, triggering the connection modal, and displaying the embedded wallet in your application.</p>\n","isPage":true,"text":"\nIn this guide, we will walk you through installing Sequence Kit, triggering the connection modal, and displaying the embedded wallet in your application.\n","title":"Getting Started with Sequence Kit","titles":[]},"35":{"href":"/sdk/sequence-kit/02-getting-started#installing-sequence-kit-packages","html":"\n<p>Sequence Kit is modular, allowing you to install only the necessary packages. To get started, install the <code>kit</code> core package, the <code>connectors</code> package for interfacing with various wallet providers, and the <code>wallet</code> for the embedded wallet. Additionally, install other dependencies such as wagmi, viem, and 0xsequence.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install @0xsequence/kit @0xsequence/kit-connectors wagmi ethers@5.7.2 viem </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">xsequence @tanstack/react-query</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># or</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install @0xsequence/kit @0xsequence/kit-connectors wagmi ethers@5.7.2 viem </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">xsequence @tanstack/react-query</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># or</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add @0xsequence/kit @0xsequence/kit-connectors wagmi ethers@5.7.2 viem </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">xsequence @tanstack/react-query</span></span></code></pre>\n<header>","isPage":false,"text":"\nSequence Kit is modular, allowing you to install only the necessary packages. To get started, install the kit core package, the connectors package for interfacing with various wallet providers, and the wallet for the embedded wallet. Additionally, install other dependencies such as wagmi, viem, and 0xsequence.\nnpm install @0xsequence/kit @0xsequence/kit-connectors wagmi ethers@5.7.2 viem 0xsequence @tanstack/react-query\n# or\npnpm install @0xsequence/kit @0xsequence/kit-connectors wagmi ethers@5.7.2 viem 0xsequence @tanstack/react-query\n# or\nyarn add @0xsequence/kit @0xsequence/kit-connectors wagmi ethers@5.7.2 viem 0xsequence @tanstack/react-query\n","title":"Installing Sequence Kit Packages","titles":["Getting Started with Sequence Kit"]},"36":{"href":"/sdk/sequence-kit/02-getting-started#setting-up-the-kit-wrapper","html":"</header>\n<p>To utilize the core kit wrapper for connecting web3 wallets to your application, follow these steps:</p>\n<ol>\n<li>Configure wagmi for your app. Below is a basic wagmi configuration. For advanced configurations, please refer to the <a href=\"https://wagmi.sh/react/WagmiConfig\">wagmi documentation</a>.</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> MyPage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;./components/MyPage&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { KitProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { getDefaultConnectors } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit-connectors&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { QueryClient, QueryClientProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@tanstack/react-query&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig, http, WagmiProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;wagmi&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { mainnet, polygon, Chain } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;wagmi/chains&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> queryClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> QueryClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> chains</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [mainnet, polygon] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">as</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> projectAccessKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;&lt;access-key&gt;&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> connectors</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getDefaultConnectors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    walletConnectProjectId: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;wallet-connect-id&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    defaultChainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">137</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    appName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;demo app&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    projectAccessKey</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transports</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chains.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">forEach</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transports[chain.id] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transports,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    connectors,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chains</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">queryClient</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">MyPage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  );</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<ol start=\"2\">\n<li>Wrap your app with the <code>KitProvider</code> within the <code>WagmiConfig</code> wrapper.</li>\n</ol>\n<header>","isPage":false,"text":"\nTo utilize the core kit wrapper for connecting web3 wallets to your application, follow these steps:\n\nConfigure wagmi for your app. Below is a basic wagmi configuration. For advanced configurations, please refer to the wagmi documentation.\n\nimport MyPage from &#x27;./components/MyPage&#x27;\nimport { KitProvider } from &#x27;@0xsequence/kit&#x27;\nimport { getDefaultConnectors } from &#x27;@0xsequence/kit-connectors&#x27;\nimport { QueryClient, QueryClientProvider } from &#x27;@tanstack/react-query&#x27;\nimport { createConfig, http, WagmiProvider } from &#x27;wagmi&#x27;\nimport { mainnet, polygon, Chain } from &#x27;wagmi/chains&#x27;\n \nconst queryClient = new QueryClient() \n \nfunction App() {\n  const chains = [mainnet, polygon] as [Chain, ...Chain[]]\n  \n  const projectAccessKey = &#x27;&lt;access-key&gt;&#x27;\n \n  const connectors = getDefaultConnectors({\n    walletConnectProjectId: &#x27;wallet-connect-id&#x27;,\n    defaultChainId: 137,\n    appName: &#x27;demo app&#x27;,\n    projectAccessKey\n  })\n \n  const transports = {}\n \n  chains.forEach(chain =&gt; {\n    transports[chain.id] = http()\n  })\n  \n  const config = createConfig({\n    transports,\n    connectors,\n    chains\n  })\n \n  return (\n    &lt;WagmiConfig config={config}&gt;\n      &lt;QueryClientProvider client={queryClient}&gt; \n        &lt;KitProvider&gt;\n          &lt;MyPage /&gt;\n        &lt;/KitProvider&gt;\n      &lt;/QueryClientProvider&gt;\n    &lt;/WagmiConfig&gt;\n  );\n}\n\nWrap your app with the KitProvider within the WagmiConfig wrapper.\n\n","title":"Setting Up the Kit Wrapper","titles":[]},"37":{"href":"/sdk/sequence-kit/02-getting-started#setting-up-the-embedded-wallet-wrapper","html":"</header>\n<p>To install the optional embedded wallet, add the <code>KitWalletProvider</code> below the <code>KitProvider</code> wrapper.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { KitWalletProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit-wallet&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ...</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">queryClient</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">kitConfig</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitWalletProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">Page</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitWalletProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>The complete code will then look like this:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> MyPage </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;./components/MyPage&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { KitProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { getDefaultConnectors } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit-connectors&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { KitWalletProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit-wallet&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { QueryClient, QueryClientProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@tanstack/react-query&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createConfig, http, WagmiProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;wagmi&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { mainnet, polygon, Chain } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;wagmi/chains&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> queryClient</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> QueryClient</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() </span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> chains</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [mainnet, polygon] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">as</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Chain</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[]]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> projectAccessKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;&lt;access-key&gt;&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> connectors</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getDefaultConnectors</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    walletConnectProjectId: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;wallet-connect-id&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    defaultChainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">137</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    appName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;demo app&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    projectAccessKey</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transports</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chains.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">forEach</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">chain</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transports[chain.id] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> http</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  })</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    transports,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    connectors,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chains</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">queryClient</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitWalletProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">MyPage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitWalletProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  );</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<header>","isPage":false,"text":"\nTo install the optional embedded wallet, add the KitWalletProvider below the KitProvider wrapper.\nimport { KitWalletProvider } from &#x27;@0xsequence/kit-wallet&#x27;\n \n// ...\n \nconst App = () =&gt; {\n  return (\n    &lt;WagmiConfig config={config}&gt;\n      &lt;QueryClientProvider client={queryClient}&gt; \n        &lt;KitProvider config={kitConfig}&gt;\n          &lt;KitWalletProvider&gt;\n            &lt;Page /&gt;\n          &lt;/KitWalletProvider&gt;\n        &lt;/KitProvider&gt;\n      &lt;/QueryClientProvider&gt;\n    &lt;/WagmiConfig&gt;\n  )\n}\nThe complete code will then look like this:\nimport MyPage from &#x27;./components/MyPage&#x27;\nimport { KitProvider } from &#x27;@0xsequence/kit&#x27;\nimport { getDefaultConnectors } from &#x27;@0xsequence/kit-connectors&#x27;\nimport { KitWalletProvider } from &#x27;@0xsequence/kit-wallet&#x27;\nimport { QueryClient, QueryClientProvider } from &#x27;@tanstack/react-query&#x27;\nimport { createConfig, http, WagmiProvider } from &#x27;wagmi&#x27;\nimport { mainnet, polygon, Chain } from &#x27;wagmi/chains&#x27;\n \nconst queryClient = new QueryClient() \n \nfunction App() {\n  const chains = [mainnet, polygon] as [Chain, ...Chain[]]\n  \n  const projectAccessKey = &#x27;&lt;access-key&gt;&#x27;\n \n  const connectors = getDefaultConnectors({\n    walletConnectProjectId: &#x27;wallet-connect-id&#x27;,\n    defaultChainId: 137,\n    appName: &#x27;demo app&#x27;,\n    projectAccessKey\n  })\n \n  const transports = {}\n \n  chains.forEach(chain =&gt; {\n    transports[chain.id] = http()\n  })\n  \n  const config = createConfig({\n    transports,\n    connectors,\n    chains\n  })\n \n  return (\n    &lt;WagmiConfig config={config}&gt;\n      &lt;QueryClientProvider client={queryClient}&gt; \n        &lt;KitProvider&gt;\n          &lt;KitWalletProvider&gt;\n            &lt;MyPage /&gt;\n          &lt;/KitWalletProvider&gt;\n        &lt;/KitProvider&gt;\n      &lt;/QueryClientProvider&gt;\n    &lt;/WagmiConfig&gt;\n  );\n}\n","title":"Setting Up the Embedded Wallet Wrapper","titles":[]},"38":{"href":"/sdk/sequence-kit/02-getting-started#triggering-the-connect-modal","html":"</header>\n<div class=\"text--center\"><img src=\"/img/kit/sign-in-modal.png\"/></div>\n<p>Invoke the connect modal using the <code>useOpenConnectModal</code> hook.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useOpenConnectModal } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useDisconnect, useAccount } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;wagmi&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> MyReactComponent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">setOpenConnectModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useOpenConnectModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">isConnected</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useAccount</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setOpenConnectModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#F47067\">      {</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">isConnected </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&amp;&amp;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">onClick</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          Sign in</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      )</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>The modal will automatically close once the user signs in. You can utilize the <code>useAccount</code> hook from wagmi to detect the user&#x27;s connection status.</p>\n<header>","isPage":false,"text":"\n\nInvoke the connect modal using the useOpenConnectModal hook.\nimport { useOpenConnectModal } from &#x27;@0xsequence/kit&#x27;\nimport { useDisconnect, useAccount } from &#x27;wagmi&#x27;\n \n \nconst MyReactComponent = () =&gt; {\n  const { setOpenConnectModal } = useOpenConnectModal()\n \n  const { isConnected } = useAccount()\n \n  const onClick = () =&gt; {\n    setOpenConnectModal(true)\n  }\n \n  return (\n    &lt;&gt;\n      {!isConnected &amp;&amp; (\n        &lt;button onClick={onClick}&gt;\n          Sign in\n        &lt;/button&gt;\n      )}\n    &lt;/&gt;\n  )\n}\nThe modal will automatically close once the user signs in. You can utilize the useAccount hook from wagmi to detect the user&#x27;s connection status.\n","title":"Triggering the Connect Modal","titles":[]},"39":{"href":"/sdk/sequence-kit/02-getting-started#invoking-the-embedded-wallet-modal","html":"</header>\n<div class=\"text--center\"><img src=\"/img/kit/embedded-wallet.png\"/></div>\n<p>Open the embedded wallet using the <code>useOpenWalletModal</code> react hook.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useOpenWalletModal } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit-wallet&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> MyComponent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">setOpenWalletModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useOpenWalletModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    setOpenWalletModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">onClick</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;open wallet&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<header>","isPage":false,"text":"\n\nOpen the embedded wallet using the useOpenWalletModal react hook.\nimport { useOpenWalletModal } from &#x27;@0xsequence/kit-wallet&#x27;\n \nconst MyComponent = () =&gt; {\n  const { setOpenWalletModal } = useOpenWalletModal()\n \n  const onClick = () =&gt; {\n    setOpenWalletModal(true)\n  }\n \n  return (\n    &lt;button onClick={onClick}&gt;open wallet&lt;/button&gt;\n  )\n}\n","title":"Invoking the embedded wallet modal","titles":[]},"40":{"href":"/sdk/sequence-kit/02-getting-started#react-example","html":"</header>\n<p>The Sequence Kit <a href=\"https://github.com/0xsequence/kit\">Github repository</a> contains an <a href=\"https://github.com/0xsequence/kit/tree/master/examples/react\">example app</a> that you can use for learning and testing.</p>","isPage":false,"text":"\nThe Sequence Kit Github repository contains an example app that you can use for learning and testing.","title":"React Example","titles":[]},"41":{"href":"/sdk/sequence-kit/03-configuration#configuration-options","html":"</header>\n<p>Developers can customize the Sequence Kit experience by passing configuration options to the <code>KitProvider</code> wrapper.</p>\n<p>Here&#x27;s how you can configure the kit using these options:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> kitConfig</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tdefaultTheme: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;light&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tposition: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;top-left&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">\t\t...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">kitConfig</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>\n<header>","isPage":true,"text":"\nDevelopers can customize the Sequence Kit experience by passing configuration options to the KitProvider wrapper.\nHere&#x27;s how you can configure the kit using these options:\n \n  const kitConfig =  {\n\t\tdefaultTheme: &#x27;light&#x27;,\n\t\tposition: &#x27;top-left&#x27;,\n\t\t...\n\t}\n \n  &lt;KitProvider config={kitConfig}&gt;\n    &lt;App /&gt;\n  &lt;KitProvider&gt;\n \n","title":"Configuration Options","titles":[]},"42":{"href":"/sdk/sequence-kit/03-configuration#available-options","html":"</header>\n","isPage":false,"text":"\n","title":"Available Options","titles":[]},"43":{"href":"/sdk/sequence-kit/03-configuration#defaulttheme","html":"\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>string or object</td><td>dark</td></tr></tbody></table>\n<p>The defaultTheme determines the color palette used for styling the modal. Possible values include:</p>\n<ul>\n<li>&#x27;light&#x27;</li>\n<li>&#x27;dark&#x27;</li>\n<li>object</li>\n</ul>\n<p>Specific colors can be overwritten by passing a theme override object. The <a href=\"https://sequence.build/\">Sequence Builder</a> provides a useful playground for toying with the colors in Sequence Kit.</p>\n","isPage":false,"text":"\nTypeDefaultstring or objectdark\nThe defaultTheme determines the color palette used for styling the modal. Possible values include:\n\n&#x27;light&#x27;\n&#x27;dark&#x27;\nobject\n\nSpecific colors can be overwritten by passing a theme override object. The Sequence Builder provides a useful playground for toying with the colors in Sequence Kit.\n","title":"defaultTheme","titles":["Available Options"]},"44":{"href":"/sdk/sequence-kit/03-configuration#position","html":"\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>string</td><td>center</td></tr></tbody></table>\n<p>The position parameter determines the location of the various modals on the screen. Possible values include:</p>\n<ul>\n<li>center</li>\n<li>middle-right</li>\n<li>middle-left</li>\n<li>top-center</li>\n<li>top-right</li>\n<li>top-left</li>\n<li>bottom-center</li>\n<li>bottom-right</li>\n<li>bottom-left</li>\n</ul>\n","isPage":false,"text":"\nTypeDefaultstringcenter\nThe position parameter determines the location of the various modals on the screen. Possible values include:\n\ncenter\nmiddle-right\nmiddle-left\ntop-center\ntop-right\ntop-left\nbottom-center\nbottom-right\nbottom-left\n\n","title":"position","titles":["Available Options"]},"45":{"href":"/sdk/sequence-kit/03-configuration#sign-in-modal-configuration-signin","html":"\n<p>The <code>signIn</code> object is used to configure the sign in modal.</p>\n","isPage":false,"text":"\nThe signIn object is used to configure the sign in modal.\n","title":"Sign In Modal Configuration (signIn)","titles":["Available Options"]},"46":{"href":"/sdk/sequence-kit/03-configuration#signinlogourl","html":"\n<div><img src=\"/img/kit/dark-mode-logo.png\"/></div>\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>string</td><td>undefined</td></tr></tbody></table>\n<p>URL of the logo to be shown in the sign in modal.</p>\n","isPage":false,"text":"\n\nTypeDefaultstringundefined\nURL of the logo to be shown in the sign in modal.\n","title":"signIn.logoUrl","titles":["Available Options","Sign In Modal Configuration (signIn)"]},"47":{"href":"/sdk/sequence-kit/03-configuration#signinprojectname","html":"\n<div><img src=\"/img/kit/project-name.png\"/></div>\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>string</td><td>undefined</td></tr></tbody></table>\n<p>Name of the project to be shown in the sign in modal.</p>\n","isPage":false,"text":"\n\nTypeDefaultstringundefined\nName of the project to be shown in the sign in modal.\n","title":"signIn.projectName","titles":["Available Options","Sign In Modal Configuration (signIn)"]},"48":{"href":"/sdk/sequence-kit/03-configuration#signinshowemailinput","html":"\n<div><img src=\"/img/kit/email-input.png\"/></div>\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>boolean</td><td>true</td></tr></tbody></table>\n<p>Determines whether the inline email input will be shown in the sign in modal.</p>\n","isPage":false,"text":"\n\nTypeDefaultbooleantrue\nDetermines whether the inline email input will be shown in the sign in modal.\n","title":"signIn.showEmailInput","titles":["Available Options","Sign In Modal Configuration (signIn)"]},"49":{"href":"/sdk/sequence-kit/03-configuration#signinsocialauthoptions","html":"\n<div><img src=\"/img/kit/mini-auth-options.png\"/></div>\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>string[]</td><td>[&#x27;google&#x27;, &#x27;facebook&#x27;, &#x27;twitch&#x27;, &#x27;apple&#x27;]</td></tr></tbody></table>\n<p>Determines which authentication options will be shown as social options in the sign in modal.\nThe wallets will be displayed in the order they are passed in the array. The values correspond to the connector&#x27;s id and a corresponding connector must be passed down to wagmi.</p>\n<p>For a full list of official connectors, see the <a href=\"https://github.com/0xsequence/kit/tree/master/packages/connectors\">connectors</a> page.</p>\n","isPage":false,"text":"\n\nTypeDefaultstring[][&#x27;google&#x27;, &#x27;facebook&#x27;, &#x27;twitch&#x27;, &#x27;apple&#x27;]\nDetermines which authentication options will be shown as social options in the sign in modal.\nThe wallets will be displayed in the order they are passed in the array. The values correspond to the connector&#x27;s id and a corresponding connector must be passed down to wagmi.\nFor a full list of official connectors, see the connectors page.\n","title":"signIn.socialAuthOptions","titles":["Available Options","Sign In Modal Configuration (signIn)"]},"50":{"href":"/sdk/sequence-kit/03-configuration#signinwalletauthoptions","html":"\n<div><img src=\"/img/kit/auth-options.png\"/></div>\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>string[]</td><td>[&#x27;sequence&#x27;, &#x27;metamask&#x27;, &#x27;wallet-connect&#x27;, &#x27;coinbase-wallet&#x27;]</td></tr></tbody></table>\n<p>Determines which authentication options will be shown in the modal as web3 wallet options.\nThe wallets will be displayed in the order they are passed in the array. The values correspond to the connector&#x27;s id and a corresponding connector must be passed down to wagmi.</p>\n<p>For a full list of official connectors, see the <a href=\"https://github.com/0xsequence/kit/tree/master/packages/connectors\">connectors</a> page.</p>\n","isPage":false,"text":"\n\nTypeDefaultstring[][&#x27;sequence&#x27;, &#x27;metamask&#x27;, &#x27;wallet-connect&#x27;, &#x27;coinbase-wallet&#x27;]\nDetermines which authentication options will be shown in the modal as web3 wallet options.\nThe wallets will be displayed in the order they are passed in the array. The values correspond to the connector&#x27;s id and a corresponding connector must be passed down to wagmi.\nFor a full list of official connectors, see the connectors page.\n","title":"signIn.walletAuthOptions","titles":["Available Options","Sign In Modal Configuration (signIn)"]},"51":{"href":"/sdk/sequence-kit/03-configuration#displayedassets","html":"\n<table><thead><tr><th>Type</th><th>Default</th></tr></thead><tbody><tr><td>[{ contractAddress: string, chainId: number }, ...]</td><td>undefined</td></tr></tbody></table>\n<p>If provided, this will determine which assets are to be displayed in the embedded wallet modal main view.\nBy passing a list of displayed assets, only assets from the provided list will be displayed in the main view.\nIn the case that no assets are provided, all owned assets can be displayed in the main view.</p>","isPage":false,"text":"\nTypeDefault[{ contractAddress: string, chainId: number }, ...]undefined\nIf provided, this will determine which assets are to be displayed in the embedded wallet modal main view.\nBy passing a list of displayed assets, only assets from the provided list will be displayed in the main view.\nIn the case that no assets are provided, all owned assets can be displayed in the main view.","title":"displayedAssets","titles":["Available Options"]},"52":{"href":"/sdk/sequence-kit/04-checkout#overview","html":"</header>\n<p>The checkout modal enables developers to easily facilitate cryptocurrency payments.</p>\n<div class=\"text--center\"><img src=\"/img/kit/checkout-modal.png\"/></div>\n<header>","isPage":true,"text":"\nThe checkout modal enables developers to easily facilitate cryptocurrency payments.\n\n","title":"Overview","titles":[]},"53":{"href":"/sdk/sequence-kit/04-checkout#integration","html":"</header>\n<p>To integrate the checkout feature, follow these steps:</p>\n<ol>\n<li>Install the <code>kit-checkout</code> module:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install @0xsequence/kit-checkout</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># or</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install @0xsequence/kit-checkout</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># or</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add @0xsequence/kit-checkout</span></span></code></pre>\n<ol start=\"2\">\n<li>Place the KitCheckoutProvider below the Sequence Kit Core provider in your app:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { KitCheckoutProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit-checkout&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> App</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">config</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">queryClient</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt; </span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitCheckoutProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">Page</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitCheckoutProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nTo integrate the checkout feature, follow these steps:\n\nInstall the kit-checkout module:\n\nnpm install @0xsequence/kit-checkout\n# or\npnpm install @0xsequence/kit-checkout\n# or\nyarn add @0xsequence/kit-checkout\n\nPlace the KitCheckoutProvider below the Sequence Kit Core provider in your app:\n\nimport { KitCheckoutProvider } from &#x27;@0xsequence/kit-checkout&#x27;\n \n \nconst App = () =&gt; {\n  return (\n    &lt;WagmiConfig config={config}&gt;\n      &lt;QueryClientProvider client={queryClient}&gt; \n        &lt;KitProvider&gt;\n          &lt;KitCheckoutProvider&gt;\n            &lt;Page /&gt;\n          &lt;/KitCheckoutProvider&gt;\n        &lt;/KitProvider&gt;\n      &lt;/QueryClientProvider&gt;\n    &lt;/WagmiConfig&gt;\n  )\n}\n","title":"Integration","titles":[]},"54":{"href":"/sdk/sequence-kit/04-checkout#opening-the-checkout-modal","html":"\n<p>Use the <code>useCheckoutModal</code> hook to open the checkout modal and pass a settings object:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useCheckoutModal } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit-checkout&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> MyComponent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">triggerCheckout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useCheckoutModal</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">      const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> checkoutSettings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">      triggerCheckout</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(checkoutSettings)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> onClick</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">onClick</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;checkout&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">button</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span></code></pre>\n","isPage":false,"text":"\nUse the useCheckoutModal hook to open the checkout modal and pass a settings object:\n  import { useCheckoutModal } from &#x27;@0xsequence/kit-checkout&#x27;\n \n \n  const MyComponent = () =&gt; {\n    const { triggerCheckout } = useCheckoutModal()\n  \n    const onClick = () =&gt; {\n      const checkoutSettings = {...}\n      triggerCheckout(checkoutSettings)\n    }\n \n    return (\n      &lt;button onClick={onClick}&gt;checkout&lt;/button&gt;\n    )\n  }\n","title":"Opening the Checkout modal","titles":["Integration"]},"55":{"href":"/sdk/sequence-kit/04-checkout#configuring-the-checkout-modal","html":"\n<p>Configure the checkout modal using the <code>checkoutSettings</code> object:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> checkoutSettings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  cryptoCheckout: {</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  orderSummaryItems: {</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nConfigure the checkout modal using the checkoutSettings object:\nconst checkoutSettings = {\n  cryptoCheckout: {...},\n  orderSummaryItems: {...}\n}\n","title":"Configuring the Checkout modal","titles":["Integration"]},"56":{"href":"/sdk/sequence-kit/04-checkout#crypto-checkout-configuration-cryptocheckout","html":"\n<p>The <code>cryptoCheckout</code> field specifies settings for checking out with cryptocurrency, e.g., interacting with a minting contract or marketplace contract.</p>\n<p>Example configuration:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">cons checkoutConfig </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">  // ...</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  cryptoCheckout: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">137</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    triggerTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;triggered transaction&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    coinQuantity: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      contractAddress: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      amountRequiredRaw: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;10000000000&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe cryptoCheckout field specifies settings for checking out with cryptocurrency, e.g., interacting with a minting contract or marketplace contract.\nExample configuration:\ncons checkoutConfig = {\n  // ...\n  cryptoCheckout: {\n    chainId: 137,\n    triggerTransaction: async () =&gt; { console.log(&#x27;triggered transaction&#x27;) },\n    coinQuantity: {\n      contractAddress: &#x27;0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174&#x27;,\n      amountRequiredRaw: &#x27;10000000000&#x27;\n    },\n  },\n}\n","title":"Crypto Checkout Configuration (cryptoCheckout)","titles":["Integration","Configuring the Checkout modal"]},"57":{"href":"/sdk/sequence-kit/04-checkout#order-summary-configuration-ordersummaryitems","html":"\n<p>The <code>orderSummaryItems</code> field specifies the list of collectibles shown in the order summary.</p>\n<p>Example configuration:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">    orderSummaryItems</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        contractAddress: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x631998e91476da5b870d741192fc5cbc55f5a52e&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        tokenId: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;66597&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        quantityRaw: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;100&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span></code></pre>","isPage":false,"text":"\nThe orderSummaryItems field specifies the list of collectibles shown in the order summary.\nExample configuration:\n    orderSummaryItems: [\n      {\n        contractAddress: &#x27;0x631998e91476da5b870d741192fc5cbc55f5a52e&#x27;,\n        tokenId: &#x27;66597&#x27;,\n        quantityRaw: &#x27;100&#x27;\n      },\n    ]","title":"Order Summary Configuration (orderSummaryItems)","titles":["Integration","Configuring the Checkout modal"]},"58":{"href":"/sdk/sequence-kit/05-custom-connectors#custom-connectors-in-sequence-kit","html":"</header>\n<p>Sequence Kit provides official connectors via the <a href=\"https://github.com/0xsequence/kit/tree/master/packages/connectors\">@0xsequence/kit-connectors</a> package. However, you can also integrate custom connectors with Sequence Kit to support additional wallets. This guide will walk you through creating and using custom connectors.</p>\n","isPage":true,"text":"\nSequence Kit provides official connectors via the @0xsequence/kit-connectors package. However, you can also integrate custom connectors with Sequence Kit to support additional wallets. This guide will walk you through creating and using custom connectors.\n","title":"Custom Connectors in Sequence Kit","titles":[]},"59":{"href":"/sdk/sequence-kit/05-custom-connectors#creating-a-custom-connector","html":"\n<p>To create a custom connector, you can use an existing connector as a basis. For example, the <a href=\"https://github.com/0xsequence/kit/blob/master/packages/connectors/src/connectors/metamask/metamask.ts\">Metamask Connector</a> is a good starting point. Here&#x27;s an example of how to create a custom connector:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> myCustomConnector</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">options</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> MyCustomConnectorOptions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  id: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;my-custom-connector&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;My Custom Connector&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  logoDark: MyCustomLogoDark,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  logoLight: MyCustomLogoLight,</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">  createConnector</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> connector</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> myCustomConnector</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(options);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> connector;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">});</span></span></code></pre>\n<p>Make sure to provide a unique <code>id</code> for your connector to avoid conflicts with other connectors. You can also customize fields such as <code>name</code>, <code>logoDark</code>, and <code>logoLight</code> to control how the connector appears in Sequence Kit.</p>\n<p>The <code>createConnector</code> function should return an initialized connector. Sequence Kit connectors are wrappers of Wagmi connectors, so you can use an official Wagmi connector if available, or create your own if needed.</p>\n<p>For more details on creating custom connectors, refer to <a href=\"https://wagmi.sh/examples/custom-connector\">Wagmi&#x27;s guide on Custom Connectors</a>.</p>\n<header>","isPage":false,"text":"\nTo create a custom connector, you can use an existing connector as a basis. For example, the Metamask Connector is a good starting point. Here&#x27;s an example of how to create a custom connector:\nexport const myCustomConnector = (options: MyCustomConnectorOptions) =&gt; ({\n  id: &#x27;my-custom-connector&#x27;,\n  name: &#x27;My Custom Connector&#x27;,\n  logoDark: MyCustomLogoDark,\n  logoLight: MyCustomLogoLight,\n  createConnector: () =&gt; {\n    const connector = myCustomConnector(options);\n    return connector;\n  },\n});\nMake sure to provide a unique id for your connector to avoid conflicts with other connectors. You can also customize fields such as name, logoDark, and logoLight to control how the connector appears in Sequence Kit.\nThe createConnector function should return an initialized connector. Sequence Kit connectors are wrappers of Wagmi connectors, so you can use an official Wagmi connector if available, or create your own if needed.\nFor more details on creating custom connectors, refer to Wagmi&#x27;s guide on Custom Connectors.\n","title":"Creating a Custom Connector","titles":["Custom Connectors in Sequence Kit"]},"60":{"href":"/sdk/sequence-kit/05-custom-connectors#using-custom-connectors","html":"</header>\n<p>When using custom connectors, you can&#x27;t rely on the <code>getDefaultConnectors</code> utility function. Instead, you need to pass custom configurations to Sequence Kit.</p>\n<p>First, create a list of connectors, including your custom connector, and provide it to the Wagmi configuration:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { getKitConnectWallets } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/kit&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> connectors</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> getKitConnectWallets</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">  google</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    defaultNetwork: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">137</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    connect: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      app: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;my-app&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;&lt;access-key&gt;&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }),</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">  // ... other connectors</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">  myCustomConnector</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ appName: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;my-app&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  transports,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  connectors,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chains</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n<p>Next, use your custom connector by specifying its <code>id</code> in either the <code>socialAuthOptions</code> or <code>walletAuthOptions</code> field of the Sequence Kit configuration:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> kitConfig</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  signIn: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    socialAuthOptions: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;google&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;facebook&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    walletAuthOptions: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;metamask&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;my-custom-connector&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">wagmiConfig</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> client</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">queryClient</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> config</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#F47067\">{</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">kitConfig</span><span style=\"color:#24292E;--shiki-dark:#F47067\">}</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        &lt;</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">KitProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">QueryClientProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  &lt;/</span><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">WagmiConfig</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<header>","isPage":false,"text":"\nWhen using custom connectors, you can&#x27;t rely on the getDefaultConnectors utility function. Instead, you need to pass custom configurations to Sequence Kit.\nFirst, create a list of connectors, including your custom connector, and provide it to the Wagmi configuration:\nimport { getKitConnectWallets } from &#x27;@0xsequence/kit&#x27;;\n \nconst connectors = getKitConnectWallets([\n  google({\n    defaultNetwork: 137,\n    connect: {\n      app: &#x27;my-app&#x27;,\n      projectAccessKey: &#x27;&lt;access-key&gt;&#x27;\n    }\n  }),\n  // ... other connectors\n  myCustomConnector({ appName: &#x27;my-app&#x27; }),\n]);\n \nconst config = createConfig({\n  transports,\n  connectors,\n  chains\n})\nNext, use your custom connector by specifying its id in either the socialAuthOptions or walletAuthOptions field of the Sequence Kit configuration:\nconst kitConfig = {\n  signIn: {\n    socialAuthOptions: [&#x27;google&#x27;, &#x27;facebook&#x27;],\n    walletAuthOptions: [&#x27;metamask&#x27;, &#x27;my-custom-connector&#x27;],\n  }\n};\n \nreturn (\n  &lt;WagmiConfig config={wagmiConfig}&gt;\n    &lt;QueryClientProvider client={queryClient}&gt;\n      &lt;KitProvider config={kitConfig}&gt;\n        &lt;App /&gt;\n      &lt;/KitProvider&gt;\n    &lt;/QueryClientProvider&gt;\n  &lt;/WagmiConfig&gt;\n);\n","title":"Using Custom Connectors","titles":[]},"61":{"href":"/sdk/sequence-kit/05-custom-connectors#share-your-custom-connectors","html":"</header>\n<p>Feel free to contribute your custom connectors by creating a <a href=\"https://github.com/0xsequence/kit/pulls\">pull request</a>. This way, others can benefit from your work and enjoy seamless integration with Sequence Kit.</p>\n<p>Share the love ❤️ by expanding the ecosystem of custom connectors!</p>","isPage":false,"text":"\nFeel free to contribute your custom connectors by creating a pull request. This way, others can benefit from your work and enjoy seamless integration with Sequence Kit.\nShare the love ❤️ by expanding the ecosystem of custom connectors!","title":"Share Your Custom Connectors","titles":[]},"62":{"href":"/solutions/builder/contracts#contracts-in-builder","html":"</header>\n<p>Sequence Builder simplifies smart contract deployment and management with a suite of user-friendly features. Import, deploy, and add contract collaborators to a smart contract in the contracts dashboard and interact directly with your contract.</p>\n","isPage":true,"text":"\nSequence Builder simplifies smart contract deployment and management with a suite of user-friendly features. Import, deploy, and add contract collaborators to a smart contract in the contracts dashboard and interact directly with your contract.\n","title":"Contracts in Builder","titles":[]},"63":{"href":"/solutions/builder/contracts#what-are-my-deployment-options","html":"\n<p>Deployment of contracts with Sequence Builder is simplified through a streamlined process directly within our dashboard. Choose from various contract templates (ERC1155, ERC721, ERC20). The Builder also gives you the option to upload your own custom contracts - saved to your project - and can be deployed directly to a network of your choosing.</p>\n","isPage":false,"text":"\nDeployment of contracts with Sequence Builder is simplified through a streamlined process directly within our dashboard. Choose from various contract templates (ERC1155, ERC721, ERC20). The Builder also gives you the option to upload your own custom contracts - saved to your project - and can be deployed directly to a network of your choosing.\n","title":"What are my deployment options?","titles":["Contracts in Builder",null,null,null]},"64":{"href":"/solutions/builder/contracts#what-contract-interactions-can-i-do","html":"\n<p>Sequence Builder provides a comprehensive contract dashboard, allowing users to explore and monitor various smart contract activities like transactions, balance, and tokens. Performing read and executing write operations on contracts becomes effortless, making it easy for actions such as minting and collaborations.</p>\n","isPage":false,"text":"\nSequence Builder provides a comprehensive contract dashboard, allowing users to explore and monitor various smart contract activities like transactions, balance, and tokens. Performing read and executing write operations on contracts becomes effortless, making it easy for actions such as minting and collaborations.\n","title":"What contract interactions can I do?","titles":["Contracts in Builder",null,null,null]},"65":{"href":"/solutions/builder/contracts#watch-a-contract-be-deployed-with-builder","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_deploy_contracts.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/03_Contracts.mp4\" type=\"video/mp4\"></video></div>\n","isPage":false,"text":"\n\n","title":"Watch a Contract be deployed with Builder","titles":["Contracts in Builder"]},"66":{"href":"/solutions/builder/contracts#add-contract-collaborators-to-audited-contracts","html":"\n<p>Once you have a contract selected from one of the templates deployed, you can navigate to the specific contract and select the settings to view Permissions.</p>\n<p><img src=\"/img/builder/builder_contract_specific_settings.png\" alt=\"contract settings\"/></p>\n<p>Once you have the modal open, select the <code>Permissions</code> tab and you can <code>Edit</code>, or, <code>+ Add Collaborator</code>.</p>\n<p><img src=\"/img/builder/builder_contract_specific_permissions.png\" alt=\"add collaborator\"/></p>\n<p>Then complete the form with the user&#x27;s address you want to add as a collaborator and select the dropdown to assign a new role.</p>\n","isPage":false,"text":"\nOnce you have a contract selected from one of the templates deployed, you can navigate to the specific contract and select the settings to view Permissions.\n\nOnce you have the modal open, select the Permissions tab and you can Edit, or, + Add Collaborator.\n\nThen complete the form with the user&#x27;s address you want to add as a collaborator and select the dropdown to assign a new role.\n","title":"Add Contract Collaborators to Audited Contracts","titles":["Contracts in Builder"]},"67":{"href":"/solutions/builder/contracts#possible-roles","html":"\n<ul>\n<li>Admin: Can update roles</li>\n<li>Minter: Can mint tokens</li>\n<li>Mint Admin: Can set minting logic</li>\n<li>Withdraw: Withdraw tokens from the contract</li>\n<li>Metadata Admin: Can update metadata</li>\n</ul>\n<p><img src=\"/img/builder/builder_contract_permissions_dropdown.png\" alt=\"assign role\"/></p>\n<p>Finally, complete and sign the transaction to be deployed to the network the contract is deployed on.</p>\n<p><img src=\"/img/builder/builder_contract_permissions_transaction.png\" alt=\"complete transaction\"/></p>","isPage":false,"text":"\n\nAdmin: Can update roles\nMinter: Can mint tokens\nMint Admin: Can set minting logic\nWithdraw: Withdraw tokens from the contract\nMetadata Admin: Can update metadata\n\n\nFinally, complete and sign the transaction to be deployed to the network the contract is deployed on.\n","title":"Possible roles","titles":["Contracts in Builder","Add Contract Collaborators to Audited Contracts",null,null]},"68":{"href":"/solutions/builder/gas-tank#gas-tank-in-builder","html":"</header>\n<p>Sequence wallets are controlled by smart contracts, enabling transaction fees to be abstracted away from users, a concept known in web3 as <em>gas</em>. With Sequence Builder&#x27;s Gas Tank, you have a streamlined process for sponsoring gas for your users.</p>\n","isPage":true,"text":"\nSequence wallets are controlled by smart contracts, enabling transaction fees to be abstracted away from users, a concept known in web3 as gas. With Sequence Builder&#x27;s Gas Tank, you have a streamlined process for sponsoring gas for your users.\n","title":"Gas Tank in Builder","titles":[]},"69":{"href":"/solutions/builder/gas-tank#why-would-i-want-to-sponsor-gas-for-my-game","html":"\n<p>Obtaining the crypto needed to cover fees poses a challenge for traditional gamers. Sponsoring gas on their behalf solves this problem.</p>\n<p>Gas sponsoring in a web3 game provides seamless onboarding by removing gas fees, making transactions efficient and cost-effective for trading virtual assets in various in-game activities. This creates a more enjoyable gaming experience, fostering player loyalty and community engagement.</p>\n","isPage":false,"text":"\nObtaining the crypto needed to cover fees poses a challenge for traditional gamers. Sponsoring gas on their behalf solves this problem.\nGas sponsoring in a web3 game provides seamless onboarding by removing gas fees, making transactions efficient and cost-effective for trading virtual assets in various in-game activities. This creates a more enjoyable gaming experience, fostering player loyalty and community engagement.\n","title":"Why would I want to sponsor gas for my game?","titles":["Gas Tank in Builder",null,null,null]},"70":{"href":"/solutions/builder/gas-tank#sponsoring-gas-with-the-gas-tank","html":"\n<p>Sponsoring gas on contracts is easy, and can be done either by searching and adding a contract or selecting a contract that you have already deployed on a project. Project owners also have control over the contracts they sponsor, allowing them to temporarily disable a sponsor for a specific contract by toggling it off and updating the sponsor settings.</p>\n<p>There are a few options to fund sponsored gas, including a credit card checkout that makes paying for gas simple.</p>\n","isPage":false,"text":"\nSponsoring gas on contracts is easy, and can be done either by searching and adding a contract or selecting a contract that you have already deployed on a project. Project owners also have control over the contracts they sponsor, allowing them to temporarily disable a sponsor for a specific contract by toggling it off and updating the sponsor settings.\nThere are a few options to fund sponsored gas, including a credit card checkout that makes paying for gas simple.\n","title":"Sponsoring gas with the Gas Tank","titles":["Gas Tank in Builder",null,null,null]},"71":{"href":"/solutions/builder/gas-tank#watch-the-gas-tank-in-action-in-builder","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_sponsor_gas.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/05_Gas_Tank.mp4\" type=\"video/mp4\"></video></div>","isPage":false,"text":"\n","title":"Watch the Gas Tank in action in Builder","titles":["Gas Tank in Builder"]},"72":{"href":"/solutions/builder/getting-started#get-started","html":"</header>\n<p>Signing up and creating a project is easy to do with Sequence Builder and should take you less than a minute. In this tutorial, we will help you sign up for Builder and then create your first project.</p>\n<p>Let&#x27;s get started!</p>\n","isPage":true,"text":"\nSigning up and creating a project is easy to do with Sequence Builder and should take you less than a minute. In this tutorial, we will help you sign up for Builder and then create your first project.\nLet&#x27;s get started!\n","title":"Get Started","titles":[]},"73":{"href":"/solutions/builder/getting-started#sign-up-for-builder","html":"\n","isPage":false,"text":"\n","title":"Sign up for Builder","titles":["Get Started"]},"74":{"href":"/solutions/builder/getting-started#step-1-go-to-sequencebuild","html":"\n<p>Go to <a href=\"https://sequence.build/\">Sequence.Build</a> and click on the <code>Start Building</code> button to get started.</p>\n<p><img src=\"/img/builder/builder_landing_page_signup_project.png\" alt=\"Sequence builder landing page\"/></p>\n","isPage":false,"text":"\nGo to Sequence.Build and click on the Start Building button to get started.\n\n","title":"Step 1: Go to sequence.build","titles":["Get Started","Sign up for Builder"]},"75":{"href":"/solutions/builder/getting-started#step-2-choose-a-sign-in-method","html":"\n<p>When you first sign in to Builder, a wallet is created for you.</p>\n<p>You may, however, already have a Sequence wallet. If you are signed in with that wallet, you will see an option to use it. This is a great way to get started.</p>\n<p>Without a wallet, you will be given a few options to sign in. You can use any of the social sign ins, or you can simply use your email to get started.</p>\n<p><img src=\"/img/builder/builder_choose_signin_signup_project.png\" alt=\"Sequence builder choose signin\"/></p>\n","isPage":false,"text":"\nWhen you first sign in to Builder, a wallet is created for you.\nYou may, however, already have a Sequence wallet. If you are signed in with that wallet, you will see an option to use it. This is a great way to get started.\nWithout a wallet, you will be given a few options to sign in. You can use any of the social sign ins, or you can simply use your email to get started.\n\n","title":"Step 2: Choose a sign in method","titles":["Get Started","Sign up for Builder"]},"76":{"href":"/solutions/builder/getting-started#step-3-sign-in-to-sequencebuild","html":"\n<p>After choosing how you would like to sign in, you will be presented with the terms of use. To read the <code>Terms of Use</code>, <code>Privacy Policy</code>, and <code>Master Services Agreement</code>, click on the respective links for each.</p>\n<p><img src=\"/img/builder/builder_accept_terms_signup_project.png\" alt=\"Sequence builder accept terms\"/></p>\n<p>Once you have read each, click through to continue.</p>\n<p>You are now signed in to Builder!</p>\n","isPage":false,"text":"\nAfter choosing how you would like to sign in, you will be presented with the terms of use. To read the Terms of Use, Privacy Policy, and Master Services Agreement, click on the respective links for each.\n\nOnce you have read each, click through to continue.\nYou are now signed in to Builder!\n","title":"Step 3: Sign in to sequence.build","titles":["Get Started","Sign up for Builder"]},"77":{"href":"/solutions/builder/getting-started#create-a-project","html":"\n<p>Everything you do in Builder is centered around each project - so let&#x27;s start one.</p>\n<p>The easiest way to start a project is to simply click <code>+ Create Project</code>.</p>\n<p><img src=\"/img/builder/builder_dashboard_signup_project.png\" alt=\"Sequence builder dashboard\"/></p>\n","isPage":false,"text":"\nEverything you do in Builder is centered around each project - so let&#x27;s start one.\nThe easiest way to start a project is to simply click + Create Project.\n\n","title":"Create a Project","titles":["Get Started"]},"78":{"href":"/solutions/builder/getting-started#step-1-enter-the-project-details","html":"\n<p>A modal will pop up, allowing you to enter details about your project. Provide a project name and, if you like, add an avatar for the project.</p>\n<p>Select the network(s) on which you would like to start deploying. This can always be changed later.</p>\n<p><img src=\"/img/builder/builder_enter_details_signup_project.png\" alt=\"Sequence builder enter details\"/></p>\n","isPage":false,"text":"\nA modal will pop up, allowing you to enter details about your project. Provide a project name and, if you like, add an avatar for the project.\nSelect the network(s) on which you would like to start deploying. This can always be changed later.\n\n","title":"Step 1: Enter the project details","titles":["Get Started","Create a Project"]},"79":{"href":"/solutions/builder/getting-started#step-2-create-the-project","html":"\n<p>Now hit the <code>Create new Project</code> button!</p>\n<p><img src=\"/img/builder/builder_project_created_signup_project.png\" alt=\"Sequence builder project created\"/></p>\n<p>Once you finish, you should now be viewing your project dashboard.</p>\n","isPage":false,"text":"\nNow hit the Create new Project button!\n\nOnce you finish, you should now be viewing your project dashboard.\n","title":"Step 2: Create the project!","titles":["Get Started","Create a Project"]},"80":{"href":"/solutions/builder/getting-started#build-things","html":"\n<p>Now that you have created a project, there is so much you can do from here! You can start exploring from your dashboard or feel free to follow along on one of these guides.</p>\n<p>TODO: Card list</p>","isPage":false,"text":"\nNow that you have created a project, there is so much you can do from here! You can start exploring from your dashboard or feel free to follow along on one of these guides.\nTODO: Card list","title":"Build things!","titles":["Get Started"]},"81":{"href":"/solutions/builder/indexer#indexer-in-builder","html":"</header>\n<p>Sequence Builder equips game builders with an indexer that collects data from the following networks: Ethereum (and Sepolia), Optimism, Base, Gnosis Chain, Polygon (and Polygon Mumbai), Polygon zkEVM, Arbitrum One, Arbitrum Nova, Gnosis Chain, BNB Smart Chain (and Smart Chain Testnet), Avalanche (and Avalanche Testnet), Oasys Homeverse (and Oasys Homeverse Testnet).</p>\n","isPage":true,"text":"\nSequence Builder equips game builders with an indexer that collects data from the following networks: Ethereum (and Sepolia), Optimism, Base, Gnosis Chain, Polygon (and Polygon Mumbai), Polygon zkEVM, Arbitrum One, Arbitrum Nova, Gnosis Chain, BNB Smart Chain (and Smart Chain Testnet), Avalanche (and Avalanche Testnet), Oasys Homeverse (and Oasys Homeverse Testnet).\n","title":"Indexer in Builder","titles":[]},"82":{"href":"/solutions/builder/indexer#what-data-can-i-query-for-my-game","html":"\n<p>Builder takes the stress out of gathering on-chain data for your game. Simply select the data you want from the indexer, and it generates the necessary code in snippets.</p>\n<p>Fetch different kinds of data from the indexer:</p>\n<ul>\n<li>tokens and collectibles owned by any wallet</li>\n<li>total supply for any token or collectible</li>\n<li>the transaction and transfer history for any wallet address</li>\n<li>contract metadata for any token or collection</li>\n<li>metadata for any collectible</li>\n<li>balance change events for any token or collection</li>\n</ul>\n","isPage":false,"text":"\nBuilder takes the stress out of gathering on-chain data for your game. Simply select the data you want from the indexer, and it generates the necessary code in snippets.\nFetch different kinds of data from the indexer:\n\ntokens and collectibles owned by any wallet\ntotal supply for any token or collectible\nthe transaction and transfer history for any wallet address\ncontract metadata for any token or collection\nmetadata for any collectible\nbalance change events for any token or collection\n\n","title":"What data can I query for my game?","titles":["Indexer in Builder",null,null]},"83":{"href":"/solutions/builder/indexer#how-much-code-will-i-have-to-write-to-query","html":"\n<p>Sequence Indexer offers several features that level-up your on-chain data capabilities without writing a line of code. It boasts a user-friendly interface that you can use to fetch important data, like the tokens owned by a specific wallet under a specific contract, for instance.</p>\n","isPage":false,"text":"\nSequence Indexer offers several features that level-up your on-chain data capabilities without writing a line of code. It boasts a user-friendly interface that you can use to fetch important data, like the tokens owned by a specific wallet under a specific contract, for instance.\n","title":"How much code will I have to write to query?","titles":["Indexer in Builder",null,null]},"84":{"href":"/solutions/builder/indexer#watch-the-indexer-grab-on-chain-data","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_indexer_preview_video.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/08_Indexer.mp4\" type=\"video/mp4\"></video></div>","isPage":false,"text":"\n","title":"Watch the Indexer grab on-chain data","titles":["Indexer in Builder"]},"85":{"href":"/solutions/builder/marketplaces#launch-your-white-label-marketplace","html":"</header>\n<p>Sequence Builder provides game builders with a white-label marketplace that can be launched in seconds. With Builder, you can customize your marketplace and integrate it directly into your game experience, all with no-coding experience necessary.</p>\n","isPage":true,"text":"\nSequence Builder provides game builders with a white-label marketplace that can be launched in seconds. With Builder, you can customize your marketplace and integrate it directly into your game experience, all with no-coding experience necessary.\n","title":"Launch your white-label marketplace","titles":[]},"86":{"href":"/solutions/builder/marketplaces#try-it-out","html":"\n<aside data-callout=\"info\"><p>Get started quickly at <a href=\"https://sequence.build/\">Sequence Builder</a> to launch your marketplace.</p></aside>\n","isPage":false,"text":"\nGet started quickly at Sequence Builder to launch your marketplace.\n","title":"Try it out","titles":["Launch your white-label marketplace"]},"87":{"href":"/solutions/builder/marketplaces#why-would-i-want-my-own-marketplace-for-my-web3-game","html":"\n<p>Builder gives you full control over everything in your marketplace, from enforcing royalties (with ERC-2981) to\nchoosing the best trading mechanism for your community, setting fees, and more.\nYou can also aggregate listings from major platforms like OpenSea or LooksRare, providing you with the benefit of existing liquidity without relinquishing control of the gaming experience.</p>\n","isPage":false,"text":"\nBuilder gives you full control over everything in your marketplace, from enforcing royalties (with ERC-2981) to\nchoosing the best trading mechanism for your community, setting fees, and more.\nYou can also aggregate listings from major platforms like OpenSea or LooksRare, providing you with the benefit of existing liquidity without relinquishing control of the gaming experience.\n","title":"Why would I want my own Marketplace for my web3 game?","titles":["Launch your white-label marketplace","Try it out",null,null]},"88":{"href":"/solutions/builder/marketplaces#watch-a-marketplace-be-launched-in-minutes","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_marketplace_preview_video.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/07_Marketplace.mp4\" type=\"video/mp4\"></video></div>","isPage":false,"text":"\n","title":"Watch a Marketplace be launched in minutes","titles":["Launch your white-label marketplace"]},"89":{"href":"/solutions/builder/node-gateway#node-gateway-in-builder","html":"</header>\n<p>Sequence Builder offers a comprehensive Node Gateway dashboard that provides you with all the information needed to manage your node infrastructure, from compatibility with your favorite Web3 module to your requirement for real-time performant data for your game.</p>\n","isPage":true,"text":"\nSequence Builder offers a comprehensive Node Gateway dashboard that provides you with all the information needed to manage your node infrastructure, from compatibility with your favorite Web3 module to your requirement for real-time performant data for your game.\n","title":"Node Gateway in Builder","titles":[]},"90":{"href":"/solutions/builder/node-gateway#what-kind-of-performance-can-i-expect-for-my-game","html":"\n<p>Sequence Node Gateway is engineered to power your gaming infrastructure. Node Gateway aggregates multiple node providers, auto-switching between them to ensure correct and in sync data availability — giving you the assurance that your decentralized applications run smoothly with low latency for your players.</p>\n<p>No need to worry about peak traffic – our node infrastructure is robust, offering higher scalability and fault tolerance. Additionally, we provide automatic node failure detection and recovery.</p>\n","isPage":false,"text":"\nSequence Node Gateway is engineered to power your gaming infrastructure. Node Gateway aggregates multiple node providers, auto-switching between them to ensure correct and in sync data availability — giving you the assurance that your decentralized applications run smoothly with low latency for your players.\nNo need to worry about peak traffic – our node infrastructure is robust, offering higher scalability and fault tolerance. Additionally, we provide automatic node failure detection and recovery.\n","title":"What kind of performance can I expect for my game?","titles":["Node Gateway in Builder",null,null,null]},"91":{"href":"/solutions/builder/node-gateway#what-can-you-do-to-simplify-the-integration-process-for-me","html":"\n<p>We&#x27;ve designed our dashboard to automatically generate API access keys and URLs for each network you have enabled in settings. This makes it easy to import the URL into your preferred Web3 npm module. Additionally, our dashboard makes it easy to monitor your compute usage and credit consumption.</p>\n","isPage":false,"text":"\nWe&#x27;ve designed our dashboard to automatically generate API access keys and URLs for each network you have enabled in settings. This makes it easy to import the URL into your preferred Web3 npm module. Additionally, our dashboard makes it easy to monitor your compute usage and credit consumption.\n","title":"What can you do to simplify the integration process for me?","titles":["Node Gateway in Builder",null,null,null]},"92":{"href":"/solutions/builder/node-gateway#watch-a-node-gateway-integration","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_node_gateway_preview_video.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/06_Node_Gateway.mp4\" type=\"video/mp4\"></video></div>","isPage":false,"text":"\n","title":"Watch a Node Gateway integration","titles":["Node Gateway in Builder"]},"93":{"href":"/solutions/builder/overview#sequence-builder","html":"</header>\n<p><a href=\"https://sequence.build/\">Builder</a> is Sequence&#x27;s all-inclusive tool for managing your projects, API keys, as well as contract and marketplace deployments. It also provides user access management so multiple people in your team can easily work on the same project. In addition to these powerful features, Builder also provides easy to use interfaces for managing sponsored wallets with your gas tank, and integration tools for SequenceKit, Node Gateway and Indexer.</p>\n<p>To learn more about how to leverage the powerful features of the Builder, follow the guides below.</p>\n<p>TODO: implement card section</p>","isPage":true,"text":"\nBuilder is Sequence&#x27;s all-inclusive tool for managing your projects, API keys, as well as contract and marketplace deployments. It also provides user access management so multiple people in your team can easily work on the same project. In addition to these powerful features, Builder also provides easy to use interfaces for managing sponsored wallets with your gas tank, and integration tools for SequenceKit, Node Gateway and Indexer.\nTo learn more about how to leverage the powerful features of the Builder, follow the guides below.\nTODO: implement card section","title":"Sequence Builder","titles":[]},"94":{"href":"/solutions/builder/project-management#project-management","html":"</header>\n<p>Creation of projects is seamless in just several clicks. This process requires no KYC, only that users comply with Global <a href=\"https://support.sequence.xyz/en/article/sequence-list-of-restricted-regions-1eked2s/\">regulations and policies</a>, and an agreement to the platforms&#x27; terms of service.</p>\n","isPage":true,"text":"\nCreation of projects is seamless in just several clicks. This process requires no KYC, only that users comply with Global regulations and policies, and an agreement to the platforms&#x27; terms of service.\n","title":"Project Management","titles":[]},"95":{"href":"/solutions/builder/project-management#project-name","html":"\n<p>Choose a <code>project name</code> - something playful, serious, or just something unique to distinguish your new project amongst the other projects linked to your wallet.</p>\n","isPage":false,"text":"\nChoose a project name - something playful, serious, or just something unique to distinguish your new project amongst the other projects linked to your wallet.\n","title":"Project Name","titles":["Project Management",null,null,null]},"96":{"href":"/solutions/builder/project-management#avatar","html":"\n<p>Upload a custom <code>avatar</code> to your project that displays aspects of your identity you want to be included as part of your project, or, something specific to the theme of what you&#x27;re building. <a href=\"/solutions/builder/project-settings#watch-how-to-invite-collaborators\">You can always update your collaborators</a>  and coordinate across the internet so Avatars can be a stepping stone to trust.</p>\n","isPage":false,"text":"\nUpload a custom avatar to your project that displays aspects of your identity you want to be included as part of your project, or, something specific to the theme of what you&#x27;re building. You can always update your collaborators  and coordinate across the internet so Avatars can be a stepping stone to trust.\n","title":"Avatar","titles":["Project Management",null,null,null]},"97":{"href":"/solutions/builder/project-management#configure-networks","html":"\n<p>Configure 1 or multiple <code>networks</code> for a single project from the 11 offered production / mainnet networks, or, 8 test networks, with a simple flip of a toggle. At any point, the networks for your project chosen can be updated in the settings.</p>\n<p>All 3 of these values: <code>Project name</code>, your <code>avatar</code>, and your configured <code>networks</code> can be changed later.</p>\n","isPage":false,"text":"\nConfigure 1 or multiple networks for a single project from the 11 offered production / mainnet networks, or, 8 test networks, with a simple flip of a toggle. At any point, the networks for your project chosen can be updated in the settings.\nAll 3 of these values: Project name, your avatar, and your configured networks can be changed later.\n","title":"Configure networks","titles":["Project Management",null,null,null]},"98":{"href":"/solutions/builder/project-management#watch-a-project-be-created-in-the-builder","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_start_a_new_project.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/02_Project_Management.mp4\" type=\"video/mp4\"></video></div>","isPage":false,"text":"\n","title":"Watch a Project be created in the Builder","titles":["Project Management"]},"99":{"href":"/solutions/builder/project-settings#settings-in-builder","html":"</header>\n","isPage":true,"text":"\n","title":"Settings in Builder","titles":[]},"100":{"href":"/solutions/builder/project-settings#settings-options","html":"\n<p>There are various actions available for your project in Settings of Sequence Builder.</p>\n<p>The Settings section in Sequence Builder is categorized into five smaller sections:</p>\n<ol>\n<li><strong>General</strong>: Update your <a href=\"/solutions/builder/project-settings#project-name\">project name</a> or <a href=\"/solutions/builder/project-settings#avatar\">avatar</a></li>\n<li><strong>Collaborators</strong>: Add <a href=\"/solutions/builder/project-settings#add-a-collaborator\">collaborators</a> or create <a href=\"/solutions/builder/project-settings#create-an-invite-link\">invite links</a></li>\n<li><strong>Networks</strong>: Update the <a href=\"/solutions/builder/project-settings#3-network-settings\">networks</a> your project is using</li>\n<li><strong>API Access Keys</strong>: Create <a href=\"/solutions/builder/project-settings#create-a-new-api-access-key\">new keys</a> and <a href=\"/solutions/builder/project-settings#update-api-access-settings-of-a-key\">configure existing keys</a></li>\n<li><strong>Billing</strong>: Update your <a href=\"/solutions/builder/project-settings#update-your-project-subscription-plan\">project plan</a> or set <a href=\"/solutions/builder/project-settings#set-your-overage-limit\">overage limits</a></li>\n</ol>\n<p>The final action you can take in settings is to <a href=\"/solutions/builder/project-settings#delete-a-project\">delete your project</a>.</p>\n<p>Settings are configured per project, so let&#x27;s start by navigating to the settings of a specific project.</p>\n<hr/>\n","isPage":false,"text":"\nThere are various actions available for your project in Settings of Sequence Builder.\nThe Settings section in Sequence Builder is categorized into five smaller sections:\n\nGeneral: Update your project name or avatar\nCollaborators: Add collaborators or create invite links\nNetworks: Update the networks your project is using\nAPI Access Keys: Create new keys and configure existing keys\nBilling: Update your project plan or set overage limits\n\nThe final action you can take in settings is to delete your project.\nSettings are configured per project, so let&#x27;s start by navigating to the settings of a specific project.\n\n","title":"Settings Options","titles":["Settings in Builder"]},"101":{"href":"/solutions/builder/project-settings#getting-to-settings-in-builder","html":"\n","isPage":false,"text":"\n","title":"Getting to Settings in Builder","titles":["Settings in Builder"]},"102":{"href":"/solutions/builder/project-settings#select-a-project","html":"\n<p>When you log into Sequence Builder, you will see a list of projects. If you haven&#x27;t created a project yet, do so now.</p>\n<p>Begin by selecting a project.</p>\n<p><img src=\"/img/builder/select-project.png\" alt=\"Builder select Project\"/></p>\n","isPage":false,"text":"\nWhen you log into Sequence Builder, you will see a list of projects. If you haven&#x27;t created a project yet, do so now.\nBegin by selecting a project.\n\n","title":"Select a Project","titles":["Settings in Builder","Getting to Settings in Builder",null]},"103":{"href":"/solutions/builder/project-settings#go-to-settings","html":"\n<p>Now that you are in your project dashboard, click on &#x27;Settings&#x27; on the left side of the screen.</p>\n<p><img src=\"/img/builder/select-settings.png\" alt=\"Builder select Settings\"/></p>\n<p>Within settings, you will find the five smaller sections covered in this guide.</p>\n<hr/>\n","isPage":false,"text":"\nNow that you are in your project dashboard, click on &#x27;Settings&#x27; on the left side of the screen.\n\nWithin settings, you will find the five smaller sections covered in this guide.\n\n","title":"Go to Settings","titles":["Settings in Builder","Getting to Settings in Builder",null]},"104":{"href":"/solutions/builder/project-settings#1-general-settings","html":"\n<p>Open your General settings.</p>\n<p><img src=\"/img/solutions/builder/project-settings-select-general.png\" alt=\"Builder settings select General\"/></p>\n<p>In General settings, you will find a couple of options.</p>\n","isPage":false,"text":"\nOpen your General settings.\n\nIn General settings, you will find a couple of options.\n","title":"1. General Settings","titles":["Settings in Builder"]},"105":{"href":"/solutions/builder/project-settings#project-name","html":"\n<p>The first option is to change your Project Name. To do so, enter a new project name in the field and hit the <code>Update</code> button to save.</p>\n","isPage":false,"text":"\nThe first option is to change your Project Name. To do so, enter a new project name in the field and hit the Update button to save.\n","title":"Project Name","titles":["Settings in Builder","1. General Settings",null,"Go to Settings"]},"106":{"href":"/solutions/builder/project-settings#avatar","html":"\n<p>The second option allows you to modify your Project Avatar, visible in the top left corner of your project on the dashboard. Click the Avatar field to choose an image and then press the <code>Update</code> button to save your changes.</p>\n<p><img src=\"/img/solutions/builder/project-settings-general.png\" alt=\"Builder settings General\"/></p>\n<hr/>\n","isPage":false,"text":"\nThe second option allows you to modify your Project Avatar, visible in the top left corner of your project on the dashboard. Click the Avatar field to choose an image and then press the Update button to save your changes.\n\n\n","title":"Avatar","titles":["Settings in Builder","1. General Settings",null,"Go to Settings"]},"107":{"href":"/solutions/builder/project-settings#2-collaborator-settings","html":"\n<p>Collaborators for any project can be added and deleted.</p>\n<p>You can either follow this below section, or, skip ahead to the <a href=\"/solutions/builder/project-settings#watch-how-to-invite-collaborators\">video</a> for inviting collaborators.</p>\n<p>Start, by opening your Collaborators settings.</p>\n<p><img src=\"/img/solutions/builder/project-settings-select-collaborators.png\" alt=\"Builder settings select Collaborators\"/></p>\n<p>In the Collaborator settings, you have two methods to add collaborators to your project.</p>\n<p>The first method is to directly add collaborators by entering their information and selecting their access level.</p>\n<p>The second method is to create an invite link. When using this option, you can specify the access level, link duration, and optional usage limits.</p>\n<p>Let&#x27;s walk through each of these.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators.png\" alt=\"Builder settings Collaborators\"/></p>\n","isPage":false,"text":"\nCollaborators for any project can be added and deleted.\nYou can either follow this below section, or, skip ahead to the video for inviting collaborators.\nStart, by opening your Collaborators settings.\n\nIn the Collaborator settings, you have two methods to add collaborators to your project.\nThe first method is to directly add collaborators by entering their information and selecting their access level.\nThe second method is to create an invite link. When using this option, you can specify the access level, link duration, and optional usage limits.\nLet&#x27;s walk through each of these.\n\n","title":"2. Collaborator Settings","titles":["Settings in Builder"]},"108":{"href":"/solutions/builder/project-settings#add-a-collaborator","html":"\n<p>To add a collaborator, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#2-collaborator-settings\">Collaborators</a> section.</p>\n<p>Start by clicking on the <code>Add Collaborator</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-select-add-collaborator.png\" alt=\"Builder settings Collaborators select Add Collaborator\"/></p>\n<p>Enter a wallet address in the user address field, and then select the access level you want using the role dropdown.</p>\n<p>Finish by clicking the <code>Add new Collaborator</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-add-collaborator-modal.png\" alt=\"Builder settings Collaborators Add Collaborator modal\"/></p>\n<p>To confirm, you should see your new collaborator in the dashboard, including their wallet address and access level.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-confirm-collaborator.png\" alt=\"Builder settings Collaborators confirm collaborator\"/></p>\n","isPage":false,"text":"\nTo add a collaborator, make sure you have selected the correct project, accessed Settings, and are in the Collaborators section.\nStart by clicking on the Add Collaborator button.\n\nEnter a wallet address in the user address field, and then select the access level you want using the role dropdown.\nFinish by clicking the Add new Collaborator button.\n\nTo confirm, you should see your new collaborator in the dashboard, including their wallet address and access level.\n\n","title":"Add a Collaborator","titles":["Settings in Builder","2. Collaborator Settings"]},"109":{"href":"/solutions/builder/project-settings#create-an-invite-link","html":"\n<p>To create an invite link, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#2-collaborator-settings\">Collaborators</a> section.</p>\n<p>Start by click on the the <code>Create Invite Link</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-select-create-invite-link.png\" alt=\"Builder settings Collaborators select Create Invite Link\"/></p>\n<p>Start by selecting the access level you want your invite link to give: Read, Write, or Admin.</p>\n<p>Enter the number of collaborators you want this link to be limitted to (setting a limit is optional).</p>\n<p>Finally, select the amount of time you want this link to be valid: a day, 3 days, or a week.</p>\n<p>Finish by clicking the <code>Create Link</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-create-invite-link-modal.png\" alt=\"Builder settings Collaborators Create Invite Link modal\"/></p>\n<p>To confirm, you should see your invite link in the dashboard, including the access level, limit, date created, and time remaining until it expires.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-confirm-invite-link.png\" alt=\"Builder settings Collaborators confirm invite link\"/></p>\n","isPage":false,"text":"\nTo create an invite link, make sure you have selected the correct project, accessed Settings, and are in the Collaborators section.\nStart by click on the the Create Invite Link button.\n\nStart by selecting the access level you want your invite link to give: Read, Write, or Admin.\nEnter the number of collaborators you want this link to be limitted to (setting a limit is optional).\nFinally, select the amount of time you want this link to be valid: a day, 3 days, or a week.\nFinish by clicking the Create Link button.\n\nTo confirm, you should see your invite link in the dashboard, including the access level, limit, date created, and time remaining until it expires.\n\n","title":"Create an Invite Link","titles":["Settings in Builder","2. Collaborator Settings"]},"110":{"href":"/solutions/builder/project-settings#sharing-an-invite-link","html":"\n<p>To share an invite link, click the <code>Copy Link</code> button.</p>\n<p>Go to where you want to share the link, paste it, and send it to your collaborators.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-select-copy-link.png\" alt=\"Builder settings Collaborators select copy link\"/></p>\n","isPage":false,"text":"\nTo share an invite link, click the Copy Link button.\nGo to where you want to share the link, paste it, and send it to your collaborators.\n\n","title":"Sharing an Invite Link","titles":["Settings in Builder","2. Collaborator Settings","Create an Invite Link"]},"111":{"href":"/solutions/builder/project-settings#deleting-an-invite-link","html":"\n<p>To remove an invite link, click the <code>Delete Link</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-select-delete-link.png\" alt=\"Builder settings Collaborators select delete link\"/></p>\n<p>You will be prompted to confirm the deletion; click <code>Yes</code> to delete.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-confirm-delete-modal.png\" alt=\"Builder settings Collaborators confirm delete modal\"/></p>\n<p>After deleting the link, you&#x27;ll get a success notification at the bottom right of your dashboard, and the link will no longer be visible.</p>\n<p><img src=\"/img/solutions/builder/project-settings-collaborators-confirm-invite-deleted.png\" alt=\"Builder settings Collaborators confirm invite deleted\"/></p>\n","isPage":false,"text":"\nTo remove an invite link, click the Delete Link button.\n\nYou will be prompted to confirm the deletion; click Yes to delete.\n\nAfter deleting the link, you&#x27;ll get a success notification at the bottom right of your dashboard, and the link will no longer be visible.\n\n","title":"Deleting an Invite Link","titles":["Settings in Builder","2. Collaborator Settings","Create an Invite Link"]},"112":{"href":"/solutions/builder/project-settings#watch-how-to-invite-collaborators","html":"\n<p>If you prefer to watch a video for how to invite Collaborators to join your project, watch here:</p>\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_collaborators_preview_video.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/09_Collaborations.mp4\" type=\"video/mp4\"></video></div>\n<hr/>\n","isPage":false,"text":"\nIf you prefer to watch a video for how to invite Collaborators to join your project, watch here:\n\n\n","title":"Watch how to invite Collaborators","titles":["Settings in Builder"]},"113":{"href":"/solutions/builder/project-settings#3-network-settings","html":"\n<p>Open your Network settings.</p>\n<p><img src=\"/img/solutions/builder/project-settings-select-networks.png\" alt=\"Builder settings select Networks\"/></p>\n<p>In the network settings, you&#x27;ll see a list of supported networks in Sequence. Here, you can choose which networks you want to access through the Node Gateway and deploy smart contracts on.</p>\n<p>Toggle the networks you wish to use and then click the <code>Update</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-networks.png\" alt=\"Builder settings Networks\"/></p>\n<hr/>\n","isPage":false,"text":"\nOpen your Network settings.\n\nIn the network settings, you&#x27;ll see a list of supported networks in Sequence. Here, you can choose which networks you want to access through the Node Gateway and deploy smart contracts on.\nToggle the networks you wish to use and then click the Update button.\n\n\n","title":"3. Network Settings","titles":["Settings in Builder"]},"114":{"href":"/solutions/builder/project-settings#4-api-access-keys-settings","html":"\n<p>Open your API Access Keys settings.</p>\n<p><img src=\"/img/solutions/builder/project-settings-select-api-access-keys.png\" alt=\"Builder settings select API Access Keys\"/></p>\n<p>In the API Access Keys section, you will find a dashboard with several options: monitor the usage of each key, set your default key, or expand the details of a specific key.</p>\n<p>You can also add a new key or edit the details of an existing key.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys.png\" alt=\"Builder settings API Access Keys\"/></p>\n<p>For each key, there are specific actions you might want to take, such as:</p>\n<ul>\n<li><a href=\"/solutions/builder/project-settings#renaming-your-key\">rename</a> or <a href=\"/solutions/builder/project-settings#deleting-your-key\">delete</a> your key</li>\n<li><a href=\"/solutions/builder/project-settings#copy-your-key\">copy</a> or <a href=\"/solutions/builder/project-settings#rotate-your-key\">change</a> the credentials of your key</li>\n<li>configure <a href=\"/solutions/builder/project-settings#set-service-access\">how</a> and <a href=\"/solutions/builder/project-settings#set-domain-access\">where</a> your key can be used</li>\n</ul>\n","isPage":false,"text":"\nOpen your API Access Keys settings.\n\nIn the API Access Keys section, you will find a dashboard with several options: monitor the usage of each key, set your default key, or expand the details of a specific key.\nYou can also add a new key or edit the details of an existing key.\n\nFor each key, there are specific actions you might want to take, such as:\n\nrename or delete your key\ncopy or change the credentials of your key\nconfigure how and where your key can be used\n\n","title":"4. API Access Keys Settings","titles":["Settings in Builder"]},"115":{"href":"/solutions/builder/project-settings#create-a-new-api-access-key","html":"\n<p>To create a new API Access Key, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#4-api-access-keys-settings\">API Access Key</a> section.</p>\n<p>Start by clicking the <code>Add API Access Key</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-select-add-api-access-key.png\" alt=\"Builder settings API Access Keys select add API Access Key\"/></p>\n<p>Provide a name for the key and click the <code>Add Access Key</code> button to generate a new key.</p>\n<p>If you need to configure any details of your key, you can do so by selecting and updating it from the dashboard.</p>\n<p>Finish by clicking the <code>Add Access Key</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-add-api-access-key-modal.png\" alt=\"Builder settings API Access Keys add Api Access Key modal\"/></p>\n","isPage":false,"text":"\nTo create a new API Access Key, make sure you have selected the correct project, accessed Settings, and are in the API Access Key section.\nStart by clicking the Add API Access Key button.\n\nProvide a name for the key and click the Add Access Key button to generate a new key.\nIf you need to configure any details of your key, you can do so by selecting and updating it from the dashboard.\nFinish by clicking the Add Access Key button.\n\n","title":"Create a new API Access Key","titles":["Settings in Builder","4. API Access Keys Settings"]},"116":{"href":"/solutions/builder/project-settings#rename-or-delete-an-api-access-key","html":"\n<p>To rename or delete one of your keys, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#4-api-access-keys-settings\">API Access Key</a> section.</p>\n<p>Start by selecting the key you want to edit.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-select-api-key-for-rename.png\" alt=\"Builder settings API Access Keys select API key for rename\"/></p>\n","isPage":false,"text":"\nTo rename or delete one of your keys, make sure you have selected the correct project, accessed Settings, and are in the API Access Key section.\nStart by selecting the key you want to edit.\n\n","title":"Rename or delete an API Access Key","titles":["Settings in Builder","4. API Access Keys Settings"]},"117":{"href":"/solutions/builder/project-settings#renaming-your-key","html":"\n<p>In the name field, and enter a new name.</p>\n<p>Then click the <code>Update</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-rename-key.png\" alt=\"Builder settings API Access Keys rename key\"/></p>\n","isPage":false,"text":"\nIn the name field, and enter a new name.\nThen click the Update button.\n\n","title":"Renaming your key","titles":["Settings in Builder","4. API Access Keys Settings","Rename or delete an API Access Key","Deleting an Invite Link"]},"118":{"href":"/solutions/builder/project-settings#deleting-your-key","html":"\n<p>Click the <code>Delete</code> button in the bottom left.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-delete-key.png\" alt=\"Builder settings API Access Keys delete key\"/></p>\n<p>You will be prompted to confirm the deletion; click <code>Yes</code> to delete.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-delete-key-modal.png\" alt=\"Builder settings API Access Keys delete key modal\"/></p>\n","isPage":false,"text":"\nClick the Delete button in the bottom left.\n\nYou will be prompted to confirm the deletion; click Yes to delete.\n\n","title":"Deleting your key","titles":["Settings in Builder","4. API Access Keys Settings","Rename or delete an API Access Key","Deleting an Invite Link"]},"119":{"href":"/solutions/builder/project-settings#access-the-credentials-of-a-key","html":"\n<p>To access the credentials of a key, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#4-api-access-keys-settings\">API Access Key</a> section.</p>\n<p>Start by selecting the key that you want to access the credentials for.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-select-api-key.png\" alt=\"Builder settings API Access Keys select api key\"/></p>\n","isPage":false,"text":"\nTo access the credentials of a key, make sure you have selected the correct project, accessed Settings, and are in the API Access Key section.\nStart by selecting the key that you want to access the credentials for.\n\n","title":"Access the credentials of a Key","titles":["Settings in Builder","4. API Access Keys Settings"]},"120":{"href":"/solutions/builder/project-settings#copy-your-key","html":"\n<p>Your API key is designed to be used in another location or application. To use it, you need to copy it here and paste it into your application.</p>\n<p>To copy your keys credentials, click <code>Copy</code> in the Access Key field.</p>\n<p>After clicking, you&#x27;ll get confirmation when the button briefly changes to <code>✓ Copied</code>.</p>\n<p>Your key credentials are now copied to your clipboard.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-copy-key.png\" alt=\"Builder settings API Access Keys copy key\"/></p>\n","isPage":false,"text":"\nYour API key is designed to be used in another location or application. To use it, you need to copy it here and paste it into your application.\nTo copy your keys credentials, click Copy in the Access Key field.\nAfter clicking, you&#x27;ll get confirmation when the button briefly changes to ✓ Copied.\nYour key credentials are now copied to your clipboard.\n\n","title":"Copy your Key","titles":["Settings in Builder","4. API Access Keys Settings","Access the credentials of a Key","Deleting an Invite Link"]},"121":{"href":"/solutions/builder/project-settings#rotate-your-key","html":"\n<p>You may want to change your key credentials without losing all of its usage history.</p>\n<p>To do this, click the <code>Rotate</code> button in the Access Key field.</p>\n<p>After clicking, you&#x27;ll see the credentials transform with a success notification in the bottom right.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-rotate-key.png\" alt=\"Builder settings API Access Keys rotate key\"/></p>\n","isPage":false,"text":"\nYou may want to change your key credentials without losing all of its usage history.\nTo do this, click the Rotate button in the Access Key field.\nAfter clicking, you&#x27;ll see the credentials transform with a success notification in the bottom right.\n\n","title":"Rotate your Key","titles":["Settings in Builder","4. API Access Keys Settings","Access the credentials of a Key","Deleting an Invite Link"]},"122":{"href":"/solutions/builder/project-settings#update-api-access-settings-of-a-key","html":"\n<p>To update API access settings of a key, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#4-api-access-keys-settings\">API Access Key</a> section.</p>\n<p>Start by selecting the key that you want to update the access to.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-select-api-key.png\" alt=\"Builder settings API Access Keys select api key\"/></p>\n","isPage":false,"text":"\nTo update API access settings of a key, make sure you have selected the correct project, accessed Settings, and are in the API Access Key section.\nStart by selecting the key that you want to update the access to.\n\n","title":"Update API access settings of a Key","titles":["Settings in Builder","4. API Access Keys Settings"]},"123":{"href":"/solutions/builder/project-settings#set-domain-access","html":"\n<p>You can ensure that the services linked to your API key are only utilized on domains connected to your game or app by enabling specific domains where your keys can be used.</p>\n<p>To do this, enter a domain you want to enable access to into the domain field.</p>\n<p>If you want to include another domain, click the <code>Add Domain</code> button and add it too. You should now have a list of domains your key can be used with.</p>\n<p>Continue adding to this list until you have included all of the domains that you need.</p>\n<p>Complete your update by clicking the <code>Update button</code> to save.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-add-domains.png\" alt=\"Builder settings API Access Keys add domains\"/></p>\n","isPage":false,"text":"\nYou can ensure that the services linked to your API key are only utilized on domains connected to your game or app by enabling specific domains where your keys can be used.\nTo do this, enter a domain you want to enable access to into the domain field.\nIf you want to include another domain, click the Add Domain button and add it too. You should now have a list of domains your key can be used with.\nContinue adding to this list until you have included all of the domains that you need.\nComplete your update by clicking the Update button to save.\n\n","title":"Set domain access","titles":["Settings in Builder","4. API Access Keys Settings","Update API access settings of a Key","Deleting an Invite Link"]},"124":{"href":"/solutions/builder/project-settings#set-service-access","html":"\n<p>You can set your API key to enable only specific services rather than all the services we offer.</p>\n<p>To do this, look near the bottom right you will find several services listed with checkboxes.</p>\n<p>Check the box for each service that you want your key to have access to.</p>\n<p>Complete your update by clicking the <code>Update button</code> to save.</p>\n<p><img src=\"/img/solutions/builder/project-settings-api-access-keys-check-services.png\" alt=\"Builder settings API Access Keys check services\"/></p>\n<hr/>\n","isPage":false,"text":"\nYou can set your API key to enable only specific services rather than all the services we offer.\nTo do this, look near the bottom right you will find several services listed with checkboxes.\nCheck the box for each service that you want your key to have access to.\nComplete your update by clicking the Update button to save.\n\n\n","title":"Set service access","titles":["Settings in Builder","4. API Access Keys Settings","Update API access settings of a Key","Deleting an Invite Link"]},"125":{"href":"/solutions/builder/project-settings#5-billing-settings","html":"\n<p>Open your Billing settings.</p>\n<p><img src=\"/img/solutions/builder/project-settings-select-billing.png\" alt=\"Builder settings select Billing\"/></p>\n<p>In here, you are given all of subscription plan information that you need.</p>\n<p>You can also <a href=\"/solutions/builder/project-settings#update-your-project-subscription-plan\">update your subscription</a>, and <a href=\"/solutions/builder/project-settings#set-your-overage-limit\">set your overage limits</a>.</p>\n","isPage":false,"text":"\nOpen your Billing settings.\n\nIn here, you are given all of subscription plan information that you need.\nYou can also update your subscription, and set your overage limits.\n","title":"5. Billing Settings","titles":["Settings in Builder"]},"126":{"href":"/solutions/builder/project-settings#billing-information","html":"\n<p>In the billing section, you can quickly access key information about your subscription plan:</p>\n<ul>\n<li>Current subscription plan</li>\n<li>Current billing period dates</li>\n<li>Monthly billing amount</li>\n<li>Next renewal date</li>\n<li>Monthly credits issued</li>\n<li>Credits used in the current period</li>\n<li>Remaining credits</li>\n<li>Overage settings status</li>\n</ul>\n","isPage":false,"text":"\nIn the billing section, you can quickly access key information about your subscription plan:\n\nCurrent subscription plan\nCurrent billing period dates\nMonthly billing amount\nNext renewal date\nMonthly credits issued\nCredits used in the current period\nRemaining credits\nOverage settings status\n\n","title":"Billing information","titles":["Settings in Builder","5. Billing Settings","Update API access settings of a Key","Deleting an Invite Link"]},"127":{"href":"/solutions/builder/project-settings#update-your-project-subscription-plan","html":"\n<p>To update your project subscription plan, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#5-billing-settings\">Billing</a> section.</p>\n<p>Start by clicking on the <code>Upgrade Plan</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-billing-select-upgrade-plan.png\" alt=\"Builder settings billing select upgrade plan\"/></p>\n<p>This will take you to our plans dashboard, where you can review the plans and select the one that works best for you.</p>\n<p>Once you know which plan you want, click the <code>Select Plan</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-billing-upgrade-plan-dashboard.png\" alt=\"Builder settings billing upgrade plan dashboard\"/></p>\n<p>This will take you to a checkout screen where you can enter your payment information.</p>\n<p><img src=\"/img/solutions/builder/project-settings-billing-checkout.png\" alt=\"Builder settings billing checkout\"/></p>\n","isPage":false,"text":"\nTo update your project subscription plan, make sure you have selected the correct project, accessed Settings, and are in the Billing section.\nStart by clicking on the Upgrade Plan button.\n\nThis will take you to our plans dashboard, where you can review the plans and select the one that works best for you.\nOnce you know which plan you want, click the Select Plan button.\n\nThis will take you to a checkout screen where you can enter your payment information.\n\n","title":"Update your project subscription plan","titles":["Settings in Builder","5. Billing Settings"]},"128":{"href":"/solutions/builder/project-settings#set-your-overage-limit","html":"\n<p>To set your overage limit, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a>, accessed <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a>, and are in the <a href=\"/solutions/builder/project-settings#5-billing-settings\">Billing</a> section. you will also need a paid plan to set an overage limit.</p>\n<p>With a paid plan, start by clicking on the button with the gear icon.</p>\n<p><img src=\"/img/solutions/builder/project-settings-billing-set-overage.png\" alt=\"Builder settings billing set overage\"/></p>\n<p>Toggle the &#x27;Set overage limit&#x27; option.</p>\n<p>Then enter the maximum overage amount that you would like to set.</p>\n<p>Finish by clicking the <code>Save changes</code> button.</p>\n<p><img src=\"/img/solutions/builder/project-settings-billing-overage-modal.png\" alt=\"Builder settings billing overage modal\"/></p>\n<hr/>\n","isPage":false,"text":"\nTo set your overage limit, make sure you have selected the correct project, accessed Settings, and are in the Billing section. you will also need a paid plan to set an overage limit.\nWith a paid plan, start by clicking on the button with the gear icon.\n\nToggle the &#x27;Set overage limit&#x27; option.\nThen enter the maximum overage amount that you would like to set.\nFinish by clicking the Save changes button.\n\n\n","title":"Set your overage limit","titles":["Settings in Builder","5. Billing Settings"]},"129":{"href":"/solutions/builder/project-settings#delete-a-project","html":"\n<aside data-callout=\"danger\"><p>The following instructions are destructive and irreversible, so do not follow these steps unless you intend to delete your project.</p></aside>\n<p>To delete your project, make sure you have selected the <a href=\"/solutions/builder/project-settings#select-a-project\">correct project</a> and are in the <a href=\"/solutions/builder/project-settings#go-to-settings\">Settings</a> section. You will also need administrative-level permissions to delete a project.</p>\n<p>If you are an Admin, you will notice a section labeled &#x27;Danger Zone&#x27; under all your settings sections.</p>\n<p>In this area, you will also find an option to &#x27;Delete this Project&#x27; — click that option.</p>\n<p><img src=\"/img/builder/delete-project.png\" alt=\"Builder delete project\"/></p>\n<p>This action will prompt a modal to confirm that you want to delete your Project.</p>\n<p>Enter the name of your project and click the <code>Delete Permanently</code> button.</p>\n<p><img src=\"/img/builder/delete-project-modal.png\" alt=\"Builder delete project\"/></p>","isPage":false,"text":"\nThe following instructions are destructive and irreversible, so do not follow these steps unless you intend to delete your project.\nTo delete your project, make sure you have selected the correct project and are in the Settings section. You will also need administrative-level permissions to delete a project.\nIf you are an Admin, you will notice a section labeled &#x27;Danger Zone&#x27; under all your settings sections.\nIn this area, you will also find an option to &#x27;Delete this Project&#x27; — click that option.\n\nThis action will prompt a modal to confirm that you want to delete your Project.\nEnter the name of your project and click the Delete Permanently button.\n","title":"Delete a Project","titles":["Settings in Builder"]},"130":{"href":"/solutions/builder/wallet-sdks#wallet-sdks-in-builder","html":"</header>\n<p>Sequence Builder offers multiple SDK options for integrating Sequence Wallet into your project.</p>\n","isPage":true,"text":"\nSequence Builder offers multiple SDK options for integrating Sequence Wallet into your project.\n","title":"Wallet SDKs in Builder","titles":[]},"131":{"href":"/solutions/builder/wallet-sdks#how-can-i-integrate-a-wallet-into-my-game-with-these-options","html":"\n<p>In the Wallets SDK section of Builder, simply select <strong>SequenceKit</strong>, input wallet details, click &#x27;save&#x27;, and code snippets will be generated for you to use. The same can be done for <strong>Web SDK</strong> (watch the tutorial below for additional guidance). <strong>Unity SDK</strong> and <strong>Unreal SDK</strong> will help you integrate the same way, but by interacting their respective game engines. Note that both SDKs are receiving updates and will be available shortly.</p>\n","isPage":false,"text":"\nIn the Wallets SDK section of Builder, simply select SequenceKit, input wallet details, click &#x27;save&#x27;, and code snippets will be generated for you to use. The same can be done for Web SDK (watch the tutorial below for additional guidance). Unity SDK and Unreal SDK will help you integrate the same way, but by interacting their respective game engines. Note that both SDKs are receiving updates and will be available shortly.\n","title":"How can I integrate a Wallet into my game with these options?","titles":["Wallet SDKs in Builder",null]},"132":{"href":"/solutions/builder/wallet-sdks#what-are-the-differences-between-these-options","html":"\n<p><strong>Web SDK</strong> and <strong>SequenceKit</strong> both deploy our Universal Wallet. They integrate differently, but offer the similar wallet benefits. However, <strong>SequenceKit</strong> is also a wallet connector, providing additional benefits.</p>\n<p><strong>SequenceKit</strong> is a powerful wallet connector, enabling existing wallet users across web3 to connect a wallet - vastly improving their user experience through embedded item views, integrated NFT checkout, and seamless wallet creation.</p>\n<p><strong>The Unity SDK</strong> integrates Wallet &amp; Indexer functionality into games developed with the Unity Engine. Similarly, the <strong>Unreal SDK</strong> is an integration for games built with the Unreal Engine.</p>\n","isPage":false,"text":"\nWeb SDK and SequenceKit both deploy our Universal Wallet. They integrate differently, but offer the similar wallet benefits. However, SequenceKit is also a wallet connector, providing additional benefits.\nSequenceKit is a powerful wallet connector, enabling existing wallet users across web3 to connect a wallet - vastly improving their user experience through embedded item views, integrated NFT checkout, and seamless wallet creation.\nThe Unity SDK integrates Wallet &amp; Indexer functionality into games developed with the Unity Engine. Similarly, the Unreal SDK is an integration for games built with the Unreal Engine.\n","title":"What are the differences between these options?","titles":["Wallet SDKs in Builder",null]},"133":{"href":"/solutions/builder/wallet-sdks#what-are-the-benefits-of-each-and-how-can-i-leverage-them","html":"\n<p>All integrations provide non-custodial smart contract wallets with account abstraction benefits, including email and social login, gasless transactions, and more.</p>\n<p><strong>SequenceKit</strong> benefits from also being a wallet connector, which you can leverage to cater to both existing wallet holders and millions of potential new users. The embedded wallet views, integrated NFT checkout, and seamless wallet creation ensure that users never need to leave the game or app.</p>\n<p><strong>Unity SDK</strong> and <strong>Unreal SDK</strong> give you the advantages of integrating a Sequence Wallet directly into your game.</p>\n","isPage":false,"text":"\nAll integrations provide non-custodial smart contract wallets with account abstraction benefits, including email and social login, gasless transactions, and more.\nSequenceKit benefits from also being a wallet connector, which you can leverage to cater to both existing wallet holders and millions of potential new users. The embedded wallet views, integrated NFT checkout, and seamless wallet creation ensure that users never need to leave the game or app.\nUnity SDK and Unreal SDK give you the advantages of integrating a Sequence Wallet directly into your game.\n","title":"What are the benefits of each and how can I leverage them?","titles":["Wallet SDKs in Builder",null]},"134":{"href":"/solutions/builder/wallet-sdks#watch-a-wallet-integration-using-sequencekit-with-builder","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_sequence_kit_preview_video.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/04_Sequence_Kit.mp4\" type=\"video/mp4\"></video></div>","isPage":false,"text":"\n","title":"Watch a Wallet integration using SequenceKit with Builder","titles":["Wallet SDKs in Builder"]},"135":{"href":"/solutions/marketplaces/white-label-marketplace#launch-your-white-label-marketplace","html":"</header>\n<p>Sequence Builder provides game builders with a white-label marketplace that can be launched in seconds. With Builder, you can customize your marketplace and integrate it directly into your game experience, all with no-coding experience necessary.</p>\n","isPage":true,"text":"\nSequence Builder provides game builders with a white-label marketplace that can be launched in seconds. With Builder, you can customize your marketplace and integrate it directly into your game experience, all with no-coding experience necessary.\n","title":"Launch your white-label marketplace","titles":[]},"136":{"href":"/solutions/marketplaces/white-label-marketplace#try-it-out","html":"\n<aside data-callout=\"info\"><p>Get started quickly at <a href=\"https://sequence.build/\">Sequence Builder</a> to launch your marketplace.</p></aside>\n","isPage":false,"text":"\nGet started quickly at Sequence Builder to launch your marketplace.\n","title":"Try it out","titles":["Launch your white-label marketplace"]},"137":{"href":"/solutions/marketplaces/white-label-marketplace#why-would-i-want-my-own-marketplace-for-my-web3-game","html":"\n<p>Builder gives you full control over everything in your marketplace, from enforcing royalties (with ERC-2981) to\nchoosing the best trading mechanism for your community, setting fees, and more.\nYou can also aggregate listings from major platforms like OpenSea or LooksRare, providing you with the benefit of existing liquidity without relinquishing control of the gaming experience.</p>\n","isPage":false,"text":"\nBuilder gives you full control over everything in your marketplace, from enforcing royalties (with ERC-2981) to\nchoosing the best trading mechanism for your community, setting fees, and more.\nYou can also aggregate listings from major platforms like OpenSea or LooksRare, providing you with the benefit of existing liquidity without relinquishing control of the gaming experience.\n","title":"Why would I want my own Marketplace for my web3 game?","titles":["Launch your white-label marketplace","Try it out",null,null]},"138":{"href":"/solutions/marketplaces/white-label-marketplace#watch-a-marketplace-be-launched-in-minutes","html":"\n<div class=\"video-container\"><img class=\"preview-image\" src=\"/img/builder/builder_marketplace_preview_video.png\"/><video class=\"video-frame\" width=\"560\" height=\"315\" controls=\"\" muted=\"\" src=\"/video/builder/07_Marketplace.mp4\" type=\"video/mp4\"></video></div>","isPage":false,"text":"\n","title":"Watch a Marketplace be launched in minutes","titles":["Launch your white-label marketplace"]},"139":{"href":"/solutions/technical-references/chain-support#multi-chain-support","html":"</header>\n<p>Sequence can support all EVM compatible chains. The following networks are currently supported by Sequence Wallet, Sequence Indexer,\nSequence Relayer and all Sequence SDKs:</p>\n<strong>Sequence Status Page: <a href=\"https://status.sequence.info\">https://status.sequence.info</a></strong>\n","isPage":true,"text":"\nSequence can support all EVM compatible chains. The following networks are currently supported by Sequence Wallet, Sequence Indexer,\nSequence Relayer and all Sequence SDKs:\nSequence Status Page: https://status.sequence.info\n","title":"Multi-Chain Support","titles":[]},"140":{"href":"/solutions/technical-references/chain-support#networks","html":"\n<p>TODO: import tablecomponent</p>","isPage":false,"text":"\nTODO: import tablecomponent","title":"Networks","titles":["Multi-Chain Support"]},"141":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#how-to-deploy-an-item-collection-contract","html":"</header>\n<p>This guide walks through how to setup and deploy a contract on Builder. If you haven&#x27;t yet done so, make sure you have <a href=\"/solutions/builder/getting-started\">signed up for Builder and created a Project</a>.</p>\n","isPage":true,"text":"\nThis guide walks through how to setup and deploy a contract on Builder. If you haven&#x27;t yet done so, make sure you have signed up for Builder and created a Project.\n","title":"How to Deploy an Item Collection Contract","titles":[]},"142":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#step-1-go-to-the-contracts-section","html":"\n<p>In the project dashboard, find the <code>Contracts</code> tab on the left side.</p>\n","isPage":false,"text":"\nIn the project dashboard, find the Contracts tab on the left side.\n","title":"Step 1: Go to the Contracts section","titles":["How to Deploy an Item Collection Contract"]},"143":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#add-a-new-contract","html":"\n<p>Once you have that open, click the <code>+ New contract</code> button</p>\n<p><img src=\"/img/builder/builder_create_new_contract_for_contract_deploy.png\" alt=\"Sequence builder new contract\"/></p>\n","isPage":false,"text":"\nOnce you have that open, click the + New contract button\n\n","title":"Add a new contract","titles":["How to Deploy an Item Collection Contract","Step 1: Go to the Contracts section",null]},"144":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#step-2-choose-a-contract-for-your-item-collection","html":"\n","isPage":false,"text":"\n","title":"Step 2: Choose a contract for your item collection","titles":["How to Deploy an Item Collection Contract"]},"145":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#select-a-contract","html":"\n<p>You have a couple of different options to load your item collection with.</p>\n<p>We provide a few standard contracts to choose from, including an ERC1155, an ERC721, and an ERC20.</p>\n<p>If you plan to use one of our standard contracts, skip ahead to <strong>Step 3: Deploy your smart contract</strong></p>\n<p><img src=\"/img/builder/builder_select_contract_for_contract_deploy.png\" alt=\"Sequence builder select contract\"/></p>\n","isPage":false,"text":"\nYou have a couple of different options to load your item collection with.\nWe provide a few standard contracts to choose from, including an ERC1155, an ERC721, and an ERC20.\nIf you plan to use one of our standard contracts, skip ahead to Step 3: Deploy your smart contract\n\n","title":"Select a contract","titles":["How to Deploy an Item Collection Contract","Step 2: Choose a contract for your item collection",null]},"146":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#bring-your-own-smart-contract","html":"\n<p>You can also click the <code>+ View more contracts</code> button, which will open up a modal showing more standard contracts.</p>\n<p>At the bottom of this modal, click the <code>+ Upload Source</code> button to deploy your own contract.</p>\n<p><img src=\"/img/builder/builder_more_contracts_for_contract_deploy.png\" alt=\"Sequence builder more contracts\"/></p>\n","isPage":false,"text":"\nYou can also click the + View more contracts button, which will open up a modal showing more standard contracts.\nAt the bottom of this modal, click the + Upload Source button to deploy your own contract.\n\n","title":"Bring your own smart contract","titles":["How to Deploy an Item Collection Contract","Step 2: Choose a contract for your item collection",null]},"147":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#step-3-deploy-your-smart-contract","html":"\n","isPage":false,"text":"\n","title":"Step 3: Deploy your smart contract","titles":["How to Deploy an Item Collection Contract"]},"148":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#selectconfirm-the-network","html":"\n<p>You may have already selected the network you want to deploy this contract too, so confirm that this is the right network.</p>\n","isPage":false,"text":"\nYou may have already selected the network you want to deploy this contract too, so confirm that this is the right network.\n","title":"Select/confirm the network","titles":["How to Deploy an Item Collection Contract","Step 3: Deploy your smart contract",null]},"149":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#provide-a-contract-name-and-symbol","html":"\n<p>Give your smart contract a name. If your contract is an ERC20 or ERC721, then you will need to give it a token symbol as well.</p>\n<aside data-callout=\"note\"><p>Providing a token symbol at deployment is not necessary for ERC1155 as there will be several different tokens associated with this contract - token symbols are determined when a new token is created at minting.</p></aside>\n","isPage":false,"text":"\nGive your smart contract a name. If your contract is an ERC20 or ERC721, then you will need to give it a token symbol as well.\nProviding a token symbol at deployment is not necessary for ERC1155 as there will be several different tokens associated with this contract - token symbols are determined when a new token is created at minting.\n","title":"Provide a contract name and symbol","titles":["How to Deploy an Item Collection Contract","Step 3: Deploy your smart contract",null]},"150":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#determine-a-contract-owner","html":"\n<p>Provide a wallet address for the contract owner. (This will likely be yourself)</p>\n<p><img src=\"/img/builder/builder_provide_contract_details_for_contract_deploy.png\" alt=\"Sequence builder contract details\"/></p>\n","isPage":false,"text":"\nProvide a wallet address for the contract owner. (This will likely be yourself)\n\n","title":"Determine a contract owner","titles":["How to Deploy an Item Collection Contract","Step 3: Deploy your smart contract",null]},"151":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#step-4-sign-the-transaction","html":"\n<p>In order to complete the deployment of a smart contract, the contract deploy (that&#x27;s you) will need to sign a transaction on the network that its being deployed to.</p>\n<p>You will use your Sequence wallet to sign the transaction.</p>\n","isPage":false,"text":"\nIn order to complete the deployment of a smart contract, the contract deploy (that&#x27;s you) will need to sign a transaction on the network that its being deployed to.\nYou will use your Sequence wallet to sign the transaction.\n","title":"Step 4: Sign the transaction","titles":["How to Deploy an Item Collection Contract"]},"152":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#sequence-wallet","html":"\n<p>A Sequence wallet should have been created when you signed up for builder. You can confirm this by looking in the top right corner of then window anytime when you are in builder.</p>\n<p>If you do not see this, then you need to signup and create a wallet.</p>\n<p><img src=\"/img/builder/builder_see_wallet_for_contract_deploy.png\" alt=\"Sequence builder see wallet\"/></p>\n","isPage":false,"text":"\nA Sequence wallet should have been created when you signed up for builder. You can confirm this by looking in the top right corner of then window anytime when you are in builder.\nIf you do not see this, then you need to signup and create a wallet.\n\n","title":"Sequence wallet","titles":["How to Deploy an Item Collection Contract","Step 4: Sign the transaction",null]},"153":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#signature-modal","html":"\n<p>After you click the <code>Deploy Contract</code> button, a modal will pop up - which is your sequence wallet. In your wallet you will see a request to sign a transaction. It will include transaction details along with network fee estimations.</p>\n<aside data-callout=\"warning\"><p>It costs a fee (called gas) to deploy on a network. Make sure you have some of the native network tokens in your wallet ahead of time to cover it.</p></aside>\n<p>Once you&#x27;ve read the transaction details, execute the transaction by hitting <code>confirm</code> on the signature.</p>\n<p><img src=\"/img/builder/builder_sign_transaction_for_contract_deploy.png\" alt=\"Sequence builder sign transaction\"/></p>\n","isPage":false,"text":"\nAfter you click the Deploy Contract button, a modal will pop up - which is your sequence wallet. In your wallet you will see a request to sign a transaction. It will include transaction details along with network fee estimations.\nIt costs a fee (called gas) to deploy on a network. Make sure you have some of the native network tokens in your wallet ahead of time to cover it.\nOnce you&#x27;ve read the transaction details, execute the transaction by hitting confirm on the signature.\n\n","title":"Signature modal","titles":["How to Deploy an Item Collection Contract","Step 4: Sign the transaction",null]},"154":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#step-5-collectible-contract-deployed","html":"\n<p>After you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.</p>\n<p>When the transaction is complete, the contract will be deployed.</p>\n","isPage":false,"text":"\nAfter you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.\nWhen the transaction is complete, the contract will be deployed.\n","title":"Step 5: Collectible contract deployed","titles":["How to Deploy an Item Collection Contract"]},"155":{"href":"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract#linked-contract-in-dashboard","html":"\n<p>Now that your smart contract is deployed, return to the <code>Contracts</code> section of Builder. There you should see your newly deployed contract. You should also be able to see what kind of contract it is, along with any roles you have - like <code>owner</code> for example.</p>\n<p><img src=\"/img/builder/builder_confirm_deployment_for_contract_deploy.png\" alt=\"Sequence builder confirm deployment\"/></p>","isPage":false,"text":"\nNow that your smart contract is deployed, return to the Contracts section of Builder. There you should see your newly deployed contract. You should also be able to see what kind of contract it is, along with any roles you have - like owner for example.\n","title":"Linked contract in dashboard","titles":["How to Deploy an Item Collection Contract","Step 5: Collectible contract deployed",null]},"156":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#how-to-mint-in-game-items-and-achievements-in-builder","html":"</header>\n","isPage":true,"text":"\n","title":"How to Mint In-Game Items and Achievements in Builder","titles":[]},"157":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#introduction","html":"\n<p>In this guide, we&#x27;re going to walk through the process of creating your own in-game assets by minting from an ERC-1155 contract. These assets are commonly used for items and achievements, but could be used for just about any game object.</p>\n","isPage":false,"text":"\nIn this guide, we&#x27;re going to walk through the process of creating your own in-game assets by minting from an ERC-1155 contract. These assets are commonly used for items and achievements, but could be used for just about any game object.\n","title":"Introduction","titles":["How to Mint In-Game Items and Achievements in Builder"]},"158":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#what-is-an-erc-1155","html":"\n<p>ERC-1155 is simply <a href=\"https://eips.ethereum.org/EIPS/eip-1155\">a multi-token standard</a> that allows the creation of fungible, non-fungible, and semi-fungible tokens all in one contract. For games, this means that you can manage all of your in-game tokens with a single contract.</p>\n","isPage":false,"text":"\nERC-1155 is simply a multi-token standard that allows the creation of fungible, non-fungible, and semi-fungible tokens all in one contract. For games, this means that you can manage all of your in-game tokens with a single contract.\n","title":"What is an ERC-1155?","titles":["How to Mint In-Game Items and Achievements in Builder","Introduction",null]},"159":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#what-can-you-do-with-it","html":"\n<p>Your imagination is the limit. We mentioned achievements before, you could mint each as an NFT and grant it to the player. Or let&#x27;s say your game generates unique items every time a boss is killed. Those items could be minted as tokens with all attributes baked in, and held in the player&#x27;s own wallet.</p>\n<p>Lets dive in!</p>\n","isPage":false,"text":"\nYour imagination is the limit. We mentioned achievements before, you could mint each as an NFT and grant it to the player. Or let&#x27;s say your game generates unique items every time a boss is killed. Those items could be minted as tokens with all attributes baked in, and held in the player&#x27;s own wallet.\nLets dive in!\n","title":"What can you do with it?","titles":["How to Mint In-Game Items and Achievements in Builder","Introduction",null]},"160":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#prerequisite-create-a-project-and-deploy-a-smart-contract","html":"\n<p>This guide assumes that you have already <a href=\"/solutions/builder/getting-started\">signed up for Builder and created a Project</a>.</p>\n<p>Before you get started creating (minting) collectibles, you will need to first deploy the smart contract you wish to mint from. If you have not done so already, go back and do <a href=\"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract\">how to load an item collection through deploying a smart contract</a>.</p>\n","isPage":false,"text":"\nThis guide assumes that you have already signed up for Builder and created a Project.\nBefore you get started creating (minting) collectibles, you will need to first deploy the smart contract you wish to mint from. If you have not done so already, go back and do how to load an item collection through deploying a smart contract.\n","title":"Prerequisite: Create a Project and deploy a Smart Contract","titles":["How to Mint In-Game Items and Achievements in Builder","Introduction"]},"161":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#step-1-select-the-collection-for-your-item","html":"\n<p>Start by selecting the contract you would like to create an item from. In this example, we are covering ERC-1155, so select you the ERC-1155 contract that you have deployed.</p>\n<p>Once in the project dashboard, you should see the Collection - select it.</p>\n<p><img src=\"/img/builder/builder_select_contract_mint_achievements.png\" alt=\"Sequence builder select contract\"/></p>\n","isPage":false,"text":"\nStart by selecting the contract you would like to create an item from. In this example, we are covering ERC-1155, so select you the ERC-1155 contract that you have deployed.\nOnce in the project dashboard, you should see the Collection - select it.\n\n","title":"Step 1: Select the Collection for your item","titles":["How to Mint In-Game Items and Achievements in Builder"]},"162":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#step-2-navigate-to-write-contract","html":"\n<p>When you open your contract, you will see several options. Everything from details like your contract address, type, the network its deployed on - to options for adding gas or help setting up an indexer. Below those details, you have more options to view contract details and interact with it.</p>\n<p>Within that subset of options, select <code>Write Contract</code>.</p>\n<p><img src=\"/img/builder/builder_navigate_write_contract_mint_achievements.png\" alt=\"Sequence builder write contract\"/></p>\n<p>This will drop down several methods that you can call to the smart contract. You do this by sending a transaction to the smart contract with the included call data.</p>\n<p>We&#x27;re here to mint some items, so we&#x27;ll select the <code>mint</code> method.</p>\n<p><img src=\"/img/builder/builder_select_mint_method_mint_achievements.png\" alt=\"Sequence builder select mint\"/></p>\n","isPage":false,"text":"\nWhen you open your contract, you will see several options. Everything from details like your contract address, type, the network its deployed on - to options for adding gas or help setting up an indexer. Below those details, you have more options to view contract details and interact with it.\nWithin that subset of options, select Write Contract.\n\nThis will drop down several methods that you can call to the smart contract. You do this by sending a transaction to the smart contract with the included call data.\nWe&#x27;re here to mint some items, so we&#x27;ll select the mint method.\n\n","title":"Step 2: Navigate to Write Contract","titles":["How to Mint In-Game Items and Achievements in Builder"]},"163":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#step-3-provide-details-for-the-mint-method","html":"\n<p>Selecting <code>mint</code> will expand it to give you a couple of fields to fill out. Fill each of these fields out first:</p>\n<ul>\n<li><code>to (address)</code> - the address you want these to be minted to, for this example put your own address in.</li>\n<li><code>tokenId (uint256)</code> - give the collection of items an id, for a first collection enter 0 or 1 here.</li>\n<li><code>amount (uint256)</code> - enter the amount of items you want to mint in this collection.</li>\n<li><code>data (bytes)</code> - for this one, enter 0x</li>\n</ul>\n<aside data-callout=\"note\"><p>This type of contract, ERC-1155, can have several different groups of tokens on it - each requiring its own id.</p></aside>\n<p>Once you have filled out all of the fields, hit <code>write</code> to send a transaction to mint.</p>\n<p><img src=\"/img/builder/builder_fill_mint_details_mint_achievements.png\" alt=\"Sequence builder fill mint details\"/></p>\n","isPage":false,"text":"\nSelecting mint will expand it to give you a couple of fields to fill out. Fill each of these fields out first:\n\nto (address) - the address you want these to be minted to, for this example put your own address in.\ntokenId (uint256) - give the collection of items an id, for a first collection enter 0 or 1 here.\namount (uint256) - enter the amount of items you want to mint in this collection.\ndata (bytes) - for this one, enter 0x\n\nThis type of contract, ERC-1155, can have several different groups of tokens on it - each requiring its own id.\nOnce you have filled out all of the fields, hit write to send a transaction to mint.\n\n","title":"Step 3: Provide details for the Mint method","titles":["How to Mint In-Game Items and Achievements in Builder"]},"164":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#step-4-mint-and-sign-your-transaction","html":"\n<p>After you hit <code>write</code>, a modal with your wallet will pop-up. In order to create (mint) these items, you will need to send a transaction.</p>\n<p>Read the transaction details, then execute the transaction by hitting <code>confirm</code> on the signature.</p>\n<p><img src=\"/img/builder/builder_sign_transaction_mint_achievements.png\" alt=\"Sequence builder sign transactions\"/></p>\n<p>After you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.</p>\n","isPage":false,"text":"\nAfter you hit write, a modal with your wallet will pop-up. In order to create (mint) these items, you will need to send a transaction.\nRead the transaction details, then execute the transaction by hitting confirm on the signature.\n\nAfter you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.\n","title":"Step 4: Mint and sign your transaction","titles":["How to Mint In-Game Items and Achievements in Builder"]},"165":{"href":"/solutions/collectibles/contracts/900-mint-items-from-ERC1155#step-5-confirm-your-minted-items","html":"\n<p>When the transaction is complete, you will have created your items by minting them from the smart contract!</p>\n<p>If you click <code>Balances</code>, you should be able to see the total number of items you minted from your collection.</p>\n<p><img src=\"/img/builder/builder_confirm_mint_items_mint_achievements.png\" alt=\"Sequence builder confirm mint\"/></p>\n<p>In the example, you can see the 5 items I created just now, along with 4k items that I created in a seperate minting earlier.</p>\n<p>You can also click <code>Tokens</code> to see the both of the collections that we created and minted from.</p>\n<p><img src=\"/img/builder/builder_confirm_nft_mint_achievements.png\" alt=\"Sequence builder confirm nft\"/></p>","isPage":false,"text":"\nWhen the transaction is complete, you will have created your items by minting them from the smart contract!\nIf you click Balances, you should be able to see the total number of items you minted from your collection.\n\nIn the example, you can see the 5 items I created just now, along with 4k items that I created in a seperate minting earlier.\nYou can also click Tokens to see the both of the collections that we created and minted from.\n","title":"Step 5: Confirm your minted items","titles":["How to Mint In-Game Items and Achievements in Builder"]},"166":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#how-to-mint-digital-collectibles-in-builder","html":"</header>\n","isPage":true,"text":"\n","title":"How to Mint Digital Collectibles in Builder","titles":[]},"167":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#introduction","html":"\n<p>This guide walks you through creating in-game assets by minting from an ERC-721 contract, commonly known as NFTs (Non-Fungible Tokens), often used for collectibles.</p>\n<p>For more on creating in-game items from collections, <a href=\"/solutions/collectibles/contracts/900-mint-items-from-ERC1155\">check our guide on using ERC-1155</a>.</p>\n","isPage":false,"text":"\nThis guide walks you through creating in-game assets by minting from an ERC-721 contract, commonly known as NFTs (Non-Fungible Tokens), often used for collectibles.\nFor more on creating in-game items from collections, check our guide on using ERC-1155.\n","title":"Introduction","titles":["How to Mint Digital Collectibles in Builder"]},"168":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#erc-721-vs-erc-1155","html":"\n<p>Both contracts mint NFTs, but ERC-721, being the earlier standard, has gained widespread adoption, particularly in digital collectibles. Known for its simplicity and ease to audit for security, ERC-721 tokens are distinct, contributing to their recognition in various NFT marketplaces.</p>\n<p>In contrast, ERC-1155 offers versatility with efficient batch operations for both fungible and non-fungible tokens in a single contract, reducing gas costs. However, this flexibility introduces complexity, necessitating careful security attention.</p>\n","isPage":false,"text":"\nBoth contracts mint NFTs, but ERC-721, being the earlier standard, has gained widespread adoption, particularly in digital collectibles. Known for its simplicity and ease to audit for security, ERC-721 tokens are distinct, contributing to their recognition in various NFT marketplaces.\nIn contrast, ERC-1155 offers versatility with efficient batch operations for both fungible and non-fungible tokens in a single contract, reducing gas costs. However, this flexibility introduces complexity, necessitating careful security attention.\n","title":"ERC-721 vs. ERC-1155","titles":["How to Mint Digital Collectibles in Builder","Introduction",null]},"169":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#choosing-for-gaming","html":"\n<p>The choice depends on your needs. ERC-1155 is efficient for creating various unique in-game items. However, If you aim to provide tradable digital collectibles recognized across marketplaces, ERC-721 may be better suited.</p>\n<p>Which leads us to the point of this walkthrough - digital collectibles. As such, we will focus on using ERC-721 to create in-game digital collectibles to use in your game.</p>\n<p>Let&#x27;s get started!</p>\n","isPage":false,"text":"\nThe choice depends on your needs. ERC-1155 is efficient for creating various unique in-game items. However, If you aim to provide tradable digital collectibles recognized across marketplaces, ERC-721 may be better suited.\nWhich leads us to the point of this walkthrough - digital collectibles. As such, we will focus on using ERC-721 to create in-game digital collectibles to use in your game.\nLet&#x27;s get started!\n","title":"Choosing for Gaming","titles":["How to Mint Digital Collectibles in Builder","Introduction",null]},"170":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#prerequisite-create-a-project-and-deploy-a-smart-contract","html":"\n<p>This guide assumes that you have already <a href=\"/solutions/builder/getting-started\">signed up for Builder and created a Project</a>.</p>\n<p>Before you get started creating (minting) collectibles, you will need to first deploy the smart contract you wish to mint from. If you have not done so already, go back and do <a href=\"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract\">how to load an item collection through deploying a smart contract</a>.</p>\n","isPage":false,"text":"\nThis guide assumes that you have already signed up for Builder and created a Project.\nBefore you get started creating (minting) collectibles, you will need to first deploy the smart contract you wish to mint from. If you have not done so already, go back and do how to load an item collection through deploying a smart contract.\n","title":"Prerequisite: Create a Project and deploy a Smart Contract","titles":["How to Mint Digital Collectibles in Builder","Introduction"]},"171":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#step-1-select-the-contract-for-your-digital-collectibles","html":"\n<p>Start by selecting the contract you would like to create a collectible from.</p>\n<p>Once in the contract dashboard, you should see the ERC-721 contract that you have deployed - select it.</p>\n<p><img src=\"/img/builder/builder_choose_contract_mint_collectibles.png\" alt=\"Sequence builder choose contract\"/></p>\n","isPage":false,"text":"\nStart by selecting the contract you would like to create a collectible from.\nOnce in the contract dashboard, you should see the ERC-721 contract that you have deployed - select it.\n\n","title":"Step 1: Select the contract for your digital collectibles","titles":["How to Mint Digital Collectibles in Builder"]},"172":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#step-2-navigate-to-write-contract","html":"\n<p>When opening the contract, you will see several options. Everything from details like your contract address, type, the network its deployed on - to options for adding gas or help setting up an indexer. Below those details, you have more options to view contract details and interact with it.</p>\n<p>Within that subset of options, select <code>Write Contract</code>.</p>\n<p><img src=\"/img/builder/builder_select_write_contract_mint_collectibles.png\" alt=\"Sequence builder write contract\"/></p>\n<p>Selecting this will reveal a variety of methods on the smart contract.</p>\n<p>Select the <code>mint</code> method.</p>\n<p><img src=\"/img/builder/builder_select_mint_method_mint_collectibles.png\" alt=\"Sequence builder mint method\"/></p>\n","isPage":false,"text":"\nWhen opening the contract, you will see several options. Everything from details like your contract address, type, the network its deployed on - to options for adding gas or help setting up an indexer. Below those details, you have more options to view contract details and interact with it.\nWithin that subset of options, select Write Contract.\n\nSelecting this will reveal a variety of methods on the smart contract.\nSelect the mint method.\n\n","title":"Step 2: Navigate to Write Contract","titles":["How to Mint Digital Collectibles in Builder"]},"173":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#step-3-provide-details-for-the-mint-method","html":"\n<p>Selecting <code>mint</code> will expand the method, providing inputs.</p>\n<p>Enter the address you want these collectibles to be minted to, for this example put your own address in.</p>\n<p>Enter the amount of collectibles you want to create.</p>\n<p>Then hit <code>write</code> to send a transaction to mint.</p>\n<p><img src=\"/img/builder/builder_fill_mint_details_mint_collectibles.png\" alt=\"Sequence builder mint details\"/></p>\n","isPage":false,"text":"\nSelecting mint will expand the method, providing inputs.\nEnter the address you want these collectibles to be minted to, for this example put your own address in.\nEnter the amount of collectibles you want to create.\nThen hit write to send a transaction to mint.\n\n","title":"Step 3: Provide details for the Mint method","titles":["How to Mint Digital Collectibles in Builder"]},"174":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#step-4-mint-and-sign-your-transaction","html":"\n<p>Once you hit <code>write</code>, a modal with your wallet will pop-up. In order to create (mint) these collectibles, you will need to send a transaction.</p>\n<p>Read the transaction details and execute the transaction by hitting <code>confirm</code> on the signature.</p>\n<p><img src=\"/img/builder/builder_sign_transaction_mint_collectibles.png\" alt=\"Sequence builder sign transaction\"/></p>\n<p>After you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.</p>\n<p>When the transaction is complete, you will have created your digital collectibles by minting them from the smart contract!</p>\n","isPage":false,"text":"\nOnce you hit write, a modal with your wallet will pop-up. In order to create (mint) these collectibles, you will need to send a transaction.\nRead the transaction details and execute the transaction by hitting confirm on the signature.\n\nAfter you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.\nWhen the transaction is complete, you will have created your digital collectibles by minting them from the smart contract!\n","title":"Step 4: Mint and sign your transaction","titles":["How to Mint Digital Collectibles in Builder"]},"175":{"href":"/solutions/collectibles/contracts/902-mint-collectibles-from-ERC721#step-5-confirm-your-minted-collectibles","html":"\n<p>Click the <code>Tokens</code> subsection to see the both of the collections that we created and minted from.</p>\n<p><img src=\"/img/builder/builder_confirm_mint_collectibles.png\" alt=\"Sequence builder confirm mint\"/></p>\n<p>In the example, you can see the 5 collectibles that we created.</p>","isPage":false,"text":"\nClick the Tokens subsection to see the both of the collections that we created and minted from.\n\nIn the example, you can see the 5 collectibles that we created.","title":"Step 5: Confirm your minted collectibles","titles":["How to Mint Digital Collectibles in Builder"]},"176":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#how-to-mint-in-game-currency-in-builder","html":"</header>\n","isPage":true,"text":"\n","title":"How to Mint in-game Currency in Builder","titles":[]},"177":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#introduction","html":"\n<p>In this guide, we’re going to walk through the process of creating your own in-game currency through minting from an ERC-20 contract.</p>\n<p>Currency tokens add new and interesting dimensions to in-game economies, transactions, and player interactions.</p>\n","isPage":false,"text":"\nIn this guide, we’re going to walk through the process of creating your own in-game currency through minting from an ERC-20 contract.\nCurrency tokens add new and interesting dimensions to in-game economies, transactions, and player interactions.\n","title":"Introduction","titles":["How to Mint in-game Currency in Builder"]},"178":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#what-is-an-erc-20-token","html":"\n<p>An ERC-20 token is a digital coin - what makes it special is that it follows a <a href=\"https://ethereum.org/en/developers/docs/standards/tokens/erc-20/\">set of rules called ERC-20</a>, making it easy to use in different places on the internet. These tokens often represent value or be used for specific purposes. Unlike the other common token - NFT&#x27;s, these tokens are fungible.</p>\n","isPage":false,"text":"\nAn ERC-20 token is a digital coin - what makes it special is that it follows a set of rules called ERC-20, making it easy to use in different places on the internet. These tokens often represent value or be used for specific purposes. Unlike the other common token - NFT&#x27;s, these tokens are fungible.\n","title":"What is an ERC-20 token?","titles":["How to Mint in-game Currency in Builder","Introduction",null]},"179":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#fungability-vs-non-fungibility","html":"\n<p>This is the key distinction to understand.</p>\n<p>Fungible tokens (like ERC-20 tokens) are interchangeable, and each unit is the same as every other unit, just like dollars or euros. They can easily be split or combined into different quantities.</p>\n<p>Non-fungible tokens (like ERC-721 tokens) represent unique items with individual properties, such as digital art or collectibles. Each token is distinct and not directly exchangeable with another on a like-for-like basis.</p>\n","isPage":false,"text":"\nThis is the key distinction to understand.\nFungible tokens (like ERC-20 tokens) are interchangeable, and each unit is the same as every other unit, just like dollars or euros. They can easily be split or combined into different quantities.\nNon-fungible tokens (like ERC-721 tokens) represent unique items with individual properties, such as digital art or collectibles. Each token is distinct and not directly exchangeable with another on a like-for-like basis.\n","title":"Fungability vs Non-Fungibility","titles":["How to Mint in-game Currency in Builder","Introduction",null]},"180":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#prerequisite-create-a-project-and-deploy-a-smart-contract","html":"\n<p>This guide assumes that you have already <a href=\"/solutions/builder/getting-started\">signed up for Builder and created a Project</a>.</p>\n<p>Before you get started creating (minting) currency, you will need to first deploy the smart contract you wish to mint from. If you have not done so already, go back and do <a href=\"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract\">how to load an item collection through deploying a smart contract</a>.</p>\n","isPage":false,"text":"\nThis guide assumes that you have already signed up for Builder and created a Project.\nBefore you get started creating (minting) currency, you will need to first deploy the smart contract you wish to mint from. If you have not done so already, go back and do how to load an item collection through deploying a smart contract.\n","title":"Prerequisite: Create a Project and deploy a Smart Contract","titles":["How to Mint in-game Currency in Builder","Introduction"]},"181":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#step-1-select-the-contract-for-your-currency","html":"\n<p>Start by selecting the contract you would like to create currency from.</p>\n<p>Once in the contract dashboard, you should see the ERC-20 contract that you have deployed - select it.</p>\n<p><img src=\"/img/builder/builder_choose_contract_mint_currency.png\" alt=\"Sequence builder choose contract\"/></p>\n","isPage":false,"text":"\nStart by selecting the contract you would like to create currency from.\nOnce in the contract dashboard, you should see the ERC-20 contract that you have deployed - select it.\n\n","title":"Step 1: Select the contract for your currency","titles":["How to Mint in-game Currency in Builder"]},"182":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#step-2-navigate-to-write-contract","html":"\n<p>When opening the contract, you will see several options. Everything from details like your contract address, type, the network its deployed on - to options for adding gas or help setting up an indexer. Below those details, you have more options to view contract details and interact with it.</p>\n<p>Within that subset of options, select <code>Write Contract</code>.</p>\n<p><img src=\"/img/builder/builder_select_write_contract_mint_currency.png\" alt=\"Sequence builder choose contract\"/></p>\n<p>Selecting this will reveal a variety of methods on the smart contract.</p>\n<p>Select the <code>mint</code> method.</p>\n<p><img src=\"/img/builder/builder_select_mint_method_mint_currency.png\" alt=\"Sequence builder choose contract\"/></p>\n","isPage":false,"text":"\nWhen opening the contract, you will see several options. Everything from details like your contract address, type, the network its deployed on - to options for adding gas or help setting up an indexer. Below those details, you have more options to view contract details and interact with it.\nWithin that subset of options, select Write Contract.\n\nSelecting this will reveal a variety of methods on the smart contract.\nSelect the mint method.\n\n","title":"Step 2: Navigate to Write Contract","titles":["How to Mint in-game Currency in Builder"]},"183":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#step-3-provide-details-for-the-mint-method","html":"\n<p>Selecting <code>mint</code> will expand the method, providing inputs.</p>\n<p>Enter the address you want your currency to be minted to, for this example put your own address in.</p>\n<p>Enter the amount of currency you want to create.</p>\n<p>Then hit <code>write</code> to send a transaction to mint.</p>\n<p><img src=\"/img/builder/builder_fill_mint_details_mint_currency.png\" alt=\"Sequence builder choose contract\"/></p>\n","isPage":false,"text":"\nSelecting mint will expand the method, providing inputs.\nEnter the address you want your currency to be minted to, for this example put your own address in.\nEnter the amount of currency you want to create.\nThen hit write to send a transaction to mint.\n\n","title":"Step 3: Provide details for the Mint method","titles":["How to Mint in-game Currency in Builder"]},"184":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#step-4-mint-and-sign-your-transaction","html":"\n<p>Once you hit <code>write</code>, a modal with your wallet will pop-up. In order to create (mint) your currency, you will need to send a transaction.</p>\n<p>Read the transaction details and execute the transaction by hitting <code>confirm</code> on the signature.</p>\n<p><img src=\"/img/builder/builder_sign_transaction_mint_currency.png\" alt=\"Sequence builder choose contract\"/></p>\n<p>After you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.</p>\n<p>When the transaction is complete, you will have created your own currency by minting them from the smart contract!</p>\n","isPage":false,"text":"\nOnce you hit write, a modal with your wallet will pop-up. In order to create (mint) your currency, you will need to send a transaction.\nRead the transaction details and execute the transaction by hitting confirm on the signature.\n\nAfter you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction.\nWhen the transaction is complete, you will have created your own currency by minting them from the smart contract!\n","title":"Step 4: Mint and sign your transaction","titles":["How to Mint in-game Currency in Builder"]},"185":{"href":"/solutions/collectibles/contracts/903-mint-currency-from-ERC20#step-5-confirm-your-minted-currency","html":"\n<p>Click the <code>Balances</code> subsection to see the currency that we created and minted.</p>\n<p><img src=\"/img/builder/builder_confirm_mint_currency.png\" alt=\"Sequence builder choose contract\"/></p>","isPage":false,"text":"\nClick the Balances subsection to see the currency that we created and minted.\n","title":"Step 5: Confirm your minted currency","titles":["How to Mint in-game Currency in Builder"]},"186":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#how-to-manage-item-metadata-in-sequence-builder","html":"</header>\n","isPage":true,"text":"\n","title":"How to Manage Item Metadata in Sequence Builder","titles":[]},"187":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#introduction","html":"\n<p>Following this guide, you can easily manage token metadata for your contract items in Sequence Builder, with a little help from <a href=\"https://www.pinata.cloud/\">Pinata</a> for IPFS hosting.</p>\n","isPage":false,"text":"\nFollowing this guide, you can easily manage token metadata for your contract items in Sequence Builder, with a little help from Pinata for IPFS hosting.\n","title":"Introduction","titles":["How to Manage Item Metadata in Sequence Builder"]},"188":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-1-prepare-your-token-images-and-metadata","html":"\n<p>First things first, gather all your token images. For each token, you&#x27;ll need a metadata file named <code>id.json</code> (like <code>1.json</code>, <code>2.json</code>, etc.). These files should look something like this at a minimum:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Token Name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Token Description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;image&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ipfs://&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>As you can guess, you can build from these basics. You could have your unique item attributes embedded in this token and generated on the fly.</p>\n","isPage":false,"text":"\nFirst things first, gather all your token images. For each token, you&#x27;ll need a metadata file named id.json (like 1.json, 2.json, etc.). These files should look something like this at a minimum:\n{\n    &quot;name&quot;: &quot;Token Name&quot;,\n    &quot;description&quot;: &quot;Token Description&quot;,\n    &quot;image&quot;: &quot;ipfs://&quot;\n}\nAs you can guess, you can build from these basics. You could have your unique item attributes embedded in this token and generated on the fly.\n","title":"Step 1: Prepare Your Token Images and Metadata","titles":["How to Manage Item Metadata in Sequence Builder"]},"189":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-2-set-up-on-pinatacloud","html":"\n<p>Head over to <a href=\"https://www.pinata.cloud/\">Pinata.cloud</a> and create an account. Upload each of your token images as separate files. Next, update the metadata JSON files with the <code>ipfs</code> address for each token. To do this, simply copy the CID (Content Identifier) for each file from Pinata and paste it after <code>ipfs://</code> in your JSON files. It should look like this:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Token Name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Token Description&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;image&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ipfs://QmdJzQExj2wnNY7pNNn4KauzckjH4vA5xhoxmmis919Ev3&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/1.jpeg\" alt=\"Configure Pinata\"/></p>\n","isPage":false,"text":"\nHead over to Pinata.cloud and create an account. Upload each of your token images as separate files. Next, update the metadata JSON files with the ipfs address for each token. To do this, simply copy the CID (Content Identifier) for each file from Pinata and paste it after ipfs:// in your JSON files. It should look like this:\n{\n    &quot;name&quot;: &quot;Token Name&quot;,\n    &quot;description&quot;: &quot;Token Description&quot;,\n    &quot;image&quot;: &quot;ipfs://QmdJzQExj2wnNY7pNNn4KauzckjH4vA5xhoxmmis919Ev3&quot;\n}\n\n","title":"Step 2: Set Up on Pinata.cloud","titles":["How to Manage Item Metadata in Sequence Builder"]},"190":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-3-upload-your-metadata-files","html":"\n<p>Now, gather all your JSON metadata files into a single folder on your computer. Use Pinata&#x27;s &#x27;Upload &gt; Folder&#x27; feature to upload this folder. Then, copy the CID for the entire folder.</p>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/2.jpeg\" alt=\"Upload Metadata\"/></p>\n","isPage":false,"text":"\nNow, gather all your JSON metadata files into a single folder on your computer. Use Pinata&#x27;s &#x27;Upload &gt; Folder&#x27; feature to upload this folder. Then, copy the CID for the entire folder.\n\n","title":"Step 3: Upload Your Metadata Files","titles":["How to Manage Item Metadata in Sequence Builder"]},"191":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-4-get-the-folder-url","html":"\n<p>Click on name of the folder you created on Pinata. This will open a new tab showing all your uploaded JSON files. Copy the URL of this folder.</p>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/3.jpeg\" alt=\"Get Folder URL from Pinata\"/></p>\n","isPage":false,"text":"\nClick on name of the folder you created on Pinata. This will open a new tab showing all your uploaded JSON files. Copy the URL of this folder.\n\n","title":"Step 4: Get the Folder URL","titles":["How to Manage Item Metadata in Sequence Builder"]},"192":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-5-set-up-on-sequence-builder","html":"\n<p>Navigate to <a href=\"https://sequence.build/\">Sequence Builder</a>, set up your account, and create your project on the network of your choice. In the Contracts section, click on &quot;Deploy New Contract&quot;.</p>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/4.jpeg\" alt=\"Configure Contract on Builder\"/></p>\n","isPage":false,"text":"\nNavigate to Sequence Builder, set up your account, and create your project on the network of your choice. In the Contracts section, click on &quot;Deploy New Contract&quot;.\n\n","title":"Step 5: Set Up on Sequence Builder","titles":["How to Manage Item Metadata in Sequence Builder"]},"193":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-6-deploy-your-contract","html":"\n<p>Select &quot;Web3 Game Item Collection (ERC-1155)&quot; and name your contract. Sequence Builder will automatically deploy your contract on-chain.</p>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/5.jpeg\" alt=\"Deploy Contract\"/></p>\n","isPage":false,"text":"\nSelect &quot;Web3 Game Item Collection (ERC-1155)&quot; and name your contract. Sequence Builder will automatically deploy your contract on-chain.\n\n","title":"Step 6: Deploy Your Contract","titles":["How to Manage Item Metadata in Sequence Builder"]},"194":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-7-move-to-contract-details","html":"\n<p>Once you sign the transaction, your contract is ready! Click on it to view the details screen.</p>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/6.jpeg\" alt=\"Contract Details\"/></p>\n","isPage":false,"text":"\nOnce you sign the transaction, your contract is ready! Click on it to view the details screen.\n\n","title":"Step 7: Move to Contract Details","titles":["How to Manage Item Metadata in Sequence Builder"]},"195":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-8-update-contract-attributes","html":"\n<p>Navigate to the “Write Contract” section. This is where you can modify attributes of your freshly deployed ERC-1155 contract. Two methods are what you should focus on for now:</p>\n<ul>\n<li><code>setBaseMetadataURI</code> allows the creator to set the base metadata URL for this contract. You want this to point to the JSON files you’ve created, depending on NFT ID.</li>\n<li><code>mint</code> mints one of your tokens and sends it to an address of your choosing.</li>\n</ul>\n","isPage":false,"text":"\nNavigate to the “Write Contract” section. This is where you can modify attributes of your freshly deployed ERC-1155 contract. Two methods are what you should focus on for now:\n\nsetBaseMetadataURI allows the creator to set the base metadata URL for this contract. You want this to point to the JSON files you’ve created, depending on NFT ID.\nmint mints one of your tokens and sends it to an address of your choosing.\n\n","title":"Step 8: Update Contract Attributes","titles":["How to Manage Item Metadata in Sequence Builder"]},"196":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-9-set-the-base-metadata-uri","html":"\n<p>Scroll to <code>setBaseMetadataURI</code>, expand it, and under <code>tokenBaseURI</code> paste the URL for the JSON folder preview you got from Pinata earlier. It should look something like this:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>https://azure-wooden-lemur-911.mypinata.cloud/ipfs/QmW5gvYGWb98GsN8VjTRWu4pLn6jryEXNxZKNWpPhVwtDm/</span></span></code></pre>\n<p>Click “Write” and you will be prompted to sign again. This will modify the contract on chain to set the metadata base. Essentially any token ID you provide will be appended to this URL, along with the <code>.json</code> suffix. So if you mint token ID 123, it will look for <code>tokenBaseURI + 123.json</code>.</p>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/7.jpeg\" alt=\"Base Metadata Setup\"/></p>\n","isPage":false,"text":"\nScroll to setBaseMetadataURI, expand it, and under tokenBaseURI paste the URL for the JSON folder preview you got from Pinata earlier. It should look something like this:\nhttps://azure-wooden-lemur-911.mypinata.cloud/ipfs/QmW5gvYGWb98GsN8VjTRWu4pLn6jryEXNxZKNWpPhVwtDm/\nClick “Write” and you will be prompted to sign again. This will modify the contract on chain to set the metadata base. Essentially any token ID you provide will be appended to this URL, along with the .json suffix. So if you mint token ID 123, it will look for tokenBaseURI + 123.json.\n\n","title":"Step 9: Set the Base Metadata URI","titles":["How to Manage Item Metadata in Sequence Builder"]},"197":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-10-minting-time","html":"\n<p>Finally, it&#x27;s time to mint! Scroll up to <code>mint</code>, expand it, and fill in the details:</p>\n<ul>\n<li><code>to (address)</code>: This is the address that the token will be sent to. Use your Sequence wallet address or any other valid address.</li>\n<li><code>tokenId (uint256)</code>: This is your token ID. As long as you have a <code>tokenId.json</code> file already uploaded to pinata.cloud under the folder, it will work.</li>\n<li><code>amount (uint256)</code>: The number of tokens to mint (usually 1).</li>\n<li><code>data (bytes)</code>: Enter <code>0x00</code> for this simple process.</li>\n</ul>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/8.jpeg\" alt=\"Mint test\"/></p>\n","isPage":false,"text":"\nFinally, it&#x27;s time to mint! Scroll up to mint, expand it, and fill in the details:\n\nto (address): This is the address that the token will be sent to. Use your Sequence wallet address or any other valid address.\ntokenId (uint256): This is your token ID. As long as you have a tokenId.json file already uploaded to pinata.cloud under the folder, it will work.\namount (uint256): The number of tokens to mint (usually 1).\ndata (bytes): Enter 0x00 for this simple process.\n\n\n","title":"Step 10: Minting Time","titles":["How to Manage Item Metadata in Sequence Builder"]},"198":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-11-finalize-and-admire","html":"\n<p>Click &quot;Write&quot; and sign the transaction. Congratulations, you&#x27;ve just minted a token! Head over to the &quot;Tokens&quot; section to see your minted tokens with their names and images.</p>\n<p><img src=\"/img/solutions/collectibles/contracts/manage-contract-metadata-builder/9.jpeg\" alt=\"Finalize Minting\"/></p>\n","isPage":false,"text":"\nClick &quot;Write&quot; and sign the transaction. Congratulations, you&#x27;ve just minted a token! Head over to the &quot;Tokens&quot; section to see your minted tokens with their names and images.\n\n","title":"Step 11: Finalize and Admire","titles":["How to Manage Item Metadata in Sequence Builder"]},"199":{"href":"/solutions/collectibles/metadata/800-manage-contract-metadata-builder#step-12-updating-metadata","html":"\n<p>If you make mistakes with the token metadata, you can always update it and then call the Sequence Metadata refresh endpoint to reload the specific tokens:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>curl -X GET &quot;https://metadata.sequence.app/tokens/mumbai/0xb392c99d9f8e3e0b248e5c283818be5bf5cecca7/1/refresh&quot;</span></span></code></pre>\n<p>This is in the format: <code>https://metadata.sequence.app/tokens/&lt;chain-name&gt;/&lt;contract-address&gt;/&lt;token-id&gt;/refresh</code></p>\n<p>Now that you are ready to mint, you might want to read about <a href=\"/guides/templates/template-cloudflare-relayer\">how you can launch your own serverless endpoint for securely minting tokens</a>.</p>","isPage":false,"text":"\nIf you make mistakes with the token metadata, you can always update it and then call the Sequence Metadata refresh endpoint to reload the specific tokens:\ncurl -X GET &quot;https://metadata.sequence.app/tokens/mumbai/0xb392c99d9f8e3e0b248e5c283818be5bf5cecca7/1/refresh&quot;\nThis is in the format: https://metadata.sequence.app/tokens/&lt;chain-name&gt;/&lt;contract-address&gt;/&lt;token-id&gt;/refresh\nNow that you are ready to mint, you might want to read about how you can launch your own serverless endpoint for securely minting tokens.","title":"Step 12: Updating Metadata","titles":["How to Manage Item Metadata in Sequence Builder"]},"200":{"href":"/solutions/marketplaces/orderbook/01-overview#overview","html":"</header>\n<p>The Sequence Marketplace API service offers a simple and fast way to interact with sequence marketplace protocols to build a custom marketplace while accelerating your development time. The API is designed to be easy to use and to have all the features you need to build a fully functional marketplace.</p>","isPage":true,"text":"\nThe Sequence Marketplace API service offers a simple and fast way to interact with sequence marketplace protocols to build a custom marketplace while accelerating your development time. The API is designed to be easy to use and to have all the features you need to build a fully functional marketplace.","title":"Overview","titles":[]},"201":{"href":"/solutions/marketplaces/orderbook/02-quickstart#quickstart","html":"</header>\n","isPage":true,"text":"\n","title":"Quickstart","titles":[]},"202":{"href":"/solutions/marketplaces/orderbook/02-quickstart#try-a-demo","html":"\n<aside data-callout=\"info\"><p>Check out our <a href=\"https://lucky-pond-0796.on.fleek.co/\">demo</a> to see a custom marketplace in action.</p></aside>\n","isPage":false,"text":"\nCheck out our demo to see a custom marketplace in action.\n","title":"Try a Demo","titles":["Quickstart"]},"203":{"href":"/solutions/marketplaces/orderbook/02-quickstart#template","html":"\n<aside data-callout=\"info\"><p>Get started quickly with a <a href=\"https://github.com/moskalyk/aviator-custom-marketplace\">template</a> leveraging our Orderbook API.</p></aside>\n","isPage":false,"text":"\nGet started quickly with a template leveraging our Orderbook API.\n","title":"Template","titles":["Quickstart"]},"204":{"href":"/solutions/marketplaces/orderbook/02-quickstart#getting-started","html":"\n<p>Check out the <a href=\"https://test.com\">Orderbook API TODO: INSERT LINK</a> for an overview of the API endpoints to create your own custom marketplace</p>","isPage":false,"text":"\nCheck out the Orderbook API TODO: INSERT LINK for an overview of the API endpoints to create your own custom marketplace","title":"Getting Started","titles":["Quickstart"]},"205":{"href":"/solutions/payments/onramps/01-fiat-on-ramps#fiat-on-ramps","html":"</header>\n<p>Sequence Wallet allows users to purchase cryptocurrencies directly with their credit card and debit card via on-ramp providers. Currently Sequence supports 6 on-ramp providers;</p>\n<ul>\n<li><a href=\"https://www.moonpay.com/\">Moonpay</a></li>\n<li><a href=\"https://ramp.network/\">Ramp</a></li>\n<li><a href=\"https://onmeta.in/\">UPI via Onmeta</a></li>\n<li><a href=\"https://www.sardine.ai/\">Sardine</a></li>\n<li><a href=\"https://paytrie.com/\">PayTrie</a></li>\n</ul>\n<p>Only providers that support the region the users are in will be displayed.</p>\n<p><img src=\"/img/fiat-providers.png\" alt=\"Sequence on-demand sign in\"/></p>\n<p>As a developer integrating the Sequence Wallet, you can choose which payment provider can be visible to users. You can also specify which token will be available to purchase via the on-ramp providers.</p>\n<p>To learn more on how to configure the on-ramp options, see <a href=\"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#wallet-login-and-connect-options\">Sequence Connect Options</a>.</p>","isPage":true,"text":"\nSequence Wallet allows users to purchase cryptocurrencies directly with their credit card and debit card via on-ramp providers. Currently Sequence supports 6 on-ramp providers;\n\nMoonpay\nRamp\nUPI via Onmeta\nSardine\nPayTrie\n\nOnly providers that support the region the users are in will be displayed.\n\nAs a developer integrating the Sequence Wallet, you can choose which payment provider can be visible to users. You can also specify which token will be available to purchase via the on-ramp providers.\nTo learn more on how to configure the on-ramp options, see Sequence Connect Options.","title":"Fiat On-Ramps","titles":[]},"206":{"href":"/solutions/technical-references/wallet-contracts/01-why#why-smart-contracts-wallets","html":"</header>\n<p>Ethereum wallets may take two different forms, Externally owned accounts (EOAs) or Smart Contract Wallets.\nThe Sequence wallet is implemented as a smart contract, which allows the system to provide additional security and functionality.</p>\n","isPage":true,"text":"\nEthereum wallets may take two different forms, Externally owned accounts (EOAs) or Smart Contract Wallets.\nThe Sequence wallet is implemented as a smart contract, which allows the system to provide additional security and functionality.\n","title":"Why smart contracts wallets?","titles":[]},"207":{"href":"/solutions/technical-references/wallet-contracts/01-why#externally-owned-accounts","html":"\n<p>Externally owned accounts are the most primitive form of wallet on Ethereum; EOAs are accounts composed of a single ECDSA key pair.</p>\n","isPage":false,"text":"\nExternally owned accounts are the most primitive form of wallet on Ethereum; EOAs are accounts composed of a single ECDSA key pair.\n","title":"Externally owned accounts","titles":["Why smart contracts wallets?"]},"208":{"href":"/solutions/technical-references/wallet-contracts/01-why#pros","html":"\n<ul>\n<li>Simple to implement</li>\n<li>Cheap to use (in some scenarios)</li>\n<li>Easy to backup</li>\n</ul>\n","isPage":false,"text":"\n\nSimple to implement\nCheap to use (in some scenarios)\nEasy to backup\n\n","title":"Pros","titles":["Why smart contracts wallets?","Externally owned accounts"]},"209":{"href":"/solutions/technical-references/wallet-contracts/01-why#popular-examples","html":"\n<ul>\n<li><a href=\"https://metamask.io/\">MetaMask</a></li>\n<li><a href=\"https://rainbow.me/\">Rainbow</a></li>\n<li><a href=\"https://www.myetherwallet.com/\">MyEtherWallet</a></li>\n<li><a href=\"https://trustwallet.com/\">Trust</a></li>\n</ul>\n","isPage":false,"text":"\n\nMetaMask\nRainbow\nMyEtherWallet\nTrust\n\n","title":"Popular examples","titles":["Why smart contracts wallets?","Externally owned accounts"]},"210":{"href":"/solutions/technical-references/wallet-contracts/01-why#smart-contract-wallets","html":"\n<p>Smart contract wallets are wallets that are implemented as smart contracts; it allows the wallets to implement arbitrary logic within the bounds of what&#x27;s supported by the underlying virtual machine.\nBecause of this, these contracts can implement functionality that&#x27;s not available for EOAs, and can also be upgraded if they are prepared to do so.</p>\n","isPage":false,"text":"\nSmart contract wallets are wallets that are implemented as smart contracts; it allows the wallets to implement arbitrary logic within the bounds of what&#x27;s supported by the underlying virtual machine.\nBecause of this, these contracts can implement functionality that&#x27;s not available for EOAs, and can also be upgraded if they are prepared to do so.\n","title":"Smart contract wallets","titles":["Why smart contracts wallets?"]},"211":{"href":"/solutions/technical-references/wallet-contracts/01-why#pros-1","html":"\n<ul>\n<li>Multiple keys</li>\n<li>Key rotation</li>\n<li>Pay fees using ERC20 tokens (e.g. USDC)</li>\n<li>Upgradeability</li>\n<li>Social recovery support</li>\n<li>Meta-transactions</li>\n<li>More flexible design space</li>\n</ul>\n","isPage":false,"text":"\n\nMultiple keys\nKey rotation\nPay fees using ERC20 tokens (e.g. USDC)\nUpgradeability\nSocial recovery support\nMeta-transactions\nMore flexible design space\n\n","title":"Pros","titles":["Why smart contracts wallets?","Smart contract wallets"]},"212":{"href":"/solutions/technical-references/wallet-contracts/01-why#examples","html":"\n<ul>\n<li><a href=\"https://sequence.app/\">Sequence</a></li>\n<li><a href=\"https://safe.global/\">Gnosis Safe</a></li>\n<li><a href=\"https://www.argent.xyz/\">Argent</a></li>\n</ul>","isPage":false,"text":"\n\nSequence\nGnosis Safe\nArgent\n","title":"Examples","titles":["Why smart contracts wallets?"]},"213":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#universal-deployer","html":"</header>\n<p>The Sequence contract wallets use <a href=\"https://weka.medium.com/how-to-send-ether-to-11-440-people-187e332566b7\">Nick&#x27;s method</a> to deploy the contracts that compose the smart contract wallet.\nThis method has been chosen because it allows each wallet to take the same address on multiple chains, making it easier to use and less prone to mistakes.</p>\n<p>:::danger Limitations\nSequence wallets <strong>may not</strong> receive the same address on all EVM compatible chains.</p>\n<p>Networks that implement only a subset of the EVM opcodes, or alternative virtual machines, will result in a different address for each chain.</p>\n<p><strong>Double-check your addresses</strong> before sending any assets to them.\n:::</p>\n<p>:::info Notice\nA complete script for deployment can be found in the <a href=\"https://github.com/0xsequence/live-contracts\">Sequence Live Contracts repository</a>.\n:::</p>\n","isPage":true,"text":"\nThe Sequence contract wallets use Nick&#x27;s method to deploy the contracts that compose the smart contract wallet.\nThis method has been chosen because it allows each wallet to take the same address on multiple chains, making it easier to use and less prone to mistakes.\n:::danger Limitations\nSequence wallets may not receive the same address on all EVM compatible chains.\nNetworks that implement only a subset of the EVM opcodes, or alternative virtual machines, will result in a different address for each chain.\nDouble-check your addresses before sending any assets to them.\n:::\n:::info Notice\nA complete script for deployment can be found in the Sequence Live Contracts repository.\n:::\n","title":"Universal Deployer","titles":[]},"214":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#deploy-process-v2","html":"\n<p>The following steps are required to deploy the <a href=\"/solutions/technical-references/wallet-contracts/02-universal-deployer#3---deploy-wallet-context\">Sequence Wallet Context</a> on a new network.</p>\n<p>:::info Notice\nFor most popular networks this process <strong>is not</strong> required; due to the wallet contracts being already deployed.</p>\n<p>To see if a configuration already exists for a given chain go to <a href=\"solutions/technical-references/chain-support\">Networks</a>.\n:::</p>\n","isPage":false,"text":"\nThe following steps are required to deploy the Sequence Wallet Context on a new network.\n:::info Notice\nFor most popular networks this process is not required; due to the wallet contracts being already deployed.\nTo see if a configuration already exists for a given chain go to Networks.\n:::\n","title":"Deploy Process V2","titles":["Universal Deployer"]},"215":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#1---deploy-singleton-factory","html":"\n<p>The Singleton Factory is a contract that allows the deployment of a single contract instance per address. Unlike the\n<a href=\"#universal-deployer\">Universal Deployer</a>, the Singleton Factory requires a salt to manage deployment instances. More information about the\nSingleton Factory can be found in the <a href=\"https://eips.ethereum.org/EIPS/eip-2470\">EIP-2470 specification</a>.</p>\n<p>The Pre-fund the Singleton Factory&#x27;s deployer with the required funds to deploy the contract.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Address: 0xBb6e024b9cFFACB947A71991E386681B1Cd1477D</span></span>\n<span class=\"line\"><span>Funds: 0.0247</span></span></code></pre>\n<strong>Do not send additional funds to the address, as funds can&#x27;t be refunded.</strong>\n<p>Once the address is funded, you can deploy the Singleton Factory by executing the following pre-signed transaction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>0xf9016c8085174876e8008303c4d88080b90154608060405234801561001057600080fd5b50610134806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634af63f0214602d575b600080fd5b60cf60048036036040811015604157600080fd5b810190602081018135640100000000811115605b57600080fd5b820183602082011115606c57600080fd5b80359060200191846001830284011164010000000083111715608d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925060eb915050565b604080516001600160a01b039092168252519081900360200190f35b6000818351602085016000f5939250505056fea26469706673582212206b44f8a82cb6b156bfcc3dc6aadd6df4eefd204bc928a4397fd15dacf6d5320564736f6c634300060200331b83247000822470</span></span></code></pre>\n<p>After the transaction is confirmed, you should see the address of the Singleton Factory:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Singleton Deployer: 0xce0042B868300000d44A59004Da54A005ffdcf9f</span></span></code></pre>\n","isPage":false,"text":"\nThe Singleton Factory is a contract that allows the deployment of a single contract instance per address. Unlike the\nUniversal Deployer, the Singleton Factory requires a salt to manage deployment instances. More information about the\nSingleton Factory can be found in the EIP-2470 specification.\nThe Pre-fund the Singleton Factory&#x27;s deployer with the required funds to deploy the contract.\nAddress: 0xBb6e024b9cFFACB947A71991E386681B1Cd1477D\nFunds: 0.0247\nDo not send additional funds to the address, as funds can&#x27;t be refunded.\nOnce the address is funded, you can deploy the Singleton Factory by executing the following pre-signed transaction:\n0xf9016c8085174876e8008303c4d88080b90154608060405234801561001057600080fd5b50610134806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634af63f0214602d575b600080fd5b60cf60048036036040811015604157600080fd5b810190602081018135640100000000811115605b57600080fd5b820183602082011115606c57600080fd5b80359060200191846001830284011164010000000083111715608d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925060eb915050565b604080516001600160a01b039092168252519081900360200190f35b6000818351602085016000f5939250505056fea26469706673582212206b44f8a82cb6b156bfcc3dc6aadd6df4eefd204bc928a4397fd15dacf6d5320564736f6c634300060200331b83247000822470\nAfter the transaction is confirmed, you should see the address of the Singleton Factory:\nSingleton Deployer: 0xce0042B868300000d44A59004Da54A005ffdcf9f\n","title":"1 - Deploy Singleton Factory","titles":["Universal Deployer","Deploy Process V2"]},"216":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#2---deploy-wallet-context","html":"\n<p>Deploy each of the contracts in the <a href=\"/solutions/technical-references/wallet-contracts/02-universal-deployer/#\">Sequence Wallet Context</a> using the Singleton Factory.</p>\n<p>A script can be found in the <a href=\"https://github.com/0xsequence/wallet-contracts/\">Sequence Wallet Contracts repository</a>.</p>\n<p>Clone the repository, configure the environment variables and run the script with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>yarn deploy &lt;network&gt;</span></span></code></pre>\n","isPage":false,"text":"\nDeploy each of the contracts in the Sequence Wallet Context using the Singleton Factory.\nA script can be found in the Sequence Wallet Contracts repository.\nClone the repository, configure the environment variables and run the script with:\nyarn deploy &lt;network&gt;\n","title":"2 - Deploy Wallet Context","titles":["Universal Deployer","Deploy Process V2"]},"217":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#deploy-process-v1","html":"\n<p>The following steps are required to deploy the <a href=\"/solutions/technical-references/wallet-contracts/02-universal-deployer#3---deploy-wallet-context\">Sequence Wallet V1 Context</a> on a new network.</p>\n<p>:::info Notice\nFor most popular networks this process <strong>is not</strong> required; due to the wallet contracts being already deployed.</p>\n<p>To see if a configuration already exists for a given chain go to <a href=\"solutions/technical-references/chain-support\">Networks</a>.\n:::</p>\n<p>A complete code example of this deployment flow can be found in the <a href=\"https://github.com/0xsequence/sequence.js/blob/91ed0df67fc5ddc47abf727ae8b94a8ca4f66912/packages/0xsequence/tests/browser/testutils/deploy-wallet-context.ts\">0xSequence.js test suite</a>\nand <a href=\"https://github.com/0xsequence/wallet-contracts/blob/38e0719690eee3c4d7d8fa2ceff4ea22b0409f38/utils/deploy-contracts.ts\">Wallet Contracts repository</a>.</p>\n","isPage":false,"text":"\nThe following steps are required to deploy the Sequence Wallet V1 Context on a new network.\n:::info Notice\nFor most popular networks this process is not required; due to the wallet contracts being already deployed.\nTo see if a configuration already exists for a given chain go to Networks.\n:::\nA complete code example of this deployment flow can be found in the 0xSequence.js test suite\nand Wallet Contracts repository.\n","title":"Deploy Process V1","titles":["Universal Deployer"]},"218":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#1---deploy-nanouniversaldeployer","html":"\n<p>Pre-found Nick&#x27;s method address with funds required to pay for the deployment of contracts.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Address: 0x9c5a87452d4FAC0cbd53BDCA580b20A45526B3AB</span></span>\n<span class=\"line\"><span>Funds: 0.02170000000014</span></span></code></pre>\n<strong>Do not send additional funds to the address, as funds can&#x27;t be refunded.</strong>\n<p>Once the address is funded, you can deploy the NanoUniversalDeployer by executing the following pre-signed transaction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>0xf9010880852416b84e01830222e08080b8b66080604052348015600f57600080fd5b50609980601d6000396000f3fe60a06020601f369081018290049091028201604052608081815260009260609284918190838280828437600092018290525084519495509392505060208401905034f5604080516001600160a01b0383168152905191935081900360200190a0505000fea26469706673582212205a310755225e3c740b2f013fb6343f4c205e7141fcdf15947f5f0e0e818727fb64736f6c634300060a00331ca01820182018201820182018201820182018201820182018201820182018201820a01820182018201820182018201820182018201820182018201820182018201820</span></span></code></pre>\n<p>After the transaction is confirmed, you should see the address of the NanoUniversalDeployer:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>NanoUniversalDeployer: 0x9c5a87452d4FAC0cbd53BDCA580b20A45526B3AB</span></span></code></pre>\n<p>See more about the <a href=\"https://gist.github.com/Agusx1211/de05dabf918d448d315aa018e2572031\">NanoUniversalDeployer</a>.</p>\n","isPage":false,"text":"\nPre-found Nick&#x27;s method address with funds required to pay for the deployment of contracts.\nAddress: 0x9c5a87452d4FAC0cbd53BDCA580b20A45526B3AB\nFunds: 0.02170000000014\nDo not send additional funds to the address, as funds can&#x27;t be refunded.\nOnce the address is funded, you can deploy the NanoUniversalDeployer by executing the following pre-signed transaction:\n0xf9010880852416b84e01830222e08080b8b66080604052348015600f57600080fd5b50609980601d6000396000f3fe60a06020601f369081018290049091028201604052608081815260009260609284918190838280828437600092018290525084519495509392505060208401905034f5604080516001600160a01b0383168152905191935081900360200190a0505000fea26469706673582212205a310755225e3c740b2f013fb6343f4c205e7141fcdf15947f5f0e0e818727fb64736f6c634300060a00331ca01820182018201820182018201820182018201820182018201820182018201820a01820182018201820182018201820182018201820182018201820182018201820\nAfter the transaction is confirmed, you should see the address of the NanoUniversalDeployer:\nNanoUniversalDeployer: 0x9c5a87452d4FAC0cbd53BDCA580b20A45526B3AB\nSee more about the NanoUniversalDeployer.\n","title":"1 - Deploy NanoUniversalDeployer","titles":["Universal Deployer","Deploy Process V1"]},"219":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#2---deploy-universaldeployer2","html":"\n<p>In order to deploy contracts with an instance identifier, we need to deploy the UniversalDeployer2 contract. To ensure address consistency\nwe use the UniversalDeployer contract to deploy the UniversalDeployer contract.</p>\n<p>Send the following data to the UniversalDeployer deployed in the previous step.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>0x608060405234801561001057600080fd5b5061013d806100206000396000f3fe60806040526004361061001e5760003560e01c80639c4ae2d014610023575b600080fd5b6100cb6004803603604081101561003957600080fd5b81019060208101813564010000000081111561005457600080fd5b82018360208201111561006657600080fd5b8035906020019184600183028401116401000000008311171561008857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506100cd915050565b005b60008183516020850134f56040805173ffffffffffffffffffffffffffffffffffffffff83168152905191925081900360200190a050505056fea264697066735822122033609f614f03931b92d88c309d698449bb77efcd517328d341fa4f923c5d8c7964736f6c63430007060033</span></span></code></pre>\n<p>After the transaction is confirmed, you should see the address of the UniversalDeployer2:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>UniversalDeployer2: 0x8a5bc19e22d6ad55a2c763b93a75d09f321fe764</span></span></code></pre>\n","isPage":false,"text":"\nIn order to deploy contracts with an instance identifier, we need to deploy the UniversalDeployer2 contract. To ensure address consistency\nwe use the UniversalDeployer contract to deploy the UniversalDeployer contract.\nSend the following data to the UniversalDeployer deployed in the previous step.\n0x608060405234801561001057600080fd5b5061013d806100206000396000f3fe60806040526004361061001e5760003560e01c80639c4ae2d014610023575b600080fd5b6100cb6004803603604081101561003957600080fd5b81019060208101813564010000000081111561005457600080fd5b82018360208201111561006657600080fd5b8035906020019184600183028401116401000000008311171561008857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506100cd915050565b005b60008183516020850134f56040805173ffffffffffffffffffffffffffffffffffffffff83168152905191925081900360200190a050505056fea264697066735822122033609f614f03931b92d88c309d698449bb77efcd517328d341fa4f923c5d8c7964736f6c63430007060033\nAfter the transaction is confirmed, you should see the address of the UniversalDeployer2:\nUniversalDeployer2: 0x8a5bc19e22d6ad55a2c763b93a75d09f321fe764\n","title":"2 - Deploy UniversalDeployer2","titles":["Universal Deployer","Deploy Process V1"]},"220":{"href":"/solutions/technical-references/wallet-contracts/02-universal-deployer#3---deploy-wallet-context","html":"\n<p>Compile and deploy the contracts in the <a href=\"/solutions/technical-references/wallet-contracts/02-universal-deployer#3---deploy-wallet-context\">Sequence Wallet Context</a> using the UniversalDeployer2.</p>\n<p>Refer to the <a href=\"https://github.com/0xsequence/sequence.js/blob/91ed0df67fc5ddc47abf727ae8b94a8ca4f66912/packages/0xsequence/tests/browser/testutils/deploy-wallet-context.ts\">0xSequence.js test suite</a>\nor <a href=\"https://github.com/0xsequence/wallet-contracts/blob/38e0719690eee3c4d7d8fa2ceff4ea22b0409f38/utils/deploy-contracts.ts\">Wallet Contracts repository</a>\nfor the Wallet Contract context codebase.</p>","isPage":false,"text":"\nCompile and deploy the contracts in the Sequence Wallet Context using the UniversalDeployer2.\nRefer to the 0xSequence.js test suite\nor Wallet Contracts repository\nfor the Wallet Contract context codebase.","title":"3 - Deploy Wallet Context","titles":["Universal Deployer","Deploy Process V1"]},"221":{"href":"/solutions/technical-references/wallet-contracts/03-wallet-factory#wallet-factory","html":"</header>\n<p>Sequence Wallets are created using the <a href=\"https://github.com/0xsequence/wallet-contracts/blob/e0c5382636a88b4db4bcf0a70623355d7cd30fb4/contracts/Factory.sol\">Factory</a> contract, when called it creates child <a href=\"https://github.com/0xsequence/wallet-contracts/blob/e0c5382636a88b4db4bcf0a70623355d7cd30fb4/contracts/Wallet.sol\">MinimalUpgradeableProxies</a> contracts, which are in essence the &quot;boot&quot; code of all Sequence wallets.</p>\n","isPage":true,"text":"\nSequence Wallets are created using the Factory contract, when called it creates child MinimalUpgradeableProxies contracts, which are in essence the &quot;boot&quot; code of all Sequence wallets.\n","title":"Wallet Factory","titles":[]},"222":{"href":"/solutions/technical-references/wallet-contracts/03-wallet-factory#factory-api","html":"\n","isPage":false,"text":"\n","title":"Factory API","titles":["Wallet Factory"]},"223":{"href":"/solutions/technical-references/wallet-contracts/03-wallet-factory#deploy","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> deploy</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _mainModule,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    bytes32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _salt</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">public</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> payable</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _contract)</span></span></code></pre>\n<p>Creates a child MinimalUpgradeableProxy using <a href=\"https://eips.ethereum.org/EIPS/eip-1014\">CREATE2</a>, the proxy initially points to the provided <code>_mainModule</code>.\nNo initialize code is executed.</p>\n","isPage":false,"text":"\n  function deploy(\n    address _mainModule,\n    bytes32 _salt\n  ) public payable returns (address _contract)\nCreates a child MinimalUpgradeableProxy using CREATE2, the proxy initially points to the provided _mainModule.\nNo initialize code is executed.\n","title":"deploy","titles":["Wallet Factory","Factory API"]},"224":{"href":"/solutions/technical-references/wallet-contracts/03-wallet-factory#parameters","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>_mainModule</td><td>address</td><td>Initial implementation for the new proxy contract, expected to point to a valid Sequence wallet implementation with support for counter-factual initialization.</td></tr><tr><td>_salt</td><td>bytes32</td><td>Arbitrary value to be used as <code>create2</code> salt. Sequence&#x27;s <code>mainModule</code> uses the salt to obtain a hash with the initial configuration for the wallet (See <a href=\"#\">ImageHash</a>).</td></tr></tbody></table>\n","isPage":false,"text":"\nNameTypeDescription_mainModuleaddressInitial implementation for the new proxy contract, expected to point to a valid Sequence wallet implementation with support for counter-factual initialization._saltbytes32Arbitrary value to be used as create2 salt. Sequence&#x27;s mainModule uses the salt to obtain a hash with the initial configuration for the wallet (See ImageHash).\n","title":"Parameters:","titles":["Wallet Factory","Factory API","deploy"]},"225":{"href":"/solutions/technical-references/wallet-contracts/03-wallet-factory#return-values","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>_contract</td><td>address</td><td>Address of the created proxy contract.</td></tr></tbody></table>\n<p>:::caution Unsanitized input\nThe Factory contract <strong>does not</strong> check if the provided <code>_mainModule</code> is a valid Sequence wallet implementation, or if <code>_salt</code> is a valid Sequence configuration.</p>\n<p>Using invalid parameters will result on a proxy contract that <strong>may not</strong> be usable, and could result in loss of funds.\n:::</p>\n","isPage":false,"text":"\nNameTypeDescription_contractaddressAddress of the created proxy contract.\n:::caution Unsanitized input\nThe Factory contract does not check if the provided _mainModule is a valid Sequence wallet implementation, or if _salt is a valid Sequence configuration.\nUsing invalid parameters will result on a proxy contract that may not be usable, and could result in loss of funds.\n:::\n","title":"Return Values:","titles":["Wallet Factory","Factory API","deploy"]},"226":{"href":"/solutions/technical-references/wallet-contracts/03-wallet-factory#counter-factual-addresses","html":"\n<p>Sequence wallets are counter-factual by design, this means that the wallet&#x27;s address can be known before the wallet is deployed; any two combinations of the <code>mainModule</code> and <code>salt</code> values will result in the same wallet address.</p>\n<p>This property alongside the use of <a href=\"/solutions/technical-references/wallet-contracts/02-universal-deployer\">SingletonDeployer</a> or <a href=\"/solutions/technical-references/wallet-contracts/02-universal-deployer\">UniversalDeployer</a> is the reason why Sequence wallets can obtain the same address on multiple chains.</p>\n<p>:::tip Gas-free wallet creation\nSequence wallets are <strong>100% counterfactual</strong>, meaning that funds can be safely transferred to the wallet&#x27;s address without the need for calling the <code>deploy</code> function.</p>\n<p>Deploying the wallet is only required before the first transaction is sent <strong>from</strong> the wallet.\n:::</p>","isPage":false,"text":"\nSequence wallets are counter-factual by design, this means that the wallet&#x27;s address can be known before the wallet is deployed; any two combinations of the mainModule and salt values will result in the same wallet address.\nThis property alongside the use of SingletonDeployer or UniversalDeployer is the reason why Sequence wallets can obtain the same address on multiple chains.\n:::tip Gas-free wallet creation\nSequence wallets are 100% counterfactual, meaning that funds can be safely transferred to the wallet&#x27;s address without the need for calling the deploy function.\nDeploying the wallet is only required before the first transaction is sent from the wallet.\n:::","title":"Counter factual addresses","titles":["Wallet Factory"]},"227":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#wallet-configuration","html":"</header>\n<p>Every Sequence wallet has a configuration defined by a threshold and a list of signers with their corresponding weights.</p>\n","isPage":true,"text":"\nEvery Sequence wallet has a configuration defined by a threshold and a list of signers with their corresponding weights.\n","title":"Wallet Configuration","titles":[]},"228":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#configuration-layout","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Range</th><th>Description</th></tr></thead><tbody><tr><td>Threshold</td><td><code>uint16</code></td><td>1 - 65535</td><td>Required combined total &quot;weight&quot; of signers for a signature to be considered valid.</td></tr><tr><td>Signers</td><td><code>signer[]</code></td><td>unlimited - bounded by gas</td><td>List of signers that with their corresponding &quot;weight&quot;s.</td></tr></tbody></table>\n","isPage":false,"text":"\nNameTypeRangeDescriptionThresholduint161 - 65535Required combined total &quot;weight&quot; of signers for a signature to be considered valid.Signerssigner[]unlimited - bounded by gasList of signers that with their corresponding &quot;weight&quot;s.\n","title":"Configuration layout","titles":["Wallet Configuration"]},"229":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#signer-layout","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Range</th><th>Description</th></tr></thead><tbody><tr><td>&quot;weight&quot;</td><td><code>uint8</code></td><td>0 - 255</td><td>&quot;weight&quot; of every signature of the signer.</td></tr><tr><td>&quot;address&quot;</td><td><code>&quot;address&quot;</code></td><td>--</td><td>&quot;address&quot; of the signer, it may be an EOA or another smart contract wallet with EIP-1271 support.</td></tr></tbody></table>\n","isPage":false,"text":"\nNameTypeRangeDescription&quot;weight&quot;uint80 - 255&quot;weight&quot; of every signature of the signer.&quot;address&quot;&quot;address&quot;--&quot;address&quot; of the signer, it may be an EOA or another smart contract wallet with EIP-1271 support.\n","title":"Signer layout","titles":["Wallet Configuration","Configuration layout"]},"230":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#example","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;threshold&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;signers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;weight&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x596af90cecdbf9a768886e771178fd5561dd27ab&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;weight&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">3</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;weight&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">2</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xec9a7204a43d3f4a82c84fde92d25bfc9110981e&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;weight&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>This example has a threshold of 5 and 4 signers.</p>\n","isPage":false,"text":"\n{\n  &quot;threshold&quot;: 5,\n  &quot;signers&quot;: [\n    {\n      &quot;address&quot;: &quot;0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea&quot;,\n      &quot;weight&quot;: 2\n    },\n    {\n      &quot;address&quot;: &quot;0x596af90cecdbf9a768886e771178fd5561dd27ab&quot;,\n      &quot;weight&quot;: 3\n    },\n    {\n      &quot;address&quot;: &quot;0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1&quot;,\n      &quot;weight&quot;: 2\n    },\n    {\n      &quot;address&quot;: &quot;0xec9a7204a43d3f4a82c84fde92d25bfc9110981e&quot;,\n      &quot;weight&quot;: 1\n    }\n  ]\n}\nThis example has a threshold of 5 and 4 signers.\n","title":"Example","titles":["Wallet Configuration","Configuration layout","Signer layout"]},"231":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#the-valid-combinations-of-signers-are","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>- 0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea &amp; 0x596af90cecdbf9a768886e771178fd5561dd27ab - combined weight of 2 + 3 = 5</span></span>\n<span class=\"line\"><span>- 0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1 &amp; 0x596af90cecdbf9a768886e771178fd5561dd27ab - combined weight of 2 + 3 = 5</span></span>\n<span class=\"line\"><span>- 0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea, 0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1 &amp; 0xec9a7204a43d3f4a82c84fde92d25bfc9110981e - combined weight of 2 + 2 + 1 = 5</span></span></code></pre>\n<p>Any combination of signers with a combined weight under the threshold is considered invalid; any additional signers above the threshold are ignored.</p>\n","isPage":false,"text":"\n- 0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea &amp; 0x596af90cecdbf9a768886e771178fd5561dd27ab - combined weight of 2 + 3 = 5\n- 0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1 &amp; 0x596af90cecdbf9a768886e771178fd5561dd27ab - combined weight of 2 + 3 = 5\n- 0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea, 0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1 &amp; 0xec9a7204a43d3f4a82c84fde92d25bfc9110981e - combined weight of 2 + 2 + 1 = 5\nAny combination of signers with a combined weight under the threshold is considered invalid; any additional signers above the threshold are ignored.\n","title":"The valid combinations of signers are:","titles":["Wallet Configuration","Configuration layout","Signer layout"]},"232":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#configuration-hash---imagehash","html":"\n<p>The configuration is never stored directly on the contract, but instead is hashed and checked against every time a signature is validated. This allows the wallet contracts to reduce the usage of storage and therefore the gas cost.</p>\n<p>Wallets that never have been updated don&#x27;t store the <code>imageHash</code> directly, instead the <code>imageHash</code> is used as the <code>salt</code> during the contract creation, and signatures are validated against the address of the wallet.</p>\n","isPage":false,"text":"\nThe configuration is never stored directly on the contract, but instead is hashed and checked against every time a signature is validated. This allows the wallet contracts to reduce the usage of storage and therefore the gas cost.\nWallets that never have been updated don&#x27;t store the imageHash directly, instead the imageHash is used as the salt during the contract creation, and signatures are validated against the address of the wallet.\n","title":"Configuration hash - ImageHash","titles":["Wallet Configuration","Configuration layout"]},"233":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#compute-image-hash","html":"\n","isPage":false,"text":"\n","title":"Compute image hash","titles":["Wallet Configuration","Configuration layout","Configuration hash - ImageHash"]},"234":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#todo-implement-table-from-v1-docs","html":"\n","isPage":false,"text":"\n","title":"TODO Implement table from v1 docs","titles":["Wallet Configuration"]},"235":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#initial-wallet-configuration","html":"\n<p>The initial wallet configuration determines the address of the wallet, subsequent updates don&#x27;t change the address.</p>\n<p>The wallet address can be computed using the <code>imageHash</code>, the <code>factory</code> and <code>mainModule</code> of the wallet.</p>\n","isPage":false,"text":"\nThe initial wallet configuration determines the address of the wallet, subsequent updates don&#x27;t change the address.\nThe wallet address can be computed using the imageHash, the factory and mainModule of the wallet.\n","title":"Initial wallet configuration","titles":["Wallet Configuration"]},"236":{"href":"/solutions/technical-references/wallet-contracts/04-wallet-configuration#compute-wallet-address","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// The code of the wallet proxy contract</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> WalletProxyBytecode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// These values are defined by the wallet context</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// they must be known in order to validate the counter-factual wallet imageHash</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> factory</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0xf9D09D634Fb818b05149329C1dcCFAeA53639d96&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> mainModule</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0xd01F11855bCcb95f88D7A48492F66410d4637313&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Append the `mainModule` to the `WalletProxyBytecode`</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// this completed the creation code of the proxy contract</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// used for computing the wallet address as defined by the CREATE2 opcode</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> codeHash</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">keccak256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">solidityPack</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    [</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      &#x27;bytes&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      &#x27;bytes32&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      WalletContractBytecode,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hexZeroPad</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(mainModule, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Compute the wallet address</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> hash</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">keccak256</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">solidityPack</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    [</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      &#x27;bytes1&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      &#x27;address&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      &#x27;bytes32&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      &#x27;bytes32&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ], [</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">      &#x27;0xff&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      factory,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      salt,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      codeHash</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hexDataSlice</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hash, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">12</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">))</span></span></code></pre>","isPage":false,"text":"\n// The code of the wallet proxy contract\nconst WalletProxyBytecode = &quot;0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3&quot;\n \n// These values are defined by the wallet context\n// they must be known in order to validate the counter-factual wallet imageHash\nconst factory = &quot;0xf9D09D634Fb818b05149329C1dcCFAeA53639d96&quot;\nconst mainModule = &quot;0xd01F11855bCcb95f88D7A48492F66410d4637313&quot;\n \n// Append the `mainModule` to the `WalletProxyBytecode`\n// this completed the creation code of the proxy contract\n// used for computing the wallet address as defined by the CREATE2 opcode\nconst codeHash = ethers.utils.keccak256(\n  ethers.utils.solidityPack(\n    [\n      &#x27;bytes&#x27;,\n      &#x27;bytes32&#x27;\n    ],\n    [\n      WalletContractBytecode,\n      ethers.utils.hexZeroPad(mainModule, 32)\n    ]\n  )\n)\n \n// Compute the wallet address\nconst hash = ethers.utils.keccak256(\n  ethers.utils.solidityPack(\n    [\n      &#x27;bytes1&#x27;,\n      &#x27;address&#x27;,\n      &#x27;bytes32&#x27;,\n      &#x27;bytes32&#x27;\n    ], [\n      &#x27;0xff&#x27;,\n      factory,\n      salt,\n      codeHash\n    ]\n  )\n)\n \nconst address = ethers.utils.getAddress(ethers.utils.hexDataSlice(hash, 12))","title":"Compute wallet address","titles":["Wallet Configuration","Initial wallet configuration","Configuration hash - ImageHash"]},"237":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#modules--wallet-update","html":"</header>\n<p>Sequence modules are the underlying program implementation of the wallets; wallets can change modules at runtime.</p>\n<p>The <code>MainModule</code> is the initial module of every Sequence wallet; it differs from the other modules because it doesn&#x27;t store the set of signers on contract storage; it uses the <a href=\"solutions/technical-references/wallet-contracts/03-wallet-factory#deploy\">salt</a> provided to the Factory contract.</p>\n","isPage":true,"text":"\nSequence modules are the underlying program implementation of the wallets; wallets can change modules at runtime.\nThe MainModule is the initial module of every Sequence wallet; it differs from the other modules because it doesn&#x27;t store the set of signers on contract storage; it uses the salt provided to the Factory contract.\n","title":"Modules &amp; wallet update","titles":[]},"238":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#wallet-implementation","html":"\n<p>Sequence modules can be assigned to wallets either by the factory or by updating it after the initial deployment. Only one module can be assigned to a wallet at a time.</p>\n","isPage":false,"text":"\nSequence modules can be assigned to wallets either by the factory or by updating it after the initial deployment. Only one module can be assigned to a wallet at a time.\n","title":"Wallet implementation","titles":["Modules &amp; wallet update"]},"239":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#_updateconfiguration","html":"\n<p>The <code>updateImplementation</code> allows to update the underlying implementation of the wallet proxy. This implementation contains all the core code that defines the wallet&#x27;s behaviour.</p>\n<p>:::warning Dangerous operation\nCalling <code>updateImplementation</code> with an invalid implementation will result in the corruption of the wallet.</p>\n<p>Corrupt wallets may lead to the loss of funds.\n:::</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updateImplementation</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">  address</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _implementation</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> override</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlySelf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span></code></pre>\n","isPage":false,"text":"\nThe updateImplementation allows to update the underlying implementation of the wallet proxy. This implementation contains all the core code that defines the wallet&#x27;s behaviour.\n:::warning Dangerous operation\nCalling updateImplementation with an invalid implementation will result in the corruption of the wallet.\nCorrupt wallets may lead to the loss of funds.\n:::\nfunction updateImplementation(\n  address _implementation\n) external override onlySelf {\n","title":"_updateConfiguration","titles":["Modules &amp; wallet update","Wallet implementation"]},"240":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#parameters","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>_implementation</td><td>address</td><td>Address of the new wallet implementation.</td></tr></tbody></table>\n<p>This method has the <code>onlySelf</code> modifier, which means that it can only be called by the wallet itself using a self-referencing transaction. Calls to this method coming from other addresses, even if these addresses are signers of the wallet, will be rejected.</p>\n","isPage":false,"text":"\nNameTypeDescription_implementationaddressAddress of the new wallet implementation.\nThis method has the onlySelf modifier, which means that it can only be called by the wallet itself using a self-referencing transaction. Calls to this method coming from other addresses, even if these addresses are signers of the wallet, will be rejected.\n","title":"Parameters:","titles":["Modules &amp; wallet update","Wallet implementation","_updateConfiguration"]},"241":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#reading-current-implementation","html":"\n<p>The wallet implementation is stored on the contract storage slot defined by the address of the wallet itself. Given that every wallet has a unique address, the implementation slot varies from wallet to wallet.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;ethers&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0x596af90cecdbf9a768886e771178fd5561dd27ab&quot;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> provider</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.providers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">JsonRpcProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;http://localhost:8545&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Read storage slot address(address)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> slot</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> provider.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getStorageAt</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address, ethers.utils.defaultAbiCoder.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;address&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], [address]))</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decode bytes32 as address value</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> implementation</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.defaultAbiCoder.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">decode</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;address&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">], slot)[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(implementation)</span></span></code></pre>\n","isPage":false,"text":"\nThe wallet implementation is stored on the contract storage slot defined by the address of the wallet itself. Given that every wallet has a unique address, the implementation slot varies from wallet to wallet.\nimport &quot;ethers&quot;\n \nconst address = &quot;0x596af90cecdbf9a768886e771178fd5561dd27ab&quot;\nconst provider = new ethers.providers.JsonRpcProvider(&quot;http://localhost:8545&quot;)\n \n// Read storage slot address(address)\nconst slot = await provider.getStorageAt(address, ethers.utils.defaultAbiCoder.encode([&#x27;address&#x27;], [address]))\n \n// Decode bytes32 as address value\nconst implementation = ethers.utils.defaultAbiCoder.decode([&#x27;address&#x27;], slot)[0]\n \nconsole.log(implementation)\n","title":"Reading current implementation","titles":["Modules &amp; wallet update","Wallet implementation"]},"242":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#wallet-configuration-validation","html":"\n<p>:::info Fixed configuration\nSigner&#x27;s configuration on wallets using <code>MainModule</code> can&#x27;t be changed. The only way to change the set of signers or threshold is by updating the module of the wallet.\n:::</p>\n<p>All sequence modules must implement the <code>ModuleAuth</code> interface, this interface allows the rest of the module to validate signatures for the wallet. In the case of <code>MainModule</code> this interface is implemented as a counter-factual validation of hash passed to the factory during the contract wallet creation.</p>\n","isPage":false,"text":"\n:::info Fixed configuration\nSigner&#x27;s configuration on wallets using MainModule can&#x27;t be changed. The only way to change the set of signers or threshold is by updating the module of the wallet.\n:::\nAll sequence modules must implement the ModuleAuth interface, this interface allows the rest of the module to validate signatures for the wallet. In the case of MainModule this interface is implemented as a counter-factual validation of hash passed to the factory during the contract wallet creation.\n","title":"Wallet configuration validation","titles":["Modules &amp; wallet update"]},"243":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#_isvalidimage","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> _isValidImage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    bytes32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _imageHash</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">internal</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> override</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> view</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> returns</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">bool</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _isValid)</span></span></code></pre>\n<p>Validates if the provided <code>imageHash</code> corresponds to the one configured in the wallet. This function is called internally to validate transaction and message signatures.</p>\n<p>The <code>imageHash</code> is a hash of the wallet configuration, which contains the wallet&#x27;s threshold, signers and weights.</p>\n","isPage":false,"text":"\n  function _isValidImage(\n    bytes32 _imageHash\n  ) internal override view returns (bool _isValid)\nValidates if the provided imageHash corresponds to the one configured in the wallet. This function is called internally to validate transaction and message signatures.\nThe imageHash is a hash of the wallet configuration, which contains the wallet&#x27;s threshold, signers and weights.\n","title":"_isValidImage","titles":["Modules &amp; wallet update","Wallet configuration validation"]},"244":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#parameters-1","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>_imageHash</td><td>bytes32</td><td>Hash of wallet configuration to be validated.</td></tr></tbody></table>\n","isPage":false,"text":"\nNameTypeDescription_imageHashbytes32Hash of wallet configuration to be validated.\n","title":"Parameters:","titles":["Modules &amp; wallet update","Wallet configuration validation","_isValidImage"]},"245":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#return-values","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>_isValid</td><td>bool</td><td>True if the given <code>imageHash</code> corresponds to the current wallet configuration.</td></tr></tbody></table>\n","isPage":false,"text":"\nNameTypeDescription_isValidboolTrue if the given imageHash corresponds to the current wallet configuration.\n","title":"Return Values:","titles":["Modules &amp; wallet update","Wallet configuration validation","_isValidImage"]},"246":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#mainmoduleupgradeable","html":"\n<p><code>MainModuleUpgradable</code> is a module that mimics the behaviour of the <code>MainModule</code> but allows the wallet configuration to be updated.</p>\n","isPage":false,"text":"\nMainModuleUpgradable is a module that mimics the behaviour of the MainModule but allows the wallet configuration to be updated.\n","title":"MainModuleUpgradeable","titles":["Modules &amp; wallet update"]},"247":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#updateimagehash","html":"\n<p>Updates the wallet <code>imageHash</code>, this is the hash that defines the wallet configuration (signers, weights, threshold).</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> updateImageHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    bytes32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> _imageHash</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">external</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> override</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> onlySelf</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span></code></pre>\n","isPage":false,"text":"\nUpdates the wallet imageHash, this is the hash that defines the wallet configuration (signers, weights, threshold).\n  function updateImageHash(\n    bytes32 _imageHash\n  ) external override onlySelf {\n","title":"updateImageHash","titles":["Modules &amp; wallet update","MainModuleUpgradeable"]},"248":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#parameters-2","html":"\n<table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>_imageHash</td><td>bytes32</td><td>Hash of the new configuration for the wallet.</td></tr></tbody></table>\n<p>:::caution Unsanitized input\nThe <code>imageHash</code> is not validated, it is the responsibility of the caller to ensure that the hash is correct. Reasons for incorrect hashes include:</p>\n<ul>\n<li>The combined weight of the signers is below the threshold.</li>\n<li>The signers are not valid addresses.</li>\n<li>The signers are smart contract wallets without proper support for EIP-1271.</li>\n<li>The <code>imageHash</code> doesn&#x27;t correspond to any wallet configuration (may be a random string).</li>\n<li>The <code>imageHash</code> corresponds to an unknown wallet configuration.</li>\n</ul>\n<p>In any of this cases the wallet will be <strong>rendered unusable</strong>.\n:::</p>\n<p>This method has the <code>onlySelf</code> modifier, which means that it can only be called by the wallet itself using a self-referencing transaction. Calls to this method coming from other addresses, even if these addresses are signers of the wallet, will be rejected.</p>\n","isPage":false,"text":"\nNameTypeDescription_imageHashbytes32Hash of the new configuration for the wallet.\n:::caution Unsanitized input\nThe imageHash is not validated, it is the responsibility of the caller to ensure that the hash is correct. Reasons for incorrect hashes include:\n\nThe combined weight of the signers is below the threshold.\nThe signers are not valid addresses.\nThe signers are smart contract wallets without proper support for EIP-1271.\nThe imageHash doesn&#x27;t correspond to any wallet configuration (may be a random string).\nThe imageHash corresponds to an unknown wallet configuration.\n\nIn any of this cases the wallet will be rendered unusable.\n:::\nThis method has the onlySelf modifier, which means that it can only be called by the wallet itself using a self-referencing transaction. Calls to this method coming from other addresses, even if these addresses are signers of the wallet, will be rejected.\n","title":"Parameters:","titles":["Modules &amp; wallet update","MainModuleUpgradeable","updateImageHash"]},"249":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#first-configuration-update","html":"\n<p>When Sequence wallets are created, the factory contract doesn&#x27;t call an <code>initialize</code> function. The configuration is instead defined by the <code>salt</code> provided to the factory, the <code>MainModule</code> then checks the counterfactual validity of all signatures against the wallet address.</p>\n<p>This means there is no direct way to update the configuration of a wallet while still using the <code>MainModule</code>. Given that the first configuration update needs to also change the wallet implementation to the <code>MainModuleUpgradable</code>, the <code>MainModule</code> is updated to the <code>MainModuleUpgradable</code> and the <code>updateImageHash</code> method is called to update the wallet configuration.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transactions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    delegateCall: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    revertOnError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    to: wallet,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data: walletInterface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      walletInterface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getFunction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;updateImplementation&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), [</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">this</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">.context.mainModuleUpgradable]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    value: ethers.constants.Zero,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    gasLimit: ethers.constants.Zero,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    delegateCall: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    revertOnError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    to: wallet,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data: mainModuleInterface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      mainModuleInterface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getFunction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;updateImageHash&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), [newImageHash]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    value: ethers.constants.Zero,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    gasLimit: ethers.constants.Zero,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span></code></pre>\n","isPage":false,"text":"\nWhen Sequence wallets are created, the factory contract doesn&#x27;t call an initialize function. The configuration is instead defined by the salt provided to the factory, the MainModule then checks the counterfactual validity of all signatures against the wallet address.\nThis means there is no direct way to update the configuration of a wallet while still using the MainModule. Given that the first configuration update needs to also change the wallet implementation to the MainModuleUpgradable, the MainModule is updated to the MainModuleUpgradable and the updateImageHash method is called to update the wallet configuration.\nconst transactions = [\n  {\n    delegateCall: false,\n    revertOnError: true,\n    to: wallet,\n    data: walletInterface.encodeFunctionData(\n      walletInterface.getFunction(&#x27;updateImplementation&#x27;), [this.context.mainModuleUpgradable]\n    ),\n    value: ethers.constants.Zero,\n    gasLimit: ethers.constants.Zero,\n  },\n  {\n    delegateCall: false,\n    revertOnError: true,\n    to: wallet,\n    data: mainModuleInterface.encodeFunctionData(\n      mainModuleInterface.getFunction(&#x27;updateImageHash&#x27;), [newImageHash]\n    ),\n    value: ethers.constants.Zero,\n    gasLimit: ethers.constants.Zero,\n  }\n]\n","title":"First configuration update","titles":["Modules &amp; wallet update"]},"250":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#delegatecall-false","html":"\n<p><code>delegateCall</code> is used to extend the wallet functionality beyond what&#x27;s allowed by the module. In this case the called methods are defined on the modules themselves, so there is no need to use <code>delegateCall</code>.</p>\n","isPage":false,"text":"\ndelegateCall is used to extend the wallet functionality beyond what&#x27;s allowed by the module. In this case the called methods are defined on the modules themselves, so there is no need to use delegateCall.\n","title":"delegateCall: false","titles":["Modules &amp; wallet update","First configuration update","updateImageHash"]},"251":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#revertonerror-true","html":"\n<p><code>revertOnError</code> is used to revert the whole transaction bundle if a transaction flagged by it fails. In this case the operation should be atomic given that a partial wallet configuration update <strong>will</strong> render the wallet unusable.</p>\n","isPage":false,"text":"\nrevertOnError is used to revert the whole transaction bundle if a transaction flagged by it fails. In this case the operation should be atomic given that a partial wallet configuration update will render the wallet unusable.\n","title":"revertOnError: true","titles":["Modules &amp; wallet update","First configuration update","updateImageHash"]},"252":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#to-wallet","html":"\n<p>The methods being called are defined on the wallet itself, but need to be called externally, so the <code>to</code> address is the wallet itself.</p>\n","isPage":false,"text":"\nThe methods being called are defined on the wallet itself, but need to be called externally, so the to address is the wallet itself.\n","title":"to: wallet","titles":["Modules &amp; wallet update","First configuration update","updateImageHash"]},"253":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#value-ethersconstantszero","html":"\n<p>The <code>value</code> of the transaction is always zero, since the transaction is a self-referencing transaction and doesn&#x27;t require transferring funds.</p>\n","isPage":false,"text":"\nThe value of the transaction is always zero, since the transaction is a self-referencing transaction and doesn&#x27;t require transferring funds.\n","title":"value: ethers.constants.Zero","titles":["Modules &amp; wallet update","First configuration update","updateImageHash"]},"254":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#gaslimit-ethersconstantszero","html":"\n<p>The <code>gasLimit</code> of the transaction is always zero, since it represents an unlimited amount of gas.</p>\n<p>:::warning Dangerous operation</p>\n<p>When the wallet is first updated to the <code>MainModuleUpgradable</code> it doesn&#x27;t have a valid <code>imageHash</code> yet. It&#x27;s imperative that the <code>imageHash</code> is updated before the transaction bundle finishes executing.\nIf the <code>imageHash</code> is not updated before the transaction bundle finishes executing, the wallet will be rendered unusable.</p>\n<p>For this reason the following considerations should be taken when updating the wallet for the first time:</p>\n<ul>\n<li>All transactions should be marked <code>revertOnError = true</code>.</li>\n<li><code>updateImplementation</code> and <code>updateImageHash</code> should both be declared on the same transaction bundle.</li>\n<li>The <code>gasLimit</code> of both transactions should be set to unlimited (<code>0</code>).</li>\n</ul>\n<p>:::</p>\n","isPage":false,"text":"\nThe gasLimit of the transaction is always zero, since it represents an unlimited amount of gas.\n:::warning Dangerous operation\nWhen the wallet is first updated to the MainModuleUpgradable it doesn&#x27;t have a valid imageHash yet. It&#x27;s imperative that the imageHash is updated before the transaction bundle finishes executing.\nIf the imageHash is not updated before the transaction bundle finishes executing, the wallet will be rendered unusable.\nFor this reason the following considerations should be taken when updating the wallet for the first time:\n\nAll transactions should be marked revertOnError = true.\nupdateImplementation and updateImageHash should both be declared on the same transaction bundle.\nThe gasLimit of both transactions should be set to unlimited (0).\n\n:::\n","title":"gasLimit: ethers.constants.Zero","titles":["Modules &amp; wallet update","First configuration update","updateImageHash"]},"255":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#subsequent-configuration-updates","html":"\n<p>Once the wallet is updated to the <code>MainModuleUpgradable</code> it can be updated by calling the <code>updateImageHash</code> method, without any additional transaction.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transactions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    delegateCall: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    revertOnError: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    to: wallet,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data: mainModuleInterface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      mainModuleInterface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getFunction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;updateImageHash&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">), [newImageHash]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    value: ethers.constants.Zero,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    gasLimit: ethers.constants.Zero,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span></code></pre>\n","isPage":false,"text":"\nOnce the wallet is updated to the MainModuleUpgradable it can be updated by calling the updateImageHash method, without any additional transaction.\nconst transactions = [\n  {\n    delegateCall: false,\n    revertOnError: true,\n    to: wallet,\n    data: mainModuleInterface.encodeFunctionData(\n      mainModuleInterface.getFunction(&#x27;updateImageHash&#x27;), [newImageHash]\n    ),\n    value: ethers.constants.Zero,\n    gasLimit: ethers.constants.Zero,\n  }\n]\n","title":"Subsequent configuration updates","titles":["Modules &amp; wallet update","First configuration update"]},"256":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#retrieving-the-current-configuration","html":"\n<p>If the wallet is updated to the <code>MainModuleUpgradable</code> it can be queried for the current configuration by calling the <code>getImageHash</code> method.</p>\n<p>This method should return the wallet&#x27;s current configuration hash, which can be compared to a list of known wallet configurations to find the correct one.</p>\n","isPage":false,"text":"\nIf the wallet is updated to the MainModuleUpgradable it can be queried for the current configuration by calling the getImageHash method.\nThis method should return the wallet&#x27;s current configuration hash, which can be compared to a list of known wallet configurations to find the correct one.\n","title":"Retrieving the current configuration","titles":["Modules &amp; wallet update","First configuration update"]},"257":{"href":"/solutions/technical-references/wallet-contracts/05-modules-and-updates#retrieving-the-wallet-configuration","html":"\n<p>The <code>imageHash</code> method returns <code>bytes32(0)</code> if the wallet is not yet updated to the <code>MainModuleUpgradable</code>.\nIn this case the wallet is in a counter-factual state and the <code>imageHash</code> can&#x27;t be directly queried.</p>\n<p>This is also the case for non-deployed wallets.</p>\n<p>To find the <code>imageHash</code> of a non-deployed or non-updated wallet, a candidate known <code>imageHash</code> needs to be compared against the wallet address.</p>\n<p>See <a href=\"/solutions/technical-references/wallet-contracts/04-wallet-configuration#compute-wallet-address\">Compute wallet address</a>.</p>","isPage":false,"text":"\nThe imageHash method returns bytes32(0) if the wallet is not yet updated to the MainModuleUpgradable.\nIn this case the wallet is in a counter-factual state and the imageHash can&#x27;t be directly queried.\nThis is also the case for non-deployed wallets.\nTo find the imageHash of a non-deployed or non-updated wallet, a candidate known imageHash needs to be compared against the wallet address.\nSee Compute wallet address.","title":"Retrieving the wallet configuration","titles":["Modules &amp; wallet update","First configuration update","Retrieving the current configuration"]},"258":{"href":"/solutions/technical-references/wallet-contracts/06-main-module-upgradeable#mainmoduleupgradeable--configuration-migration","html":"</header>","isPage":true,"text":"","title":"MainModuleUpgradeable &amp; configuration migration","titles":[]},"259":{"href":"/solutions/technical-references/wallet-contracts/07-transaction-encoding#transaction-encoding","html":"</header>","isPage":true,"text":"","title":"Transaction encoding","titles":[]},"260":{"href":"/solutions/technical-references/wallet-contracts/08-signature-encoding#signature-encoding","html":"</header>\n<p>Sequence Wallets support <a href=\"https://eips.ethereum.org/EIPS/eip-1271\">ERC-1271 Standard Contract Signature Verification</a> to allow signing of transactions and messages.</p>\n","isPage":true,"text":"\nSequence Wallets support ERC-1271 Standard Contract Signature Verification to allow signing of transactions and messages.\n","title":"Signature Encoding","titles":[]},"261":{"href":"/solutions/technical-references/wallet-contracts/08-signature-encoding#erc-191-ethereum-signed-data","html":"\n<p>Messages encoded with as <a href=\"https://eips.ethereum.org/EIPS/eip-191\">ERC-191 Ethereum Signed Data</a> are able to be created and signed as follows.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Wallet } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/wallet&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Construct your Sequence Wallet (out of scope for this section)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Wallet</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Hello, World!&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> prefixedMessage</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\x19</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">Ethereum Signed Message:</span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\n</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> +</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> len</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">+</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> message</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signature</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(prefixedMessage)</span></span></code></pre>\n<p>The above will iterate through local, signing the message. If the threshold is reached, the signature is returned.\nOtherwise the library will iterate through the remote signers as well.\nThe resulting signatures are joined and encoded as a hex string.</p>\n","isPage":false,"text":"\nMessages encoded with as ERC-191 Ethereum Signed Data are able to be created and signed as follows.\nimport { Wallet } from &#x27;@0xsequence/wallet&#x27;\n \n// Construct your Sequence Wallet (out of scope for this section)\nconst wallet: Wallet\n \nconst message = &quot;Hello, World!&quot;\n \nconst prefixedMessage = &quot;\\x19Ethereum Signed Message:\\n&quot; + len(message) + message\nconst signature = await wallet.signMessage(prefixedMessage)\nThe above will iterate through local, signing the message. If the threshold is reached, the signature is returned.\nOtherwise the library will iterate through the remote signers as well.\nThe resulting signatures are joined and encoded as a hex string.\n","title":"ERC-191 Ethereum Signed Data","titles":["Signature Encoding"]},"262":{"href":"/solutions/technical-references/wallet-contracts/08-signature-encoding#erc-712-structured-data-signatures","html":"\n<p><a href=\"https://eips.ethereum.org/EIPS/eip-712\">ERC-712 Structured Data</a> can also be signed in a similar fashion.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Wallet } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/wallet&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { encodeTypedDataDigest } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/utils&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Construct your Sequence Wallet (out of scope for this section)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Wallet</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode the typed data</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> chainId</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> typedData</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\ttypes: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tPerson: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t{ name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;name&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;string&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t{ name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;wallet&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;address&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t\t{ name: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;count&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;uint8&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\t]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tprimaryType: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Person&#x27;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> as</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tdomain: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tname: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Ether Mail&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tversion: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tchainId: chainId,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tverifyingContract: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t},</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\tmessage: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tname: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Bob&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\twallet: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t\tcount: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">4</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">\t}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> hashedData</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> encodeTypedDataDigest</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(typedData)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signature</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(hashedData)</span></span></code></pre>\n<p>The above will iterate through local, signing the message. If the threshold is reached, the signature is returned.\nOtherwise the library will iterate through the remote signers as well.\nThe resulting signatures are joined and encoded as a hex string.</p>\n","isPage":false,"text":"\nERC-712 Structured Data can also be signed in a similar fashion.\nimport { Wallet } from &#x27;@0xsequence/wallet&#x27;\nimport { encodeTypedDataDigest } from &#x27;@0xsequence/utils&#x27;\n \n// Construct your Sequence Wallet (out of scope for this section)\nconst wallet: Wallet\n \n// Encode the typed data\nconst chainId = 1\nconst typedData = {\n\ttypes: {\n\t\tPerson: [\n\t\t\t{ name: &#x27;name&#x27;, type: &#x27;string&#x27; },\n\t\t\t{ name: &#x27;wallet&#x27;, type: &#x27;address&#x27; },\n\t\t\t{ name: &#x27;count&#x27;, type: &#x27;uint8&#x27; }\n\t\t]\n\t},\n\tprimaryType: &#x27;Person&#x27; as const,\n\tdomain: {\n\t\tname: &#x27;Ether Mail&#x27;,\n\t\tversion: &#x27;1&#x27;,\n\t\tchainId: chainId,\n\t\tverifyingContract: &#x27;0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC&#x27;\n\t},\n\tmessage: {\n\t\tname: &#x27;Bob&#x27;,\n\t\twallet: &#x27;0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB&#x27;,\n\t\tcount: 4\n\t}\n} \nconst hashedData = encodeTypedDataDigest(typedData)\n \nconst signature = await wallet.signMessage(hashedData)\nThe above will iterate through local, signing the message. If the threshold is reached, the signature is returned.\nOtherwise the library will iterate through the remote signers as well.\nThe resulting signatures are joined and encoded as a hex string.\n","title":"ERC-712 Structured Data Signatures","titles":["Signature Encoding"]},"263":{"href":"/solutions/technical-references/wallet-contracts/08-signature-encoding#verification","html":"\n<p>The signature can be verified by calling the <code>isValidSignature</code> method on the wallet.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>  /**</span></span>\n<span class=\"line\"><span>   * @notice Verifies whether the provided signature is valid with respect to the provided hash</span></span>\n<span class=\"line\"><span>   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash</span></span>\n<span class=\"line\"><span>   *   &gt; The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(&quot;isValidSignature(bytes32,bytes)&quot;))</span></span>\n<span class=\"line\"><span>   * @param _hash       keccak256 hash that was signed</span></span>\n<span class=\"line\"><span>   * @param _signatures Signature byte array associated with _data.</span></span>\n<span class=\"line\"><span>   *                    Encoded as abi.encode(Signature[], Configs)</span></span>\n<span class=\"line\"><span>   * @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise</span></span>\n<span class=\"line\"><span>   */</span></span>\n<span class=\"line\"><span>  function isValidSignature(</span></span>\n<span class=\"line\"><span>    bytes32 _hash,</span></span>\n<span class=\"line\"><span>    bytes calldata _signatures</span></span>\n<span class=\"line\"><span>  ) public override virtual view returns (bytes4) {</span></span>\n<span class=\"line\"><span>    // Validate signatures</span></span>\n<span class=\"line\"><span>    (bool isValid,) = _signatureValidation(_hash, _signatures);</span></span>\n<span class=\"line\"><span>    if (isValid) {</span></span>\n<span class=\"line\"><span>      return SELECTOR_ERC1271_BYTES32_BYTES;</span></span>\n<span class=\"line\"><span>    }</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    return bytes4(0);</span></span>\n<span class=\"line\"><span>  }</span></span></code></pre>\n<p>This will iterate through the combined signatures and validate that the resulting signature breaches the wallet&#x27;s threshold.</p>","isPage":false,"text":"\nThe signature can be verified by calling the isValidSignature method on the wallet.\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   &gt; The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(&quot;isValidSignature(bytes32,bytes)&quot;))\n   * @param _hash       keccak256 hash that was signed\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signatures\n  ) public override virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidation(_hash, _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES32_BYTES;\n    }\n\n    return bytes4(0);\n  }\nThis will iterate through the combined signatures and validate that the resulting signature breaches the wallet&#x27;s threshold.","title":"Verification","titles":["Signature Encoding"]},"264":{"href":"/solutions/technical-references/wallet-contracts/09-nested-transaction-batching#nested-transaction-batching","html":"</header>","isPage":true,"text":"","title":"Nested Transaction Batching","titles":[]},"265":{"href":"/solutions/technical-references/wallet-contracts/10-guest-module#guestmodule-and-on-demand-deployment","html":"</header>","isPage":true,"text":"","title":"GuestModule and on-demand deployment","titles":[]},"266":{"href":"/solutions/technical-references/wallet-contracts/11-wallet-context#wallet-context","html":"</header>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sequenceContext</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> WalletContext</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  factory: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xf9D09D634Fb818b05149329C1dcCFAeA53639d96&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  mainModule: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xd01F11855bCcb95f88D7A48492F66410d4637313&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  mainModuleUpgradable: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x7EFE6cE415956c5f80C6530cC6cc81b4808F6118&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  guestModule: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x02390F3E6E5FD1C6786CB78FD3027C117a9955A7&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  sequenceUtils: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xd130B43062D875a4B7aF3f8fc036Bc6e9D3E1B3E&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  libs: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    requireFreshSigner: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xE6B9B21C077F382333220a072e4c44280b873907&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":true,"text":"\nexport const sequenceContext: WalletContext = {\n  factory: &#x27;0xf9D09D634Fb818b05149329C1dcCFAeA53639d96&#x27;,\n  mainModule: &#x27;0xd01F11855bCcb95f88D7A48492F66410d4637313&#x27;,\n  mainModuleUpgradable: &#x27;0x7EFE6cE415956c5f80C6530cC6cc81b4808F6118&#x27;,\n  guestModule: &#x27;0x02390F3E6E5FD1C6786CB78FD3027C117a9955A7&#x27;,\n  sequenceUtils: &#x27;0xd130B43062D875a4B7aF3f8fc036Bc6e9D3E1B3E&#x27;,\n  libs: {\n    requireFreshSigner: &#x27;0xE6B9B21C077F382333220a072e4c44280b873907&#x27;\n  }\n}","title":"Wallet Context","titles":[]},"267":{"href":"/solutions/technical-references/wallet-contracts/12-contract-audits#contract-audits","html":"</header>\n<p>Sequence wallet contracts underwent two independent audits by Consensys Diligence and Quantstamp.</p>\n<p><strong>Note</strong>: Sequence Wallet was formerly known as &quot;Arcadeum Wallet&quot;. Any references of &quot;Arcadeum&quot; in these reports are synonymous with &quot;Sequence&quot;.</p>\n","isPage":true,"text":"\nSequence wallet contracts underwent two independent audits by Consensys Diligence and Quantstamp.\nNote: Sequence Wallet was formerly known as &quot;Arcadeum Wallet&quot;. Any references of &quot;Arcadeum&quot; in these reports are synonymous with &quot;Sequence&quot;.\n","title":"Contract Audits","titles":[]},"268":{"href":"/solutions/technical-references/wallet-contracts/12-contract-audits#quantstamp","html":"\n<ul>\n<li><a href=\"https://github.com/0xsequence/wallet-contracts/blob/master/audits/Quantstamp_Arcadeum_Report_Final.pdf\">July 2nd, 2020</a></li>\n<li><a href=\"https://github.com/0xsequence/wallet-contracts/blob/master/audits/sequence_quantstamp_audit_feb_2021.pdf\">Feb 24th, 2021</a></li>\n</ul>\n","isPage":false,"text":"\n\nJuly 2nd, 2020\nFeb 24th, 2021\n\n","title":"Quantstamp","titles":["Contract Audits"]},"269":{"href":"/solutions/technical-references/wallet-contracts/12-contract-audits#consensys-diligence","html":"\n<ul>\n<li><a href=\"https://consensys.net/diligence/audits/private/cnhjwtpa-horizon-wallet/\">May 2020</a></li>\n</ul>\n","isPage":false,"text":"\n\nMay 2020\n\n","title":"Consensys Diligence","titles":["Contract Audits"]},"270":{"href":"/solutions/technical-references/wallet-contracts/12-contract-audits#zellic","html":"\n<ul>\n<li><a href=\"https://github.com/0xsequence/wallet-contracts/blob/master/audits/Sequence_Wallet_-_Zellic_Audit_Report.pdf\">March 2023</a></li>\n</ul>","isPage":false,"text":"\n\nMarch 2023\n","title":"Zellic","titles":["Contract Audits"]},"271":{"href":"/solutions/wallets/embedded-wallet/01-overview#sequence-embedded-wallet","html":"</header>\n<p>Sequence Embedded Wallet (or Wallet as a Service) enables the creation, management and usage of fully functional EVM compatible wallets. These wallets can be created on-demand for each user and allow you to integrate an application with an Ethereum compatible blockchain, while using familiar constructions like RPC APIs.</p>\n<p>Sequence Embedded Wallet offers real non-custodial wallets and the system guarantees that each created wallet can only be accessed with the consent of the owner of the wallet.</p>\n","isPage":true,"text":"\nSequence Embedded Wallet (or Wallet as a Service) enables the creation, management and usage of fully functional EVM compatible wallets. These wallets can be created on-demand for each user and allow you to integrate an application with an Ethereum compatible blockchain, while using familiar constructions like RPC APIs.\nSequence Embedded Wallet offers real non-custodial wallets and the system guarantees that each created wallet can only be accessed with the consent of the owner of the wallet.\n","title":"Sequence Embedded Wallet","titles":[]},"272":{"href":"/solutions/wallets/embedded-wallet/01-overview#architecture-overview","html":"\n<p>Sequence Embedded Wallets are native smart contract multisigs, the configuration of the multisig can be seen as a 2/2, both of which are required to sign in order to operate them; each one of the signers protects the wallet from a different facet of possible threats.</p>\n","isPage":false,"text":"\nSequence Embedded Wallets are native smart contract multisigs, the configuration of the multisig can be seen as a 2/2, both of which are required to sign in order to operate them; each one of the signers protects the wallet from a different facet of possible threats.\n","title":"Architecture overview","titles":["Sequence Embedded Wallet"]},"273":{"href":"/solutions/wallets/embedded-wallet/01-overview#signer-1-sequence-auth","html":"\n<p>Sequence Auth provides a simple way to add account creation, login, session management, and wallet support to your app, enabling applications to provide traditional web experiences (e.g. social login, email login, etc.) while providing access to crypto wallets to interact with smart contracts.</p>\n<p>All user and session data is encrypted by a Hardware Security Module operated by a third party. This makes it protected from both external attackers and internal access by Sequence Team or anyone else. <strong>Nobody</strong> can access a user&#x27;s wallet but the user themselves.</p>\n<p>You won&#x27;t need to trust us, this is a guarantee you can verify yourself: this service is hosted in a cryptographically attested secure enclave on Amazon Nitro platform. And we offer publicly available independently audited source code (coming soon), so you can rest assured that it hasn&#x27;t been tampered with.</p>\n","isPage":false,"text":"\nSequence Auth provides a simple way to add account creation, login, session management, and wallet support to your app, enabling applications to provide traditional web experiences (e.g. social login, email login, etc.) while providing access to crypto wallets to interact with smart contracts.\nAll user and session data is encrypted by a Hardware Security Module operated by a third party. This makes it protected from both external attackers and internal access by Sequence Team or anyone else. Nobody can access a user&#x27;s wallet but the user themselves.\nYou won&#x27;t need to trust us, this is a guarantee you can verify yourself: this service is hosted in a cryptographically attested secure enclave on Amazon Nitro platform. And we offer publicly available independently audited source code (coming soon), so you can rest assured that it hasn&#x27;t been tampered with.\n","title":"Signer 1: Sequence Auth","titles":["Sequence Embedded Wallet","Architecture overview"]},"274":{"href":"/solutions/wallets/embedded-wallet/01-overview#signer-2-sequence-guard","html":"\n<p>Sequence Guard is a service hosted by Sequence and contains the other key of the wallets. It&#x27;s meant to be another line of defense, verifying not only user&#x27;s <em>identity</em> but also their <em>intent</em>. It achieves this in two different ways:</p>\n<p>1 - Limits and allowlists: you can (from the development dashboard) configure what kind of actions are allowed, this means that the guard will only sign transactions within these constraints. For example, you can define that only NFT contract X can be called, and the guard will enforce that no other transactions can take place.</p>\n<p>2 - Authenticating the user: the Sequence Guard will authenticate the user <strong>independently of the Sequence Auth</strong>, it performs this action either by using a 3rd party OAuth 2.0 id token (from Meta, Google, X, etc.) or by directly communicating with the user via email/phone number with an OTP code. The direct communication is not always required and, when it does happen, it&#x27;s seamless and branded with your project details.</p>\n","isPage":false,"text":"\nSequence Guard is a service hosted by Sequence and contains the other key of the wallets. It&#x27;s meant to be another line of defense, verifying not only user&#x27;s identity but also their intent. It achieves this in two different ways:\n1 - Limits and allowlists: you can (from the development dashboard) configure what kind of actions are allowed, this means that the guard will only sign transactions within these constraints. For example, you can define that only NFT contract X can be called, and the guard will enforce that no other transactions can take place.\n2 - Authenticating the user: the Sequence Guard will authenticate the user independently of the Sequence Auth, it performs this action either by using a 3rd party OAuth 2.0 id token (from Meta, Google, X, etc.) or by directly communicating with the user via email/phone number with an OTP code. The direct communication is not always required and, when it does happen, it&#x27;s seamless and branded with your project details.\n","title":"Signer 2: Sequence Guard","titles":["Sequence Embedded Wallet","Architecture overview"]},"275":{"href":"/solutions/wallets/embedded-wallet/01-overview#threat-model","html":"\n<p>With these safeguards in place wallets are <strong>safe</strong> against the following scenarios:</p>\n<ol>\n<li>\n<p>Sequence.app backend is compromised, or guard keys are leaked: in this scenario, the user&#x27;s identity must still be verified by Sequence Auth.</p>\n</li>\n<li>\n<p>Sequence Auth is compromised: in this scenario the Sequence Guard protects the wallets, because it independently authenticates the user, an attacker in this scenario wouldn&#x27;t be able to access any wallets.</p>\n</li>\n</ol>\n<p>The model also provides partial protection against the scenario:</p>\n<ol start=\"3\">\n<li>Partner frontend is compromised, or MITM on the partner side: If an attacker were to be able to vulnerate the frontend of the partner, it could gain access to wallets at the time of login, but it cannot gain access to wallets of users who are currently inactive. This means that recovery from such a scenario is possible, with limited damage.</li>\n</ol>","isPage":false,"text":"\nWith these safeguards in place wallets are safe against the following scenarios:\n\n\nSequence.app backend is compromised, or guard keys are leaked: in this scenario, the user&#x27;s identity must still be verified by Sequence Auth.\n\n\nSequence Auth is compromised: in this scenario the Sequence Guard protects the wallets, because it independently authenticates the user, an attacker in this scenario wouldn&#x27;t be able to access any wallets.\n\n\nThe model also provides partial protection against the scenario:\n\nPartner frontend is compromised, or MITM on the partner side: If an attacker were to be able to vulnerate the frontend of the partner, it could gain access to wallets at the time of login, but it cannot gain access to wallets of users who are currently inactive. This means that recovery from such a scenario is possible, with limited damage.\n","title":"Threat model","titles":["Sequence Embedded Wallet"]},"276":{"href":"/solutions/wallets/embedded-wallet/02-quickstart#quickstart","html":"</header>\n","isPage":true,"text":"\n","title":"Quickstart","titles":[]},"277":{"href":"/solutions/wallets/embedded-wallet/02-quickstart#try-a-demo","html":"\n<aside data-callout=\"info\"><p>Try out seamless UX of our embedded wallet at our <a href=\"https://0xsequence.github.io/demo-waas-auth/\">demo</a></p></aside>\n","isPage":false,"text":"\nTry out seamless UX of our embedded wallet at our demo\n","title":"Try a Demo","titles":["Quickstart"]},"278":{"href":"/solutions/wallets/embedded-wallet/02-quickstart#template","html":"\n<aside data-callout=\"info\"><p>Get started quickly with a <a href=\"https://github.com/0xsequence/demo-waas-auth\">template</a> leveraging our embedded wallet.</p></aside>\n","isPage":false,"text":"\nGet started quickly with a template leveraging our embedded wallet.\n","title":"Template","titles":["Quickstart"]},"279":{"href":"/solutions/wallets/embedded-wallet/02-quickstart#getting-started","html":"\n","isPage":false,"text":"\n","title":"Getting Started","titles":["Quickstart"]},"280":{"href":"/solutions/wallets/embedded-wallet/02-quickstart#sdk-installation","html":"\n<p>We provide TypeScript and Unity SDKs for the Embedded Wallet authentication system. You can install the TypeScript SDK with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install @0xsequence/waas</span></span></code></pre>\n<p>For more information on the Unity Embedded Wallet SDK, please refer to the TODO add link <a href=\"#TODO\">Unity SDK documentation</a></p>\n","isPage":false,"text":"\nWe provide TypeScript and Unity SDKs for the Embedded Wallet authentication system. You can install the TypeScript SDK with:\npnpm install @0xsequence/waas\nFor more information on the Unity Embedded Wallet SDK, please refer to the TODO add link Unity SDK documentation\n","title":"SDK Installation","titles":["Quickstart","Getting Started"]},"281":{"href":"/solutions/wallets/embedded-wallet/02-quickstart#project-setup","html":"\n<p>Sequence Embedded Wallet is currently only available as a closed beta. To start using the Embedded Wallet SDKs, you&#x27;ll need to contact the Sequence team and acquire API credentials. Once this is done, you will be provided with two keys:</p>\n<ul>\n<li>Project access key</li>\n<li>Embedded Wallet configuration key</li>\n</ul>\n","isPage":false,"text":"\nSequence Embedded Wallet is currently only available as a closed beta. To start using the Embedded Wallet SDKs, you&#x27;ll need to contact the Sequence team and acquire API credentials. Once this is done, you will be provided with two keys:\n\nProject access key\nEmbedded Wallet configuration key\n\n","title":"Project Setup","titles":["Quickstart","Getting Started"]},"282":{"href":"/solutions/wallets/embedded-wallet/02-quickstart#library-setup","html":"\n<p>To start using Sequence Embedded Wallet SDK, you&#x27;ll need to create a new instance of the <code>waas</code> class:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>Note that the library is operational, but it can&#x27;t be used to interact with any wallet until you have authenticated <strong>as a user</strong>.</p>","isPage":false,"text":"\nTo start using Sequence Embedded Wallet SDK, you&#x27;ll need to create a new instance of the waas class:\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\nNote that the library is operational, but it can&#x27;t be used to interact with any wallet until you have authenticated as a user.","title":"Library Setup","titles":["Quickstart","Getting Started"]},"283":{"href":"/solutions/wallets/embedded-wallet/03-manage-sessions#session-management","html":"</header>\n<p>Sequence Auth + Embedded Wallet handles the following aspects of your application:</p>\n<ul>\n<li>User creation</li>\n<li>User authentication</li>\n<li>Session management</li>\n</ul>\n<p>This means you don&#x27;t need to implement an account system yourself; instead, you interact with the Auth + WaaS SDK whenever you need to authenticate a user.</p>\n","isPage":true,"text":"\nSequence Auth + Embedded Wallet handles the following aspects of your application:\n\nUser creation\nUser authentication\nSession management\n\nThis means you don&#x27;t need to implement an account system yourself; instead, you interact with the Auth + WaaS SDK whenever you need to authenticate a user.\n","title":"Session Management","titles":[]},"284":{"href":"/solutions/wallets/embedded-wallet/03-manage-sessions#sign-in--sign-up","html":"\n<p>Signing in and signing up are the same operation; the account is automatically created if it doesn&#x27;t already exist.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get a sessionHash</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessionHash</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Get an idToken using the social auth provider of your choice</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// (Google, Facebook, Twitter, etc.)</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Note: remember to pass the sessionHash as a nonce!</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Then sign in with Sequence WaaS</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> res</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MacBook Pro - Chrome&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(res)</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;sessionId&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x63A21cCa14ed7454B9cF6466af422B5c597c6b57&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;wallet&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xd6043fe6f06d90ec2cB36cA5CD1B193A8515f350&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<aside data-callout=\"note\"><p>Sessions opened with some providers might require a second step in order to be usable for sending transactions.</p><p>See <a href=\"/solutions/wallets/embedded-wallet/05-validation\">Email validation</a>.</p></aside>\n","isPage":false,"text":"\nSigning in and signing up are the same operation; the account is automatically created if it doesn&#x27;t already exist.\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \n// Get a sessionHash\nconst sessionHash = await waas.getSessionHash()\n \n// Get an idToken using the social auth provider of your choice\n// (Google, Facebook, Twitter, etc.)\n// Note: remember to pass the sessionHash as a nonce!\n \n// Then sign in with Sequence WaaS\nconst res = await waas.signIn({ idToken }, &quot;MacBook Pro - Chrome&quot;)\n \nconsole.log(res)\n{\n  &quot;sessionId&quot;: &quot;0x63A21cCa14ed7454B9cF6466af422B5c597c6b57&quot;,\n  &quot;wallet&quot;: &quot;0xd6043fe6f06d90ec2cB36cA5CD1B193A8515f350&quot;,\n}\nSessions opened with some providers might require a second step in order to be usable for sending transactions.See Email validation.\n","title":"Sign in / Sign Up","titles":["Session Management"]},"285":{"href":"/solutions/wallets/embedded-wallet/03-manage-sessions#email-sign-in--sign-up","html":"\n<p>Email sign-in is directly supported by the SDK, as long as the used <code>key</code> has been generated with the <code>email</code> scope. Email logins work similarly to social logins, except that the <code>idToken</code> is generated by the SDK itself.</p>\n<p>To open a session using an email, you will need to provide an email for the user. The Embedded Wallet Nitro API will then send an email to the user with a One-Time Password (OTP) that can be used to open a session. This OTP has to be provided to the SDK to obtain an <code>idToken</code>.</p>\n<p>Once the <code>idToken</code> is obtained, the session can be opened as usual.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Define the user&#x27;s email address</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> email</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;user@example.com&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// This will send an email to the user with an OTP</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">instance</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.email.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">initiateAuth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ email })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Obtain the OTP from the user</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> answer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;123456&quot;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessionHash</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">idToken</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.email.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">finalizeAuth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ instance, answer, email, sessionHash })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Log in using the idToken, as usual</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Apple Vision Pro - Chrome&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n","isPage":false,"text":"\nEmail sign-in is directly supported by the SDK, as long as the used key has been generated with the email scope. Email logins work similarly to social logins, except that the idToken is generated by the SDK itself.\nTo open a session using an email, you will need to provide an email for the user. The Embedded Wallet Nitro API will then send an email to the user with a One-Time Password (OTP) that can be used to open a session. This OTP has to be provided to the SDK to obtain an idToken.\nOnce the idToken is obtained, the session can be opened as usual.\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\n \n// Define the user&#x27;s email address\nconst email = &quot;user@example.com&quot;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \n// This will send an email to the user with an OTP\nconst { instance } = await waas.email.initiateAuth({ email })\n \n// Obtain the OTP from the user\nconst answer = &quot;123456&quot;\n \nconst sessionHash = await sequence.getSessionHash()\nconst { idToken } = await waas.email.finalizeAuth({ instance, answer, email, sessionHash })\n \n// Log in using the idToken, as usual\nawait waas.signIn({ idToken }, &quot;Apple Vision Pro - Chrome&quot;)\n","title":"Email Sign In / Sign Up","titles":["Session Management","Sign in / Sign Up"]},"286":{"href":"/solutions/wallets/embedded-wallet/03-manage-sessions#google--apple-auth","html":"\n<p>Google and Apple auth are directly supported by the SDK. The <code>idToken</code> is obtained from the social auth provider and used to open a session. You can see a sample React application using Google auth below. To see a complete application, see the <a href=\"https://github.com/0xsequence/demo-waas-auth\">demo-waas-auth</a> repository. A functional demo <a href=\"https://0xsequence.github.io/demo-waas-auth/\">is also available here</a>.</p>\n<p>Begin with a simple <code>main.tsx</code> file that sets up the WaaS SDK, the router, and the Google OAuth provider.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { GoogleOAuthProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@react-oauth/google&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { createHashRouter, RouterProvider } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;react-router-dom&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> router</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> createHashRouter</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;/login&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    element: &lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">Login</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    path: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;/&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    element: &lt;</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">App</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">ReactDOM.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">createRoot</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(document.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getElementById</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;root&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">).</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">render</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  &lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">React.StrictMode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">      &lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">GoogleOAuthProvider clientId</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{GOOGLE_CLIENT_ID}</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        &lt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">RouterProvider router</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{router} </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/&gt;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">      &lt;/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">GoogleOAuthProvider</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  &lt;/</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">React.StrictMode</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<p>The <code>useSessionHash</code> hook is used to obtain a session hash that is used to prevent replay attacks. The <code>sequence.getSessionHash</code> function is used to obtain the session hash, and the <code>sequence.onSessionStateChanged</code> function is used to update the session hash when the session state changes.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { sequence } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;./main&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useEffect, useState } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;react&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useSessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">sessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">setSessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">setError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">any</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">undefined</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    useEffect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handler</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">            try</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                setSessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">())</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">catch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (error) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">                console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">error</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(error)</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">                setError</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(error)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">            }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">        handler</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">        return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">onSessionStateChanged</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(handler)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, [setSessionHash, setError])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        sessionHash,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        error,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        loading: </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!!</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">sessionHash,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>To handle the Google login, you can use the <code>GoogleLogin</code> component from the <code>@react-oauth/google</code> package. The <code>handleGoogleLogin</code> function is called when the user successfully logs in.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { router, sequence } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;./main&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { CredentialResponse, GoogleLogin } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@react-oauth/google&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { useSessionHash } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;./useSessionHash.ts&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">function</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> Login</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">() {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">sessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useSessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">signingIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">setSigningIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> useState</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">  useEffect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">async</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">      if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSignedIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        router.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">navigate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;/&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    })()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }, [])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> handleGoogleLogin</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> async</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">tokenResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> CredentialResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">) </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">    const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> walletAddress</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      idToken: tokenResponse.credential</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">!</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MacBook Pro - Chrome&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`Wallet address: ${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">walletAddress</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    router.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">navigate</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;/&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  return</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    {!!</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">sessionHash</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> &amp;&amp; (&lt;&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      &lt;</span><span style=\"color:#E36209;--shiki-dark:#F69D50\">GoogleLogin</span><span style=\"color:#E36209;--shiki-dark:#F69D50\"> onSuccess</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{handleGoogleLogin} shape</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;circle&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> width</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">230</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} nonce</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{sessionHash} </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">/&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    &lt;/&gt;)}</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> )</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> default</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> Login</span></span></code></pre>\n","isPage":false,"text":"\nGoogle and Apple auth are directly supported by the SDK. The idToken is obtained from the social auth provider and used to open a session. You can see a sample React application using Google auth below. To see a complete application, see the demo-waas-auth repository. A functional demo is also available here.\nBegin with a simple main.tsx file that sets up the WaaS SDK, the router, and the Google OAuth provider.\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\nimport { GoogleOAuthProvider } from &#x27;@react-oauth/google&#x27;\nimport { createHashRouter, RouterProvider } from &#x27;react-router-dom&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nexport const router = createHashRouter([\n  {\n    path: &#x27;/login&#x27;,\n    element: &lt;Login /&gt;\n  },\n  {\n    path: &#x27;/&#x27;,\n    element: &lt;App /&gt;\n  }\n])\n \nReactDOM.createRoot(document.getElementById(&#x27;root&#x27;)!).render(\n  &lt;React.StrictMode&gt;\n      &lt;GoogleOAuthProvider clientId={GOOGLE_CLIENT_ID}&gt;\n        &lt;RouterProvider router={router} /&gt;\n      &lt;/GoogleOAuthProvider&gt;\n  &lt;/React.StrictMode&gt;\n)\nThe useSessionHash hook is used to obtain a session hash that is used to prevent replay attacks. The sequence.getSessionHash function is used to obtain the session hash, and the sequence.onSessionStateChanged function is used to update the session hash when the session state changes.\nimport { sequence } from &#x27;./main&#x27;\nimport { useEffect, useState } from &quot;react&quot;;\n \nexport function useSessionHash() {\n    const [sessionHash, setSessionHash] = useState(&quot;&quot;)\n    const [error, setError] = useState&lt;any&gt;(undefined)\n \n    useEffect(() =&gt; {\n        const handler = async () =&gt; {\n            try {\n                setSessionHash(await sequence.getSessionHash())\n            } catch (error) {\n                console.error(error)\n                setError(error)\n            }\n        }\n        handler()\n        return sequence.onSessionStateChanged(handler)\n    }, [setSessionHash, setError])\n \n    return {\n        sessionHash,\n        error,\n        loading: !!sessionHash,\n    }\n}\nTo handle the Google login, you can use the GoogleLogin component from the @react-oauth/google package. The handleGoogleLogin function is called when the user successfully logs in.\nimport { router, sequence } from &#x27;./main&#x27;\nimport { CredentialResponse, GoogleLogin } from &#x27;@react-oauth/google&#x27;\nimport { useSessionHash } from &quot;./useSessionHash.ts&quot;;\n \nfunction Login() {\n  const { sessionHash } = useSessionHash()\n  const [signingIn, setSigningIn] = useState(false)\n \n  useEffect(() =&gt; {\n    (async () =&gt; {\n      if (await sequence.isSignedIn()) {\n        router.navigate(&#x27;/&#x27;)\n      }\n    })()\n  }, [])\n \n  const handleGoogleLogin = async (tokenResponse: CredentialResponse) =&gt; {\n    const walletAddress = await sequence.signIn({\n      idToken: tokenResponse.credential!\n    }, &quot;MacBook Pro - Chrome&quot;)\n \n    console.log(`Wallet address: ${walletAddress}`)\n    router.navigate(&#x27;/&#x27;)\n  }\n \n  return (\n    {!!sessionHash &amp;&amp; (&lt;&gt;\n      &lt;GoogleLogin onSuccess={handleGoogleLogin} shape=&quot;circle&quot; width={230} nonce={sessionHash} /&gt;\n    &lt;/&gt;)}\n )\n}\n \nexport default Login\n","title":"Google / Apple Auth","titles":["Session Management","Sign in / Sign Up"]},"287":{"href":"/solutions/wallets/embedded-wallet/03-manage-sessions#list-sessions","html":"\n<p>This function returns a list of sessions for the current user and only includes sessions that are still valid.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MacBook Pro - Chrome&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">listSessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessions)</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">[</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x574372ff1A0Eede68B5358Cce7bbb93155A9dfe0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x574372ff1a0eede68b5358cce7bbb93155a9dfe0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;userId&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;42#https://accounts.google.com#109234880945084120673&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;projectId&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;issuer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://accounts.google.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;subject&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;109234880945084120673&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;friendlyName&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Pixel 3 - Brave&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;createdAt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2023-11-02T18:22:03.102950917Z&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;refreshedAt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2023-11-02T18:22:03.109787921Z&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;expiresAt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2123-10-09T18:22:03.102951017Z&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;isThis&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x3C4E11E4dbF23B87C14bd75d0Da9C75707392D21&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x3c4e11e4dbf23b87c14bd75d0da9c75707392d21&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;userId&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;42#https://accounts.google.com#109234880945084120673&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;projectId&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;issuer&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://accounts.google.com&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;subject&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;109234880945084120673&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;friendlyName&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MacBook Pro - Chrome&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;createdAt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2023-11-02T18:50:32.815189174Z&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;refreshedAt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2023-11-02T18:50:32.819722082Z&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;expiresAt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;2123-10-09T18:50:32.815189234Z&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;isThis&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span></code></pre>\n","isPage":false,"text":"\nThis function returns a list of sessions for the current user and only includes sessions that are still valid.\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;MacBook Pro - Chrome&quot;)\n \nconst sessions = await waas.listSessions()\nconsole.log(sessions)\n[\n  {\n    &quot;id&quot;: &quot;0x574372ff1A0Eede68B5358Cce7bbb93155A9dfe0&quot;,\n    &quot;address&quot;: &quot;0x574372ff1a0eede68b5358cce7bbb93155a9dfe0&quot;,\n    &quot;userId&quot;: &quot;42#https://accounts.google.com#109234880945084120673&quot;,\n    &quot;projectId&quot;: 42,\n    &quot;issuer&quot;: &quot;https://accounts.google.com&quot;,\n    &quot;subject&quot;: &quot;109234880945084120673&quot;,\n    &quot;friendlyName&quot;: &quot;Pixel 3 - Brave&quot;,\n    &quot;createdAt&quot;: &quot;2023-11-02T18:22:03.102950917Z&quot;,\n    &quot;refreshedAt&quot;: &quot;2023-11-02T18:22:03.109787921Z&quot;,\n    &quot;expiresAt&quot;: &quot;2123-10-09T18:22:03.102951017Z&quot;,\n    &quot;isThis&quot;: false\n  },\n  {\n    &quot;id&quot;: &quot;0x3C4E11E4dbF23B87C14bd75d0Da9C75707392D21&quot;,\n    &quot;address&quot;: &quot;0x3c4e11e4dbf23b87c14bd75d0da9c75707392d21&quot;,\n    &quot;userId&quot;: &quot;42#https://accounts.google.com#109234880945084120673&quot;,\n    &quot;projectId&quot;: 42,\n    &quot;issuer&quot;: &quot;https://accounts.google.com&quot;,\n    &quot;subject&quot;: &quot;109234880945084120673&quot;,\n    &quot;friendlyName&quot;: &quot;MacBook Pro - Chrome&quot;,\n    &quot;createdAt&quot;: &quot;2023-11-02T18:50:32.815189174Z&quot;,\n    &quot;refreshedAt&quot;: &quot;2023-11-02T18:50:32.819722082Z&quot;,\n    &quot;expiresAt&quot;: &quot;2123-10-09T18:50:32.815189234Z&quot;,\n    &quot;isThis&quot;: true\n  }\n]\n","title":"List Sessions","titles":["Session Management"]},"288":{"href":"/solutions/wallets/embedded-wallet/03-manage-sessions#close-session","html":"\n<p>A session can be closed using the <code>id</code> of the session. Any session can be closed from any device with an active session.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;MacBook Pro - Chrome&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">listSessions</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">dropSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ sessionId: sessions[</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">].id })</span></span></code></pre>","isPage":false,"text":"\nA session can be closed using the id of the session. Any session can be closed from any device with an active session.\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;MacBook Pro - Chrome&quot;)\n \nconst sessions = await waas.listSessions()\nawait waas.dropSession({ sessionId: sessions[0].id })","title":"Close Session","titles":["Session Management"]},"289":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#wallets-and-transactions","html":"</header>\n<p>Once the SDK is initialized and the user has been authenticated, you can access the wallet corresponding to that user&#x27;s account. The wallet is the entry point to all the operations that can be performed on the user&#x27;s account.</p>\n","isPage":true,"text":"\nOnce the SDK is initialized and the user has been authenticated, you can access the wallet corresponding to that user&#x27;s account. The wallet is the entry point to all the operations that can be performed on the user&#x27;s account.\n","title":"Wallets and transactions","titles":[]},"290":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#wallet-address","html":"\n<p>The wallet address is unique to each user, can&#x27;t be changed, and is used to identify the user&#x27;s account. It is a string of 42 characters starting with <code>0x</code>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>0xE4b10c53aa75E19E088cfDD0cff7D46a0E4206F0</span></span></code></pre>\n","isPage":false,"text":"\nThe wallet address is unique to each user, can&#x27;t be changed, and is used to identify the user&#x27;s account. It is a string of 42 characters starting with 0x.\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;Session name&quot;)\n \nconst address = await waas.getAddress()\n0xE4b10c53aa75E19E088cfDD0cff7D46a0E4206F0\n","title":"Wallet address","titles":["Wallets and transactions"]},"291":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#sign-messages","html":"\n<p>The wallet can be used to sign messages. The signatures can later be validated onchain or offchain.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { SequenceWaaS } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signature</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">137</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  message: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Hello world&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">});</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(signature)</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;signedMessage&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x48656c6c6f20776f726c64&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;signature&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0100010000000002012128ff2dd168dc250dc3da93db3131f737e6961a0000fe0100030000000006010001000074000197013331090a763fc7ef2216502cfbff5d855530f977a0ee6db3615722ed9bad498781d8ed72d52b5c9717708ac757f7789c9567e5468566179bd03f72d1fc7b1c010400002c01011111b16c6268897233eddea98a041b326b0faef2010122229ce37ccfee1cbab2b743b22c314b5667cf1a06020001000074000100deb9091f5beb1ebd8d91a1b81e562a70cdb3a1cdafc5e61087b18d1c221c570754ecbe056bdef5f82c388a9bf53f074521aeaf5afdeed3a2ba70adb89362631b010400002c0101444444444444444444444444444444444444444401015555555555555555555555555555555555555555030100a5a91b133336e5ef1c7e23c13974535018fab1c0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nThe wallet can be used to sign messages. The signatures can later be validated onchain or offchain.\nimport { SequenceWaaS } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;Session name&quot;)\n \nconst signature = await waas.signMessage({\n  chainId: 137,\n  message: &#x27;Hello world&#x27;,\n});\n \nconsole.log(signature)\n{\n  &quot;code&quot;: &quot;signedMessage&quot;,\n  &quot;data&quot;: {\n    &quot;message&quot;: &quot;0x48656c6c6f20776f726c64&quot;,\n    &quot;signature&quot;: &quot;0x0100010000000002012128ff2dd168dc250dc3da93db3131f737e6961a0000fe0100030000000006010001000074000197013331090a763fc7ef2216502cfbff5d855530f977a0ee6db3615722ed9bad498781d8ed72d52b5c9717708ac757f7789c9567e5468566179bd03f72d1fc7b1c010400002c01011111b16c6268897233eddea98a041b326b0faef2010122229ce37ccfee1cbab2b743b22c314b5667cf1a06020001000074000100deb9091f5beb1ebd8d91a1b81e562a70cdb3a1cdafc5e61087b18d1c221c570754ecbe056bdef5f82c388a9bf53f074521aeaf5afdeed3a2ba70adb89362631b010400002c0101444444444444444444444444444444444444444401015555555555555555555555555555555555555555030100a5a91b133336e5ef1c7e23c13974535018fab1c0&quot;\n  }\n}\n","title":"Sign messages","titles":["Wallets and transactions"]},"292":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#send-transactions","html":"\n<p>All wallets can send transactions right after creation. No extra steps are required to create the wallet, as all users have a wallet by default.</p>\n","isPage":false,"text":"\nAll wallets can send transactions right after creation. No extra steps are required to create the wallet, as all users have a wallet by default.\n","title":"Send transactions","titles":["Wallets and transactions"]},"293":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#raw-transaction","html":"\n<p>Raw transactions specify all the parameters of the transaction, including the <code>to</code> address, the <code>value</code> to send, and the <code>data</code> to include.</p>\n<p>Gas limits, prices, and nonce are always handled automatically by the Embedded Wallet.</p>\n<p>A network must be specified when sending a transaction. The network must be specified as the <code>chainId</code> of the network, for example <code>1</code> for Ethereum mainnet, <code>42161</code> for Arbitrum, etc.</p>\n<aside data-callout=\"info\"><p>Notice that all <strong>send transaction</strong> responses need to be checked using <code>isSentTransactionResponse</code>. This is required since WaaS will validate that a given transaction does not fail <em>before</em> executing the transaction, and in case of failure, the response will be an error receipt instead of a transaction receipt.</p><p>See more in <a href=\"#transaction-receipts\">transaction receipts</a>.</p></aside>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Sequence, isSentTransactionResponse } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42161</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  transactions: [{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;200000000000000000000&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 200 ETH</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    data: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x9fa2b3c4&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSentTransactionResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transactionReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;txHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xf2e9f728abd65089f25efda5852e605ced377f4e2c89dbf143b124623ed09b2c&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;metaTxHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;acc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;nativeReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;receipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;simulations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [ </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nRaw transactions specify all the parameters of the transaction, including the to address, the value to send, and the data to include.\nGas limits, prices, and nonce are always handled automatically by the Embedded Wallet.\nA network must be specified when sending a transaction. The network must be specified as the chainId of the network, for example 1 for Ethereum mainnet, 42161 for Arbitrum, etc.\nNotice that all send transaction responses need to be checked using isSentTransactionResponse. This is required since WaaS will validate that a given transaction does not fail before executing the transaction, and in case of failure, the response will be an error receipt instead of a transaction receipt.See more in transaction receipts.\nimport { Sequence, isSentTransactionResponse } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;Session name&quot;)\n \nconst tx = await waas.sendTransaction({\n  chainId: 42161,\n  transactions: [{\n    to: &#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;,\n    value: &#x27;200000000000000000000&#x27;, // 200 ETH\n    data: &#x27;0x9fa2b3c4&#x27;,\n  }]\n})\n \nif (isSentTransactionResponse(tx)) {\n  console.log(tx)\n}\n{\n  &quot;code&quot;: &quot;transactionReceipt&quot;,\n  &quot;data&quot;: {\n    &quot;txHash&quot;: &quot;0xf2e9f728abd65089f25efda5852e605ced377f4e2c89dbf143b124623ed09b2c&quot;,\n    &quot;metaTxHash&quot;: &quot;acc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;,\n    &quot;nativeReceipt&quot;: { ... },\n    &quot;receipt&quot;: { ... },\n    &quot;request&quot;: { ... },\n    &quot;simulations&quot;: [ ... ],\n  }\n}\n","title":"Raw transaction","titles":["Wallets and transactions","Send transactions"]},"294":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#send-erc20-tokens","html":"\n<p>Helper methods are available for common operations, such as sending ERC20 tokens. This automatically handles the <code>data</code> field of the transaction.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Sequence, isSentTransactionResponse } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendERC20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42161</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  token: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x6b175474e89094c44da98b954eedeac495271d0f&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// DAI</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,    </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Recipient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;200000000000000000000&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 200 DAI</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSentTransactionResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transactionReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;txHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;metaTxHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;01a087979dccbbc49a45b72d987e5651d65bd97349ccbfdd601b0b7beee9ddc4&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;nativeReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;receipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;simulations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [ </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nHelper methods are available for common operations, such as sending ERC20 tokens. This automatically handles the data field of the transaction.\nimport { Sequence, isSentTransactionResponse } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;Session name&quot;);\n \nconst tx = await waas.sendERC20({\n  chainId: 42161,\n  token: &#x27;0x6b175474e89094c44da98b954eedeac495271d0f&#x27;, // DAI\n  to: &#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;,    // Recipient\n  value: &#x27;200000000000000000000&#x27;,                      // 200 DAI\n})\n \nif (isSentTransactionResponse(tx)) {\n  console.log(tx)\n}\n{\n  &quot;code&quot;: &quot;transactionReceipt&quot;,\n  &quot;data&quot;: {\n    &quot;txHash&quot;: &quot;0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3&quot;,\n    &quot;metaTxHash&quot;: &quot;01a087979dccbbc49a45b72d987e5651d65bd97349ccbfdd601b0b7beee9ddc4&quot;,\n    &quot;nativeReceipt&quot;: { ... },\n    &quot;receipt&quot;: { ... },\n    &quot;request&quot;: { ... },\n    &quot;simulations&quot;: [ ... ],\n  }\n}\n","title":"Send ERC20 tokens","titles":["Wallets and transactions","Send transactions"]},"295":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#send-erc721-tokens","html":"\n<p>Sending ERC721 tokens also has a helper method. This automatically handles the <code>data</code> field of the transaction.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Sequence, isSentTransactionResponse } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken });</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendERC721</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42161</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  token: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xF87E31492Faf9A91B02Ee0dEAAd50d51d56D5d4d&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Decentraland LAND</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,    </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Recipient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  id: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;33347671958251969419410711528313284722562&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,     </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Asset ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSentTransactionResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transactionReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;txHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x4936962d9972a70bffc27f376f55d9c60c12e762819fa6384fdb466664122b6e&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;metaTxHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;e6513a60b63359a365f0d3f05744d89823278ec829fc5cb4d275bb815d0f5887&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;nativeReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;receipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;simulations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [ </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nSending ERC721 tokens also has a helper method. This automatically handles the data field of the transaction.\nimport { Sequence, isSentTransactionResponse } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken });\n \nconst tx = await waas.sendERC721({\n  chainId: 42161,\n  token: &#x27;0xF87E31492Faf9A91B02Ee0dEAAd50d51d56D5d4d&#x27;, // Decentraland LAND\n  to: &#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;,    // Recipient\n  id: &#x27;33347671958251969419410711528313284722562&#x27;,     // Asset ID\n})\n \nif (isSentTransactionResponse(tx)) {\n  console.log(tx)\n}\n{\n  &quot;code&quot;: &quot;transactionReceipt&quot;,\n  &quot;data&quot;: {\n    &quot;txHash&quot;: &quot;0x4936962d9972a70bffc27f376f55d9c60c12e762819fa6384fdb466664122b6e&quot;,\n    &quot;metaTxHash&quot;: &quot;e6513a60b63359a365f0d3f05744d89823278ec829fc5cb4d275bb815d0f5887&quot;,\n    &quot;nativeReceipt&quot;: { ... },\n    &quot;receipt&quot;: { ... },\n    &quot;request&quot;: { ... },\n    &quot;simulations&quot;: [ ... ],\n  }\n}\n","title":"Send ERC721 tokens","titles":["Wallets and transactions","Send transactions"]},"296":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#send-erc1155-tokens","html":"\n<p>Sending ERC1155 tokens is also supported.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Sequence, isSentTransactionResponse } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken })</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendERC1155</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">137</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  token: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x631998e91476da5b870d741192fc5cbc55f5a52e&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Skyweaver assets</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  values: [{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    id: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;66547&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                                       </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Asset ID</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;200&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                                      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Amount for this asset</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }, {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    id: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;68572&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1000&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n","isPage":false,"text":"\nSending ERC1155 tokens is also supported.\nimport { Sequence, isSentTransactionResponse } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken })\n \nconst tx = await waas.sendERC1155({\n  chainId: 137,\n  token: &#x27;0x631998e91476da5b870d741192fc5cbc55f5a52e&#x27;, // Skyweaver assets\n  values: [{\n    id: &#x27;66547&#x27;,                                       // Asset ID\n    value: &#x27;200&#x27;,                                      // Amount for this asset\n  }, {\n    id: &#x27;68572&#x27;,\n    value: &#x27;1000&#x27;,\n  }]\n})\n","title":"Send ERC1155 tokens","titles":["Wallets and transactions","Send transactions"]},"297":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#call-any-contract","html":"\n<p>The <code>callContract</code> method can be used to call any contract method. This is useful for calling methods that are not supported by the helper methods. To call a contract an ABI or function signature must be provided.</p>\n","isPage":false,"text":"\nThe callContract method can be used to call any contract method. This is useful for calling methods that are not supported by the helper methods. To call a contract an ABI or function signature must be provided.\n","title":"Call any contract","titles":["Wallets and transactions","Send transactions"]},"298":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#function-signature","html":"\n<p>Providing a function signature is the easiest way to call a contract method, as it doesn&#x27;t require an ABI. The function signature can be provided with named parameters or positional parameters.</p>\n","isPage":false,"text":"\nProviding a function signature is the easiest way to call a contract method, as it doesn&#x27;t require an ABI. The function signature can be provided with named parameters or positional parameters.\n","title":"Function signature","titles":["Wallets and transactions","Send transactions","Call any contract"]},"299":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#named-arguments","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">callContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x503388C73Ca663eA34e103c11C9F47C9433af471&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Contract address</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  abi: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mint(address to, uint256 tokenId)&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Function signature</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  func: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mint&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                                      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Function name</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  args: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xf439e432d54c2Bf5518A1901D3791070d4192986&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    tokenId: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#6A737D;--shiki-dark:#768390\">                                           // Value to send</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n","isPage":false,"text":"\nconst tx = await sequence.callContract({\n  to: &#x27;0x503388C73Ca663eA34e103c11C9F47C9433af471&#x27;,  // Contract address\n  abi: &#x27;mint(address to, uint256 tokenId)&#x27;,          // Function signature\n  func: &#x27;mint&#x27;,                                      // Function name\n  args: {\n    to: &#x27;0xf439e432d54c2Bf5518A1901D3791070d4192986&#x27;,\n    tokenId: &#x27;1&#x27;,\n  },\n  value: 0                                           // Value to send\n})\n","title":"Named arguments","titles":["Wallets and transactions","Send transactions","Call any contract","Function signature"]},"300":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#positional-arguments","html":"\n<p>Notice that passing a named function signature with positional arguments is allowed.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">callContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x503388C73Ca663eA34e103c11C9F47C9433af471&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Contract address</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  abi: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mint(address,uint256)&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Function signature</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  func: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mint&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                                      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Function name</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  args: [</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &#x27;0xf439e432d54c2Bf5518A1901D3791070d4192986&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    &#x27;1&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  ],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#6A737D;--shiki-dark:#768390\">                                           // Value to send</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n","isPage":false,"text":"\nNotice that passing a named function signature with positional arguments is allowed.\nconst tx = await sequence.callContract({\n  to: &#x27;0x503388C73Ca663eA34e103c11C9F47C9433af471&#x27;,  // Contract address\n  abi: &#x27;mint(address,uint256)&#x27;,                      // Function signature\n  func: &#x27;mint&#x27;,                                      // Function name\n  args: [\n    &#x27;0xf439e432d54c2Bf5518A1901D3791070d4192986&#x27;,\n    &#x27;1&#x27;,\n  ],\n  value: 0                                           // Value to send\n})\n","title":"Positional arguments","titles":["Wallets and transactions","Send transactions","Call any contract","Function signature"]},"301":{"href":"/solutions/wallets/embedded-wallet/04-use-wallets#abi","html":"\n<p>Providing an ABI is more verbose, but allows for more flexibility, as a single ABI can be used to call multiple methods. ABIs support named arguments and positional arguments.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> abi</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `[{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;name&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;string&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_spender&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;approve&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;bool&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;totalSupply&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_from&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_to&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;transferFrom&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;bool&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;decimals&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint8&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_owner&quot;,&quot;type&quot;:&quot;address&quot;}],&quot;name&quot;:&quot;balanceOf&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;balance&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;symbol&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;string&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_to&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;transfer&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;bool&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_owner&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_spender&quot;,&quot;type&quot;:&quot;address&quot;}],&quot;name&quot;:&quot;allowance&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;payable&quot;:true,&quot;stateMutability&quot;:&quot;payable&quot;,&quot;type&quot;:&quot;fallback&quot;},{&quot;anonymous&quot;:false,&quot;inputs&quot;:[{&quot;indexed&quot;:true,&quot;name&quot;:&quot;owner&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:true,&quot;name&quot;:&quot;spender&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:false,&quot;name&quot;:&quot;value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;Approval&quot;,&quot;type&quot;:&quot;event&quot;},{&quot;anonymous&quot;:false,&quot;inputs&quot;:[{&quot;indexed&quot;:true,&quot;name&quot;:&quot;from&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:true,&quot;name&quot;:&quot;to&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:false,&quot;name&quot;:&quot;value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;Transfer&quot;,&quot;type&quot;:&quot;event&quot;}]`</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">callContract</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x6b175474e89094c44da98b954eedeac495271d0f&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Contract address</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  abi: abi,                                          </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// ABI</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  func: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;transfer&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                                  </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Function name</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  args: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xf439e432d54c2Bf5518A1901D3791070d4192986&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    _value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#6A737D;--shiki-dark:#768390\">                                           // Value to send</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n<div><p>Email accounts can only send transactions after the current session has been confirmed by the Sequence guard. This is done by clicking an email link sent to the user&#x27;s email address or phone number.</p><p>Social login accounts (like Google and Facebook) can send transactions immediately after signing in.</p><p>For more details, see <a href=\"/solutions/wallets/embedded-wallet/05-validation\">validation</a>.</p></div>","isPage":false,"text":"\nProviding an ABI is more verbose, but allows for more flexibility, as a single ABI can be used to call multiple methods. ABIs support named arguments and positional arguments.\nconst abi = `[{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;name&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;string&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_spender&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;approve&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;bool&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;totalSupply&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_from&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_to&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;transferFrom&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;bool&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;decimals&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint8&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_owner&quot;,&quot;type&quot;:&quot;address&quot;}],&quot;name&quot;:&quot;balanceOf&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;balance&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[],&quot;name&quot;:&quot;symbol&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;string&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:false,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_to&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;transfer&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;bool&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;nonpayable&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;constant&quot;:true,&quot;inputs&quot;:[{&quot;name&quot;:&quot;_owner&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;name&quot;:&quot;_spender&quot;,&quot;type&quot;:&quot;address&quot;}],&quot;name&quot;:&quot;allowance&quot;,&quot;outputs&quot;:[{&quot;name&quot;:&quot;&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;payable&quot;:false,&quot;stateMutability&quot;:&quot;view&quot;,&quot;type&quot;:&quot;function&quot;},{&quot;payable&quot;:true,&quot;stateMutability&quot;:&quot;payable&quot;,&quot;type&quot;:&quot;fallback&quot;},{&quot;anonymous&quot;:false,&quot;inputs&quot;:[{&quot;indexed&quot;:true,&quot;name&quot;:&quot;owner&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:true,&quot;name&quot;:&quot;spender&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:false,&quot;name&quot;:&quot;value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;Approval&quot;,&quot;type&quot;:&quot;event&quot;},{&quot;anonymous&quot;:false,&quot;inputs&quot;:[{&quot;indexed&quot;:true,&quot;name&quot;:&quot;from&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:true,&quot;name&quot;:&quot;to&quot;,&quot;type&quot;:&quot;address&quot;},{&quot;indexed&quot;:false,&quot;name&quot;:&quot;value&quot;,&quot;type&quot;:&quot;uint256&quot;}],&quot;name&quot;:&quot;Transfer&quot;,&quot;type&quot;:&quot;event&quot;}]`\n \nconst tx = await sequence.callContract({\n  to: &#x27;0x6b175474e89094c44da98b954eedeac495271d0f&#x27;,  // Contract address\n  abi: abi,                                          // ABI\n  func: &#x27;transfer&#x27;,                                  // Function name\n  args: {\n    _to: &#x27;0xf439e432d54c2Bf5518A1901D3791070d4192986&#x27;,\n    _value: &#x27;1&#x27;,\n  },\n  value: 0                                           // Value to send\n})\nEmail accounts can only send transactions after the current session has been confirmed by the Sequence guard. This is done by clicking an email link sent to the user&#x27;s email address or phone number.Social login accounts (like Google and Facebook) can send transactions immediately after signing in.For more details, see validation.","title":"ABI","titles":["Wallets and transactions","Send transactions","Call any contract"]},"302":{"href":"/solutions/wallets/embedded-wallet/05-validation#validation","html":"</header>\n<p>Users with Auth + Embedded Wallet go through two distinct flows based on the login method:</p>\n","isPage":true,"text":"\nUsers with Auth + Embedded Wallet go through two distinct flows based on the login method:\n","title":"Validation","titles":[]},"303":{"href":"/solutions/wallets/embedded-wallet/05-validation#email-login-one-time-code","html":"\n<p>For users logging in with an email, Amazon Cognito sends a one-time code to validate their identity. This is a trusted method that does not require additional verification.</p>\n","isPage":false,"text":"\nFor users logging in with an email, Amazon Cognito sends a one-time code to validate their identity. This is a trusted method that does not require additional verification.\n","title":"Email login (one-time code)","titles":["Validation",null]},"304":{"href":"/solutions/wallets/embedded-wallet/05-validation#social-login","html":"\n<p>Users who log in via established social auth providers like Google or Facebook don&#x27;t need additional validation. However, when logging in using a custom provider, we cannot guarantee sufficient protection of user&#x27;s identity. Due to this, we might require additional verification by asking the user to provide a one-time code we send to their email address.</p>\n<p>Please contact Sequence support if you wish to discuss whether your authentication provider can be considered trusted.</p>\n","isPage":false,"text":"\nUsers who log in via established social auth providers like Google or Facebook don&#x27;t need additional validation. However, when logging in using a custom provider, we cannot guarantee sufficient protection of user&#x27;s identity. Due to this, we might require additional verification by asking the user to provide a one-time code we send to their email address.\nPlease contact Sequence support if you wish to discuss whether your authentication provider can be considered trusted.\n","title":"Social login","titles":["Validation",null]},"305":{"href":"/solutions/wallets/embedded-wallet/05-validation#validation-status","html":"\n<p>To check the validation status of the current session, use the <code>isSessionValid</code> method. This returns <code>true</code> for email login and trusted social logins and <code>false</code> for custom logins until email validation is complete.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> isValid</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSessionValid</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(isValid)</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>true</span></span></code></pre>\n","isPage":false,"text":"\nTo check the validation status of the current session, use the isSessionValid method. This returns true for email login and trusted social logins and false for custom logins until email validation is complete.\nconst isValid = await waas.isSessionValid()\nconsole.log(isValid)\ntrue\n","title":"Validation status","titles":["Validation"]},"306":{"href":"/solutions/wallets/embedded-wallet/05-validation#trigger-session-validation","html":"\n<p>Manually trigger a session validation with the <code>validateSession</code> method. This will send a code to the user&#x27;s email. If validated within 10 minutes, the method returns <code>true</code>; otherwise, it returns <code>false</code>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> result</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">validateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>true</span></span></code></pre>\n<p>Once user receives the code, he can validate the session with the <code>finishValidateSession</code> method that takes the code as an argument. If the code is valid, the method returns <code>true</code>; otherwise, it returns <code>false</code>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> result</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">finishValidateSession</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;123456&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>true</span></span></code></pre>\n","isPage":false,"text":"\nManually trigger a session validation with the validateSession method. This will send a code to the user&#x27;s email. If validated within 10 minutes, the method returns true; otherwise, it returns false.\nconst result = await waas.validateSession()\ntrue\nOnce user receives the code, he can validate the session with the finishValidateSession method that takes the code as an argument. If the code is valid, the method returns true; otherwise, it returns false.\nconst result = await waas.finishValidateSession(&#x27;123456&#x27;)\ntrue\n","title":"Trigger session validation","titles":["Validation","Validation status"]},"307":{"href":"/solutions/wallets/embedded-wallet/05-validation#onvalidationrequired-callback","html":"\n<p>The <code>onValidationRequired</code> callback is triggered when a session validation is required. This can happen when a user tries to perform an action that requires validation, such as sending a transaction or signing a message. It determines whether the session validation should be triggered or not. If the callback returns <code>true</code>, the session validation is triggered. If it returns <code>false</code>, the action is cancelled.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendERC20</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  validation: {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    onValidationRequired</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42161</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  token: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x6b175474e89094c44da98b954eedeac495271d0f&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// DAI</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,    </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// Recipient</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;200000000000000000000&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,                      </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 200 DAI</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n","isPage":false,"text":"\nThe onValidationRequired callback is triggered when a session validation is required. This can happen when a user tries to perform an action that requires validation, such as sending a transaction or signing a message. It determines whether the session validation should be triggered or not. If the callback returns true, the session validation is triggered. If it returns false, the action is cancelled.\nconst tx = await waas.sendERC20({\n  validation: {\n    onValidationRequired: () =&gt; true\n  },\n  chainId: 42161,\n  token: &#x27;0x6b175474e89094c44da98b954eedeac495271d0f&#x27;, // DAI\n  to: &#x27;0x27CabC9700EE6Db2797b6AC1e1eCe81C72A2cD8D&#x27;,    // Recipient\n  value: &#x27;200000000000000000000&#x27;,                      // 200 DAI\n})\n","title":"onValidationRequired callback","titles":["Validation","Validation status","Trigger session validation"]},"308":{"href":"/solutions/wallets/embedded-wallet/05-validation#listen-for-session-validations","html":"\n<p>Events like transaction sends may silently prompt session validation. Use the <code>onValidationRequired</code> hook to catch such instances.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">onValidationRequired</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(() </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Session has been triggered for validation&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> }, { to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x...&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> });</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>Session has been triggered for validation</span></span></code></pre>\n","isPage":false,"text":"\nEvents like transaction sends may silently prompt session validation. Use the onValidationRequired hook to catch such instances.\nwaas.onValidationRequired(() =&gt; {\n  console.log(&#x27;Session has been triggered for validation&#x27;);\n})\n \nawait waas.sendTransaction({ chainId: 1 }, { to: &#x27;0x...&#x27;, value: &#x27;1&#x27; });\nSession has been triggered for validation\n","title":"Listen for session validations","titles":["Validation","Validation status"]},"309":{"href":"/solutions/wallets/embedded-wallet/05-validation#automatic-session-validation","html":"\n<p>Session validation is automatic when certain actions requiring validation are performed. This can be managed using the <code>onValidationRequired</code> hook.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  validation: {</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">    onValidationRequired</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Session has been triggered for validation&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">      return</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x061150e5574716DBb1a2cdf54b3DcE9F94395f65&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n<p>By returning <code>true</code> or <code>false</code> from the <code>onValidationRequired</code> hook, you either continue or cancel the action, respectively.</p>","isPage":false,"text":"\nSession validation is automatic when certain actions requiring validation are performed. This can be managed using the onValidationRequired hook.\nconst tx = await waas.sendTransaction({\n  chainId: 1,\n  validation: {\n    onValidationRequired: () =&gt; {\n      console.log(&#x27;Session has been triggered for validation&#x27;);\n      return true;\n    }\n  },\n  to: &#x27;0x061150e5574716DBb1a2cdf54b3DcE9F94395f65&#x27;,\n  value: &#x27;1&#x27;\n})\nBy returning true or false from the onValidationRequired hook, you either continue or cancel the action, respectively.","title":"Automatic session validation","titles":["Validation"]},"310":{"href":"/solutions/wallets/embedded-wallet/06-transaction-receipts#transaction-receipts","html":"</header>\n<p>Any methods that involve sending transactions will return either <em>successful</em> or <em>failed</em> transaction receipts. Failed transaction receipts are generated without executing the transaction.</p>\n","isPage":true,"text":"\nAny methods that involve sending transactions will return either successful or failed transaction receipts. Failed transaction receipts are generated without executing the transaction.\n","title":"Transaction receipts","titles":[]},"311":{"href":"/solutions/wallets/embedded-wallet/06-transaction-receipts#successful-transaction-response","html":"\n<p>Any transaction that is successfully included in a block will return a <code>SentTransactionResponse</code> object. This must be checked for before accessing the transaction hash, using the <code>isSentTransactionResponse</code> type guard.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Sequence, isSentTransactionResponse } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">42161</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  transactions: [{</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0xD72C236Be524Ec24F72329317e2785E687105B69&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSentTransactionResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>The relevant fields are:</p>\n<ul>\n<li><code>txHash</code>: The transaction hash of the transaction that was sent to the network.</li>\n<li><code>receipt.logs</code>: Logs emitted by the transaction.</li>\n<li><code>receipt.status</code>: The status of the transaction. <code>SUCCEEDED</code> or <code>FAILED</code>.</li>\n<li><code>receipt.revertReason</code>: If the transaction was executed but reverted, it includes the reason.</li>\n</ul>\n<p>To view the full response object, see the [Transaction Receipt Response] section.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transactionReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;txHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0xf2e9f728abd65089f25efda5852e605ced377f4e2c89dbf143b124623ed09b2c&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;metaTxHash&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;acc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;nativeReceipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;receipt&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;id&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;acc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;index&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;logs&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x4d4EE1b8583e31fe789eAF2e1b6e011C220c10B6&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0000000000000000000000001119e72b4af230becebd933d0e07f0eec51d8c2a0000000000000000000000000000000000000000000000000000000000000001&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;topics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;0x1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;address&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x4d4EE1b8583e31fe789eAF2e1b6e011C220c10B6&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;topics&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;0x5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae7&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">            &quot;0xacc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">          ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      ],</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;receipts&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [ </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ],</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;revertReason&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;status&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;SUCCEEDED&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: { </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;simulations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [ </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">...</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nAny transaction that is successfully included in a block will return a SentTransactionResponse object. This must be checked for before accessing the transaction hash, using the isSentTransactionResponse type guard.\nimport { Sequence, isSentTransactionResponse } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;Session name&quot;)\n \nconst tx = await waas.sendTransaction({\n  chainId: 42161,\n  transactions: [{\n    to: &#x27;0xD72C236Be524Ec24F72329317e2785E687105B69&#x27;, value: &#x27;0&#x27;\n  }]\n})\n \nif (isSentTransactionResponse(tx)) {\n  console.log(tx)\n}\nThe relevant fields are:\n\ntxHash: The transaction hash of the transaction that was sent to the network.\nreceipt.logs: Logs emitted by the transaction.\nreceipt.status: The status of the transaction. SUCCEEDED or FAILED.\nreceipt.revertReason: If the transaction was executed but reverted, it includes the reason.\n\nTo view the full response object, see the [Transaction Receipt Response] section.\n{\n  &quot;code&quot;: &quot;transactionReceipt&quot;,\n  &quot;data&quot;: {\n    &quot;txHash&quot;: &quot;0xf2e9f728abd65089f25efda5852e605ced377f4e2c89dbf143b124623ed09b2c&quot;,\n    &quot;metaTxHash&quot;: &quot;acc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;,\n    &quot;nativeReceipt&quot;: { ... },\n    &quot;receipt&quot;: {\n      &quot;id&quot;: &quot;acc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;,\n      &quot;index&quot;: 0,\n      &quot;logs&quot;: [\n        {\n          &quot;address&quot;: &quot;0x4d4EE1b8583e31fe789eAF2e1b6e011C220c10B6&quot;,\n          &quot;data&quot;: &quot;0x0000000000000000000000001119e72b4af230becebd933d0e07f0eec51d8c2a0000000000000000000000000000000000000000000000000000000000000001&quot;,\n          &quot;topics&quot;: [\n            &quot;0x1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881&quot;\n          ]\n        },\n        {\n          &quot;address&quot;: &quot;0x4d4EE1b8583e31fe789eAF2e1b6e011C220c10B6&quot;,\n          &quot;data&quot;: &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;,\n          &quot;topics&quot;: [\n            &quot;0x5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae7&quot;,\n            &quot;0xacc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0&quot;\n          ]\n        }\n      ],\n      &quot;receipts&quot;: [ ... ],\n      &quot;revertReason&quot;: null,\n      &quot;status&quot;: &quot;SUCCEEDED&quot;\n    },\n    &quot;request&quot;: { ... },\n    &quot;simulations&quot;: [ ... ]\n  }\n}\n","title":"Successful transaction response","titles":["Transaction receipts"]},"312":{"href":"/solutions/wallets/embedded-wallet/06-transaction-receipts#failed-transaction-response","html":"\n<p>An Embedded Wallet will try to catch any failing transactions before they are sent to the network. This is done by simulating the transaction on the network before sending it. If the simulation fails, the transaction will not be sent to the network and a <code>FailedTransactionResponse</code> will be returned.</p>\n<p>To view the full response object, see the TODO: link to wallet API [Transaction Receipt Response] section.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Sequence, isSentTransactionResponse } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/waas&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> waas</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> SequenceWaaS</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  projectAccessKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">PROJECT_ACCESS_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  waasConfigKey: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">process</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">env</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">WAAS_CONFIG_KEY</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  network: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;mumbai&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}, defaults.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">TEST</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signIn</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({ idToken }, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Session name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> tx</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> waas.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">137</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  transactions: [{</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">    // This address always fails on Polygon, give it a try :D</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    to: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x839eE023B21f4Ffe2294025DE0AC30Ba7278D6Fd&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isSentTransactionResponse</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)) {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">  // ... This will never be executed</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">  // tx can only be `SentTransactionResponse` or `FailedTransactionResponse`</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(tx)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transactionFailed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;error&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;This is an error message&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;request&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;code&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;sendTransaction&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;expires&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1699443005</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;identifier&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ts-sdk-1699442705965-0x153824576D03629b264683B430bBF9AcEA1d0975&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;issued&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1699442705</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;network&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;137&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;transactions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;data&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;to&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x839eE023B21f4Ffe2294025DE0AC30Ba7278D6Fd&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;type&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;transaction&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">          &quot;value&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x00&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">        }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      ],</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">      &quot;wallet&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;0x4d4EE1b8583e31fe789eAF2e1b6e011C220c10B6&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    },</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;simulations&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;executed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;gasLimit&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">7908</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;gasUsed&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5931</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;reason&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;This is an error message :)&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;result&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">null</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">        &quot;succeeded&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">      }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>","isPage":false,"text":"\nAn Embedded Wallet will try to catch any failing transactions before they are sent to the network. This is done by simulating the transaction on the network before sending it. If the simulation fails, the transaction will not be sent to the network and a FailedTransactionResponse will be returned.\nTo view the full response object, see the TODO: link to wallet API [Transaction Receipt Response] section.\nimport { Sequence, isSentTransactionResponse } from &#x27;@0xsequence/waas&#x27;\n \nconst waas = new SequenceWaaS({\n  projectAccessKey: `${process.env.PROJECT_ACCESS_KEY}`,\n  waasConfigKey: `${process.env.WAAS_CONFIG_KEY}`,\n  network: &#x27;mumbai&#x27;\n}, defaults.TEST)\n \nawait waas.signIn({ idToken }, &quot;Session name&quot;)\n \nconst tx = await waas.sendTransaction({\n  chainId: 137,\n  transactions: [{\n    // This address always fails on Polygon, give it a try :D\n    to: &#x27;0x839eE023B21f4Ffe2294025DE0AC30Ba7278D6Fd&#x27;, value: &#x27;0&#x27;\n  }]\n})\n \nif (isSentTransactionResponse(tx)) {\n  // ... This will never be executed\n} else {\n  // tx can only be `SentTransactionResponse` or `FailedTransactionResponse`\n  console.log(tx)\n}\n{\n  &quot;code&quot;: &quot;transactionFailed&quot;,\n  &quot;data&quot;: {\n    &quot;error&quot;: &quot;This is an error message&quot;,\n    &quot;request&quot;: {\n      &quot;code&quot;: &quot;sendTransaction&quot;,\n      &quot;expires&quot;: 1699443005,\n      &quot;identifier&quot;: &quot;ts-sdk-1699442705965-0x153824576D03629b264683B430bBF9AcEA1d0975&quot;,\n      &quot;issued&quot;: 1699442705,\n      &quot;network&quot;: &quot;137&quot;,\n      &quot;transactions&quot;: [\n        {\n          &quot;data&quot;: &quot;0x&quot;,\n          &quot;to&quot;: &quot;0x839eE023B21f4Ffe2294025DE0AC30Ba7278D6Fd&quot;,\n          &quot;type&quot;: &quot;transaction&quot;,\n          &quot;value&quot;: &quot;0x00&quot;\n        }\n      ],\n      &quot;wallet&quot;: &quot;0x4d4EE1b8583e31fe789eAF2e1b6e011C220c10B6&quot;\n    },\n    &quot;simulations&quot;: [\n      {\n        &quot;executed&quot;: true,\n        &quot;gasLimit&quot;: 7908,\n        &quot;gasUsed&quot;: 5931,\n        &quot;reason&quot;: &quot;This is an error message :)&quot;,\n        &quot;result&quot;: null,\n        &quot;succeeded&quot;: false\n      }\n    ]\n  }\n}","title":"Failed transaction response","titles":["Transaction receipts"]},"313":{"href":"/solutions/wallets/universal-wallet/01-overview#wallet","html":"</header>\n<p>Sequence Wallet gives you a friendly, non-custodial wallet for your users with multi-chain support and seamless integration.</p>\n<div class=\"text--center\"><img src=\"/img/wallet-screen.png\"/></div>\n<p>Most wallets for Ethereum have a single private key that has full control over a wallet, i.e. an Externally Owned Account (EOAs).\nHowever, a Sequence wallet is a Smart Contract that is deployed on the blockchain and which can be controlled by multiple private keys.\nThese keys are meant to be controlled by the wallet owner and provide added security since more than one of these keys would need to be\ncompromised for the wallet to be compromised.</p>","isPage":true,"text":"\nSequence Wallet gives you a friendly, non-custodial wallet for your users with multi-chain support and seamless integration.\n\nMost wallets for Ethereum have a single private key that has full control over a wallet, i.e. an Externally Owned Account (EOAs).\nHowever, a Sequence wallet is a Smart Contract that is deployed on the blockchain and which can be controlled by multiple private keys.\nThese keys are meant to be controlled by the wallet owner and provide added security since more than one of these keys would need to be\ncompromised for the wallet to be compromised.","title":"Wallet","titles":[]},"314":{"href":"/solutions/wallets/universal-wallet/02-quickstart#quickstart","html":"</header>\n","isPage":true,"text":"\n","title":"Quickstart","titles":[]},"315":{"href":"/solutions/wallets/universal-wallet/02-quickstart#try-a-demo","html":"\n<aside data-callout=\"info\"><p>Try out the Universal Wallet leveraging SequenceKit at our <a href=\"https://0xsequence.github.io/kit/\">demo</a></p></aside>\n","isPage":false,"text":"\nTry out the Universal Wallet leveraging SequenceKit at our demo\n","title":"Try a Demo","titles":["Quickstart"]},"316":{"href":"/solutions/wallets/universal-wallet/02-quickstart#template","html":"\n<aside data-callout=\"info\"><p>Get started quickly with a <a href=\"https://github.com/0xsequence/kit/tree/master/examples/react\">template</a> using SequenceKit</p></aside>\n","isPage":false,"text":"\nGet started quickly with a template using SequenceKit\n","title":"Template","titles":["Quickstart"]},"317":{"href":"/solutions/wallets/universal-wallet/02-quickstart#install-for-existing-project","html":"\n<p>We provide TypeScript and Unity SDKs for the Embedded Wallet authentication system. You can install the TypeScript SDK with:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install @0xsequence/waas</span></span></code></pre>\n<p>For more information on the Unity Embedded Wallet SDK, please refer to the <a href=\"#TODO\">Unity SDK documentation</a>.</p>\n<p>The sequence.js SDK is composed of several sub-packages combined into a single meta-package called <code>0xsequence</code>.\nTo add the SDK to your project, add a dependency on 0xsequence to your package.json:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">npm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">xsequence ethers</span></span></code></pre>\n<p>or</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">pnpm</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> install </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">xsequence ethers</span></span></code></pre>\n<p>or</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">yarn</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> add </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">xsequence ethers</span></span></code></pre>\n<p>If you know that your project only requires specific sub-packages, you can also depend on those directly with\n<code>npm add @0xsequence/&lt;sub-package name&gt;</code>.</p>\n<p>Your package.json should look something like this (actual version may vary):</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">{</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;my-dapp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">  ...</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">  &quot;dependencies&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: {</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;0xsequence&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;^1.0.0&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#8DDB8C\">    &quot;ethers&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">: </span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">^</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">5.7</span><span style=\"color:#B31D28;--shiki-dark:#FF938A;font-style:italic;--shiki-dark-font-style:italic\">.</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">0</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    ...</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  }</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}</span></span></code></pre>\n","isPage":false,"text":"\nWe provide TypeScript and Unity SDKs for the Embedded Wallet authentication system. You can install the TypeScript SDK with:\npnpm install @0xsequence/waas\nFor more information on the Unity Embedded Wallet SDK, please refer to the Unity SDK documentation.\nThe sequence.js SDK is composed of several sub-packages combined into a single meta-package called 0xsequence.\nTo add the SDK to your project, add a dependency on 0xsequence to your package.json:\nnpm install 0xsequence ethers\nor\npnpm install 0xsequence ethers\nor\nyarn add 0xsequence ethers\nIf you know that your project only requires specific sub-packages, you can also depend on those directly with\nnpm add @0xsequence/&lt;sub-package name&gt;.\nYour package.json should look something like this (actual version may vary):\n{\n  &quot;name&quot;: &quot;my-dapp&quot;,\n  ...\n  &quot;dependencies&quot;: {\n    &quot;0xsequence&quot;: &quot;^1.0.0&quot;,\n    &quot;ethers&quot;: ^5.7.0&quot;\n    ...\n  }\n}\n","title":"Install for existing project","titles":["Quickstart"]},"318":{"href":"/solutions/wallets/universal-wallet/02-quickstart#cdn-distribution-as-native-js","html":"\n<p>Optionally, <code>0xsequence</code> can be installed as a JS script source (UMD distribution) via:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">script</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://cdn.ethers.io/lib/ethers-5.7.umd.min.js&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">script</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&lt;</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">script</span><span style=\"color:#6F42C1;--shiki-dark:#6CB6FF\"> src</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://unpkg.com/0xsequence@latest/dist/0xsequence.umd.min.js&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;&lt;/</span><span style=\"color:#22863A;--shiki-dark:#8DDB8C\">script</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">&gt;</span></span></code></pre>","isPage":false,"text":"\nOptionally, 0xsequence can be installed as a JS script source (UMD distribution) via:\n&lt;script src=&quot;https://cdn.ethers.io/lib/ethers-5.7.umd.min.js&quot;&gt;&lt;/script&gt;\n&lt;script src=&quot;https://unpkg.com/0xsequence@latest/dist/0xsequence.umd.min.js&quot;&gt;&lt;/script&gt;","title":"CDN distribution as native JS","titles":["Quickstart","Install for existing project",null]},"319":{"href":"/solutions/wallets/universal-wallet/04-platforms#platforms","html":"</header>\n","isPage":true,"text":"\n","title":"Platforms","titles":[]},"320":{"href":"/solutions/wallets/universal-wallet/04-platforms#web-wallet","html":"\n<p>Sequence works beautifully on all modern Web Browsers! Try it at <a href=\"https://sequence.app\">https://sequence.app</a> from any computer, phone or tablet.</p>\n<p>See <a href=\"/solutions/wallets/universal-wallet/02-quickstart.mdx\">Build With Sequence</a> to get started.</p>\n","isPage":false,"text":"\nSequence works beautifully on all modern Web Browsers! Try it at https://sequence.app from any computer, phone or tablet.\nSee Build With Sequence to get started.\n","title":"Web Wallet","titles":["Platforms"]},"321":{"href":"/solutions/wallets/universal-wallet/04-platforms#mobile-wallet","html":"\n<p>Sequence works beautifully on your Mobile Web Browser! Try it at <a href=\"https://sequence.app\">https://sequence.app</a> from any phone or tablet.</p>\n<p>This means dapps which integrate the Sequence Wallet will automatically support users on all mobile devices,\nwhile using standard Ethereum web3 dapp-to-wallet communication. See <a href=\"/solutions/wallets/universal-wallet/02-quickstart.mdx\">Build With Sequence</a> to get started.</p>\n","isPage":false,"text":"\nSequence works beautifully on your Mobile Web Browser! Try it at https://sequence.app from any phone or tablet.\nThis means dapps which integrate the Sequence Wallet will automatically support users on all mobile devices,\nwhile using standard Ethereum web3 dapp-to-wallet communication. See Build With Sequence to get started.\n","title":"Mobile Wallet","titles":["Platforms"]},"322":{"href":"/solutions/wallets/universal-wallet/04-platforms#browser-extension-wallet","html":"\n<p>Sequence Chrome Extension: <a href=\"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en\">Install</a></p>\n<p><img src=\"/img/build/seq-chrome-store.png\" alt=\"Sequence Chrome Extension\"/></p>\n<p><img src=\"/img/build/seq-chrome-ext-uniswap.png\" alt=\"Sequence Chrome Extension\"/></p>","isPage":false,"text":"\nSequence Chrome Extension: Install\n\n","title":"Browser Extension Wallet","titles":["Platforms"]},"323":{"href":"/solutions/wallets/universal-wallet/05-fiat-on-ramps#fiat-on-ramps","html":"</header>\n<p>Sequence Wallet allows users to purchase cryptocurrencies directly with their credit card and debit card via on-ramp providers. Currently Sequence supports 6 on-ramp providers;</p>\n<ul>\n<li><a href=\"https://www.moonpay.com/\">Moonpay</a></li>\n<li><a href=\"https://ramp.network/\">Ramp</a></li>\n<li><a href=\"https://onmeta.in/\">UPI via Onmeta</a></li>\n<li><a href=\"https://www.sardine.ai/\">Sardine</a></li>\n<li><a href=\"https://paytrie.com/\">PayTrie</a></li>\n<li><a href=\"https://www.sendwyre.com/\">Wyre</a> (deprecated)</li>\n</ul>\n<p>Only providers that support the region the users are in will be displayed.</p>\n<p><img src=\"/img/fiat-providers.png\" alt=\"Sequence on-demand sign in\"/></p>\n<p>As a developer integrating the Sequence Wallet, you can choose which payment provider can be visible to users. You can also specify which token will be available to purchase via the on-ramp providers.</p>\n<p>To learn more on how to configure the on-ramp options, see <a href=\"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#wallet-login-and-connect-options\">Sequence Connect Options</a>.</p>","isPage":true,"text":"\nSequence Wallet allows users to purchase cryptocurrencies directly with their credit card and debit card via on-ramp providers. Currently Sequence supports 6 on-ramp providers;\n\nMoonpay\nRamp\nUPI via Onmeta\nSardine\nPayTrie\nWyre (deprecated)\n\nOnly providers that support the region the users are in will be displayed.\n\nAs a developer integrating the Sequence Wallet, you can choose which payment provider can be visible to users. You can also specify which token will be available to purchase via the on-ramp providers.\nTo learn more on how to configure the on-ramp options, see Sequence Connect Options.","title":"Fiat On-Ramps","titles":[]},"324":{"href":"/solutions/wallets/universal-wallet/06-key-management#key-management","html":"</header>\n<p>Each Sequence wallet can be controlled by multiple private keys, acting like a multisignature wallet. Users can either create a Sequence wallet using one of the supported social login options or create a wallet with a private key stored only on that device.</p>\n<p>The improved security compared to traditional blockchain wallet comes from the fact that multiple independent keys need to be compromised for a malicious actor to take control of a user’s wallet, instead of a single key. The philosophy is that the more independent private-keys the user adds to their wallet, the more secure their wallet becomes, even if each individual key is only moderately secure on their own.</p>\n","isPage":true,"text":"\nEach Sequence wallet can be controlled by multiple private keys, acting like a multisignature wallet. Users can either create a Sequence wallet using one of the supported social login options or create a wallet with a private key stored only on that device.\nThe improved security compared to traditional blockchain wallet comes from the fact that multiple independent keys need to be compromised for a malicious actor to take control of a user’s wallet, instead of a single key. The philosophy is that the more independent private-keys the user adds to their wallet, the more secure their wallet becomes, even if each individual key is only moderately secure on their own.\n","title":"Key Management","titles":[]},"325":{"href":"/solutions/wallets/universal-wallet/06-key-management#social-login-wallets","html":"\n<p>Sequence Wallet created with social logins are currently secured using three private keys: Session keys, a Guard key and a Torus key. The Session key and Torus key are both generated for the first time when a user creates their Sequence Wallet via social login or email authentication.\nAt least two of the three keys are needed to unlock an account. This means that if one of the three keys is lost or compromised, a user can use the two remaining keys to replace the lost/compromised key. For example, if a user lost their device containing their Session Key, they can unlock their Sequence Wallet account by email or social login for the Torus key combined with the Guard key. Once done, another session key is auto-generated and the user is back in their account with all 3 keys accessible again.</p>\n","isPage":false,"text":"\nSequence Wallet created with social logins are currently secured using three private keys: Session keys, a Guard key and a Torus key. The Session key and Torus key are both generated for the first time when a user creates their Sequence Wallet via social login or email authentication.\nAt least two of the three keys are needed to unlock an account. This means that if one of the three keys is lost or compromised, a user can use the two remaining keys to replace the lost/compromised key. For example, if a user lost their device containing their Session Key, they can unlock their Sequence Wallet account by email or social login for the Torus key combined with the Guard key. Once done, another session key is auto-generated and the user is back in their account with all 3 keys accessible again.\n","title":"Social Login Wallets","titles":["Key Management"]},"326":{"href":"/solutions/wallets/universal-wallet/06-key-management#session-keys","html":"\n<p>Session keys are stored in the browser&#x27;s <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\">IndexedDB</a>.\nUsers should be prudent in safeguarding their devices from unauthorized access since an attacker with access to their IndexedDB effectively has control of their session key.</p>\n","isPage":false,"text":"\nSession keys are stored in the browser&#x27;s IndexedDB.\nUsers should be prudent in safeguarding their devices from unauthorized access since an attacker with access to their IndexedDB effectively has control of their session key.\n","title":"Session Keys","titles":["Key Management","Social Login Wallets"]},"327":{"href":"/solutions/wallets/universal-wallet/06-key-management#guard-key","html":"\n<p>A Guard key is a key owned by Horizon. This key allows Horizon to help users that lost their Session key and can require additional information from the user in case of suspicious activity, if the user wants this additional protection. This key would be compromised if a malicious actor took control over Horizon servers hosting the Guard key.</p>\n","isPage":false,"text":"\nA Guard key is a key owned by Horizon. This key allows Horizon to help users that lost their Session key and can require additional information from the user in case of suspicious activity, if the user wants this additional protection. This key would be compromised if a malicious actor took control over Horizon servers hosting the Guard key.\n","title":"Guard Key","titles":["Key Management","Social Login Wallets"]},"328":{"href":"/solutions/wallets/universal-wallet/06-key-management#torus-key","html":"\n<p>A Torus key is a key generated by the <a href=\"https://tor.us/\">Torus network</a>, and is generated using a user’s email or social login credentials such as Google or AppleID. Torus uses threshold cryptography to ensure that only the user can access their private key, making these keys non-custodial. A Torus key would be compromised if a malicious actor had control over the social account or email a user used to generate their Torus key. All Torus keys could be compromised if the Torus network itself was compromised.</p>\n<p>:::info DEFAULTS + CUSTOMIZATION</p>\n<p>While this is the default setup for new Sequence Wallets, we intend to add the ability for users to add, remove and replace the keys controlling their wallet such that users can choose their preference in terms of security and user experience tradeoff. Even the Guard key will be able to be removed. Security tips and recommendations will be added to ensure users are well informed of the risks and how to protect themselves against them.</p>\n<p>:::</p>","isPage":false,"text":"\nA Torus key is a key generated by the Torus network, and is generated using a user’s email or social login credentials such as Google or AppleID. Torus uses threshold cryptography to ensure that only the user can access their private key, making these keys non-custodial. A Torus key would be compromised if a malicious actor had control over the social account or email a user used to generate their Torus key. All Torus keys could be compromised if the Torus network itself was compromised.\n:::info DEFAULTS + CUSTOMIZATION\nWhile this is the default setup for new Sequence Wallets, we intend to add the ability for users to add, remove and replace the keys controlling their wallet such that users can choose their preference in terms of security and user experience tradeoff. Even the Guard key will be able to be removed. Security tips and recommendations will be added to ensure users are well informed of the risks and how to protect themselves against them.\n:::","title":"Torus Key","titles":["Key Management","Social Login Wallets"]},"329":{"href":"/solutions/wallets/universal-wallet/07-sequence-kit#sequence-kit-seamlessly-integrate-web3-wallets-into-your-applications","html":"</header>\n<p>Sequence Kit 🧰 is the ultimate toolkit for effortlessly integrating web3 wallets into your applications, providing your users with a smooth and secure onboarding experience. With our robust tools built on the popular <a href=\"https://wagmi.sh/\">wagmi</a> library, unlock a realm of possibilities in the world of web3.</p>\n","isPage":true,"text":"\nSequence Kit 🧰 is the ultimate toolkit for effortlessly integrating web3 wallets into your applications, providing your users with a smooth and secure onboarding experience. With our robust tools built on the popular wagmi library, unlock a realm of possibilities in the world of web3.\n","title":"Sequence Kit: Seamlessly Integrate Web3 Wallets into Your Applications","titles":[]},"330":{"href":"/solutions/wallets/universal-wallet/07-sequence-kit#key-features","html":"\n<ul>\n<li>\n<p><strong>Universal Connections</strong>: Seamlessly connect via popular social logins such as Facebook, Google, Discord, and more! Your users will enjoy a smooth, secure onboarding process. 🔐🪪</p>\n</li>\n<li>\n<p><strong>Web3 Wallet Integration</strong>: Effortlessly integrate with leading web3 wallets like WalletConnect and MetaMask. Unleash the power of blockchain with just a few clicks! 🦊 ⛓️</p>\n</li>\n<li>\n<p><strong>Embedded Wallet Experience</strong>: Provide your users with a comprehensive embedded wallet, enabling them to manage their coins and collectibles all within your own application. 👛 🖼️ 🪙</p>\n</li>\n</ul>\n<p>Explore the potential of Sequence Kit by trying out our <a href=\"https://0xsequence.github.io/kit\">demo</a>!</p>\n<header>","isPage":false,"text":"\n\n\nUniversal Connections: Seamlessly connect via popular social logins such as Facebook, Google, Discord, and more! Your users will enjoy a smooth, secure onboarding process. 🔐🪪\n\n\nWeb3 Wallet Integration: Effortlessly integrate with leading web3 wallets like WalletConnect and MetaMask. Unleash the power of blockchain with just a few clicks! 🦊 ⛓️\n\n\nEmbedded Wallet Experience: Provide your users with a comprehensive embedded wallet, enabling them to manage their coins and collectibles all within your own application. 👛 🖼️ 🪙\n\n\nExplore the potential of Sequence Kit by trying out our demo!\n","title":"Key Features","titles":["Sequence Kit: Seamlessly Integrate Web3 Wallets into Your Applications"]},"331":{"href":"/solutions/wallets/universal-wallet/07-sequence-kit#next-steps","html":"</header>\n<p>Ready to integrate Sequence Kit into your application? Check out our <a href=\"#TODO\">Getting Started guide</a>. If you&#x27;re already familiar with Sequence Kit dive into the available <a href=\"#TODO\">configuration options</a> or take a look at the <a href=\"#TODO\">checkout</a>.</p>","isPage":false,"text":"\nReady to integrate Sequence Kit into your application? Check out our Getting Started guide. If you&#x27;re already familiar with Sequence Kit dive into the available configuration options or take a look at the checkout.","title":"Next Steps","titles":[]},"332":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#connect-wallet","html":"</header>\n<p>Sequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:</p>\n<ol>\n<li>\n<p><strong>On-demand Ethereum web wallet for new users</strong> via <a href=\"https://www.npmjs.com/package/0xsequence\">0xsequence</a> npm package + <a href=\"https://sequence.app\">https://sequence.app</a> -- this option allows\ndevelopers to offer users an on-demand web3 wallet. No user install required -- any browser will <em>just work</em>, and users\ncan onboard with a familiar Web2 experience. Think of it like <em>Paypal / Stripe but for web3</em>.</p>\n</li>\n<li>\n<p><strong>Surf all of web3</strong> via <a href=\"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en\">Sequence Wallet Chrome Extension</a> -- users\nwho have the Sequence Wallet Chrome Extension installed are able to access any Ethereum-compatible Dapp on the Web :) Just like how MetaMask works,\nbut of course with a bunch of the benefits of Sequence.</p>\n</li>\n<li>\n<p><strong>Mobile phone access</strong> via <a href=\"https://walletconnect.com/\">WalletConnect</a> support within Sequence Wallet -- users are able to communicate with their wallets remotely\nvia the awesome Wallet Connect protocol. This is an excellent option if using Sequence Wallet from your mobile phone and want to connect\nyour wallet to a desktop dapp.</p>\n</li>\n</ol>\n<p>Sequence Wallet is built on Web Browser (W3C) and Ethereum web3 standards -- and is available everywhere that a modern browser is able to run.\nWe&#x27;ve carefully designed the wallet for simple onboarding, while maintaining security for users, and allowing users to progressively\nincrease the level of their security through additional keys and measures.</p>\n<p>This means, that if you&#x27;ve developed a dapp to work with MetaMask, then Sequence will work too without any changes. If you&#x27;re\nusing web3.js or ethers.js, Sequence will just work too. This is the beauty of interoperability on web3 :)</p>\n","isPage":true,"text":"\nSequence is a very flexible wallet which allow users multiple ways to connect / access their wallet. This includes:\n\n\nOn-demand Ethereum web wallet for new users via 0xsequence npm package + https://sequence.app -- this option allows\ndevelopers to offer users an on-demand web3 wallet. No user install required -- any browser will just work, and users\ncan onboard with a familiar Web2 experience. Think of it like Paypal / Stripe but for web3.\n\n\nSurf all of web3 via Sequence Wallet Chrome Extension -- users\nwho have the Sequence Wallet Chrome Extension installed are able to access any Ethereum-compatible Dapp on the Web :) Just like how MetaMask works,\nbut of course with a bunch of the benefits of Sequence.\n\n\nMobile phone access via WalletConnect support within Sequence Wallet -- users are able to communicate with their wallets remotely\nvia the awesome Wallet Connect protocol. This is an excellent option if using Sequence Wallet from your mobile phone and want to connect\nyour wallet to a desktop dapp.\n\n\nSequence Wallet is built on Web Browser (W3C) and Ethereum web3 standards -- and is available everywhere that a modern browser is able to run.\nWe&#x27;ve carefully designed the wallet for simple onboarding, while maintaining security for users, and allowing users to progressively\nincrease the level of their security through additional keys and measures.\nThis means, that if you&#x27;ve developed a dapp to work with MetaMask, then Sequence will work too without any changes. If you&#x27;re\nusing web3.js or ethers.js, Sequence will just work too. This is the beauty of interoperability on web3 :)\n","title":"Connect Wallet","titles":[]},"333":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#connecting-your-dapp-with-0xsequence","html":"\n<p>:::info A delightful wallet without requiring your users to install anything <div></div>\nBy integrating <code>0xsequence</code>, users may access your dapp without having to install any special extensions,\nand the wallet also works on mobile browsers!\n:::</p>\n<p>Your dapp can connect to your user&#x27;s wallet by first instantiating the Wallet provider:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { sequence } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0xsequence&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> projectAccessKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;&lt;access_key&gt;&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// This assumes your dapp runs on Ethereum mainnet</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">initWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(projectAccessKey);</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// If your dapp runs on a different EVM-compatible blockchain, you can specify its name</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// const wallet = sequence.initWallet(projectAccessKey, { defaultNetwork: &#x27;polygon&#x27; });</span></span></code></pre>\n<p>Note that is possible to retrieve the above instance by using the <code>getWallet()</code> method:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { sequence } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;0xsequence&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span></code></pre>\n<p>Once you have the instance, you can connect to the wallet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> connectDetails</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  app: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Your Dapp name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  authorize: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">  // And pass settings if you would like to customize further</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  settings: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    theme: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;light&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    bannerUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://yoursite.com/banner-image.png&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 3:1 aspect ratio, 1200x400 works best</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    includedPaymentProviders: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;moonpay&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ramp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    defaultFundingCurrency: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;matic&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    lockFundingCurrencyToDefault: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">});</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;user accepted connect?&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, connectDetails.connected);</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &quot;users signed connect proof to valid their account address:&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  connectDetails.proof</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">);</span></span></code></pre>\n<p>You can pick/limit the available sign in options with <code>signInOptions</code>. Will be ignored if user is already signed in.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  app: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;Your Dapp name&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  settings: { signInOptions: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;google&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">] },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">});</span></span></code></pre>\n<p>After you connect, you can use <code>wallet.openWallet()</code> to open the wallet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">openWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span></code></pre>\n<p>You can also optionally pass a path, and use <code>openWithOptions</code> intent to pass settings when you open the wallet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> settings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> Settings</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  theme: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;dark&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  bannerUrl: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;https://yoursite.com/banner-image.png&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#6A737D;--shiki-dark:#768390\">// 3:1 aspect ratio, 1200x400 works best</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  includedPaymentProviders: [</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;moonpay&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;ramp&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">],</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  defaultFundingCurrency: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;eth&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  lockFundingCurrencyToDefault: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">false</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> intent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">:</span><span style=\"color:#6F42C1;--shiki-dark:#F69D50\"> OpenWalletIntent</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  type: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;openWithOptions&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  options: {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">    settings: settings,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">};</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">();</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> path</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;wallet/add-funds&quot;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">openWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(path, intent);</span></span></code></pre>\n<p>:::tip Check out some example Dapp source code\nFor a complete examples, see <a href=\"https://github.com/0xsequence/demo-dapp\">Demo-Dapp</a> and <a href=\"https://github.com/0xsequence/demo-dapp-web3modal\">Demo-Dapp-Web3Modal</a>.\n:::</p>\n<p>:::caution Avoid Browsers Blocking Sequence Popup\nMost browsers will block popups if they are called outside of user-triggered event handlers like <code>onclick</code>, or when it takes too long to process between the user action and the actual window</p>\n<p>Read more about browser popup-blocking <a href=\"https://javascript.info/popup-windows#popup-blocking\">here</a>.\n:::</p>\n<p><img src=\"/img/sign-in-fresh.png\" alt=\"Sequence on-demand sign in\"/></p>\n<p><img src=\"/img/sign-in-connect.png\" alt=\"Sequence on-demand sign in, connect\"/></p>\n","isPage":false,"text":"\n:::info A delightful wallet without requiring your users to install anything \nBy integrating 0xsequence, users may access your dapp without having to install any special extensions,\nand the wallet also works on mobile browsers!\n:::\nYour dapp can connect to your user&#x27;s wallet by first instantiating the Wallet provider:\nimport { sequence } from &quot;0xsequence&quot;;\n \nconst projectAccessKey = &#x27;&lt;access_key&gt;&#x27;\n \n// This assumes your dapp runs on Ethereum mainnet\nconst wallet = sequence.initWallet(projectAccessKey);\n \n// If your dapp runs on a different EVM-compatible blockchain, you can specify its name\n// const wallet = sequence.initWallet(projectAccessKey, { defaultNetwork: &#x27;polygon&#x27; });\nNote that is possible to retrieve the above instance by using the getWallet() method:\nimport { sequence } from &quot;0xsequence&quot;;\nconst wallet = sequence.getWallet();\nOnce you have the instance, you can connect to the wallet:\nconst connectDetails = await wallet.connect({\n  app: &quot;Your Dapp name&quot;,\n  authorize: true,\n  // And pass settings if you would like to customize further\n  settings: {\n    theme: &quot;light&quot;,\n    bannerUrl: &quot;https://yoursite.com/banner-image.png&quot;, // 3:1 aspect ratio, 1200x400 works best\n    includedPaymentProviders: [&quot;moonpay&quot;, &quot;ramp&quot;],\n    defaultFundingCurrency: &quot;matic&quot;,\n    lockFundingCurrencyToDefault: false,\n  },\n});\n \nconsole.log(&quot;user accepted connect?&quot;, connectDetails.connected);\nconsole.log(\n  &quot;users signed connect proof to valid their account address:&quot;,\n  connectDetails.proof\n);\nYou can pick/limit the available sign in options with signInOptions. Will be ignored if user is already signed in.\nconst wallet = sequence.getWallet();\n \nawait wallet.connect({\n  app: &quot;Your Dapp name&quot;,\n  settings: { signInOptions: [&quot;google&quot;] },\n});\nAfter you connect, you can use wallet.openWallet() to open the wallet:\nconst wallet = sequence.getWallet();\nwallet.openWallet();\nYou can also optionally pass a path, and use openWithOptions intent to pass settings when you open the wallet:\nconst settings: Settings = {\n  theme: &quot;dark&quot;,\n  bannerUrl: &quot;https://yoursite.com/banner-image.png&quot;, // 3:1 aspect ratio, 1200x400 works best\n  includedPaymentProviders: [&quot;moonpay&quot;, &quot;ramp&quot;],\n  defaultFundingCurrency: &quot;eth&quot;,\n  lockFundingCurrencyToDefault: false,\n};\n \nconst intent: OpenWalletIntent = {\n  type: &quot;openWithOptions&quot;,\n  options: {\n    settings: settings,\n  },\n};\n \nconst wallet = sequence.getWallet();\n \nconst path = &quot;wallet/add-funds&quot;;\nwallet.openWallet(path, intent);\n:::tip Check out some example Dapp source code\nFor a complete examples, see Demo-Dapp and Demo-Dapp-Web3Modal.\n:::\n:::caution Avoid Browsers Blocking Sequence Popup\nMost browsers will block popups if they are called outside of user-triggered event handlers like onclick, or when it takes too long to process between the user action and the actual window\nRead more about browser popup-blocking here.\n:::\n\n\n","title":"Connecting your dapp with 0xsequence","titles":["Connect Wallet"]},"334":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#wallet-login-and-connect-options","html":"\n<p>Dapps with direct sequence integration can specify a <code>ConnectOptions</code> object when running <code>wallet.connect()</code>.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span>const connectDetails = await wallet.connect(connectOptions)</span></span></code></pre>\n<p>The option parameters are described below.</p>\n","isPage":false,"text":"\nDapps with direct sequence integration can specify a ConnectOptions object when running wallet.connect().\nconst connectDetails = await wallet.connect(connectOptions)\nThe option parameters are described below.\n","title":"Wallet Login and Connect Options","titles":["Connect Wallet"]},"335":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#app","html":"\n<p>App name of the dapp which will be announced to user on connect screen.</p>\n<p>Example: <code>await wallet.connect({ app: &#x27;My defi app&#x27; })</code></p>\n","isPage":false,"text":"\nApp name of the dapp which will be announced to user on connect screen.\nExample: await wallet.connect({ app: &#x27;My defi app&#x27; })\n","title":"app","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"336":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#appprotocol","html":"\n<p>Custom protocol for auth redirect (unity/unreal).</p>\n","isPage":false,"text":"\nCustom protocol for auth redirect (unity/unreal).\n","title":"appProtocol","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"337":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#origin","html":"\n<p>Origin hint of the dapp&#x27;s host opening the wallet. This value will automatically be determined and verified for integrity, and can be omitted.</p>\n","isPage":false,"text":"\nOrigin hint of the dapp&#x27;s host opening the wallet. This value will automatically be determined and verified for integrity, and can be omitted.\n","title":"origin","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"338":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#expiry","html":"\n<p>Expiry number (in seconds) that is used for ETHAuth proof. Default is 1 week in seconds.</p>\n<p>Example: <code>await wallet.connect({ expiry: 36000 })</code></p>\n","isPage":false,"text":"\nExpiry number (in seconds) that is used for ETHAuth proof. Default is 1 week in seconds.\nExample: await wallet.connect({ expiry: 36000 })\n","title":"expiry","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"339":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#authorize","html":"\n<p><code>authorize</code> will perform an ETHAuth eip712 signing and return the proof to the dapp.</p>\n<p>Example: <code>await wallet.connect({ authorize: true })</code></p>\n","isPage":false,"text":"\nauthorize will perform an ETHAuth eip712 signing and return the proof to the dapp.\nExample: await wallet.connect({ authorize: true })\n","title":"authorize","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"340":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#authorizenonce","html":"\n<p><code>authorizeNonce</code> is an optional number to be passed as ETHAuth&#x27;s nonce claim for replay protection.</p>\n<p>Example: <code>await wallet.connect({ authorizeNonce: 123 })</code></p>\n","isPage":false,"text":"\nauthorizeNonce is an optional number to be passed as ETHAuth&#x27;s nonce claim for replay protection.\nExample: await wallet.connect({ authorizeNonce: 123 })\n","title":"authorizeNonce","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"341":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#refresh","html":"\n<p><code>refresh</code> flag will force a full re-connect (ie. disconnect then connect again).</p>\n<p>Example: <code>await wallet.connect({ refresh: true })</code></p>\n","isPage":false,"text":"\nrefresh flag will force a full re-connect (ie. disconnect then connect again).\nExample: await wallet.connect({ refresh: true })\n","title":"refresh","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"342":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#keepwalletopened","html":"\n<p><code>keepWalletOpened</code> will keep the wallet window open after connecting. The default is to automatically close the wallet after connecting.</p>\n<p>Example: <code>await wallet.connect({ keepWalletOpened: true })</code></p>\n","isPage":false,"text":"\nkeepWalletOpened will keep the wallet window open after connecting. The default is to automatically close the wallet after connecting.\nExample: await wallet.connect({ keepWalletOpened: true })\n","title":"keepWalletOpened","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"343":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#askforemail","html":"\n<p><code>askForEmail</code> will ask user whether they want to share the email they use to sign in to wallet while connecting, and will be returned in <code>connectDetails</code>.</p>\n<p>Example: <code>await wallet.connect({ askForEmail: true })</code></p>\n","isPage":false,"text":"\naskForEmail will ask user whether they want to share the email they use to sign in to wallet while connecting, and will be returned in connectDetails.\nExample: await wallet.connect({ askForEmail: true })\n","title":"askForEmail","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"344":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingstheme","html":"\n<p>Name of one of the available theme provided by sequence the sequence wallet will be rendered with.</p>\n<p>Example: <code>await wallet.connect({ settings: {theme: &quot;light&quot;}}</code></p>\n","isPage":false,"text":"\nName of one of the available theme provided by sequence the sequence wallet will be rendered with.\nExample: await wallet.connect({ settings: {theme: &quot;light&quot;}}\n","title":"settings.theme","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"345":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingsbannerurl","html":"\n<p>URL of a banner image users will see when connecting or logging into your dapp. The banner image should follow a 3:1 aspect ration where 1200x400 works best.</p>\n<p>Example: <code>await wallet.connect({ settings: {bannerUrl: &quot;https://yoursite.com/banner-image.png&quot;}}</code></p>\n","isPage":false,"text":"\nURL of a banner image users will see when connecting or logging into your dapp. The banner image should follow a 3:1 aspect ration where 1200x400 works best.\nExample: await wallet.connect({ settings: {bannerUrl: &quot;https://yoursite.com/banner-image.png&quot;}}\n","title":"settings.bannerUrl","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"346":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingssigninwith","html":"\n<p>Specify <code>signInWith</code> with a supported auth provider to automatically sign in the user with that provider only. Will be ignored if user is already signed in.</p>\n<p>Example: <code>await wallet.connect({ settings: {signInWith: &quot;google&quot;}}</code></p>\n<p>Supported Providers: &quot;google&quot;, &quot;discord&quot;, &quot;twitch&quot;, &quot;apple&quot;, &quot;facebook&quot;</p>\n","isPage":false,"text":"\nSpecify signInWith with a supported auth provider to automatically sign in the user with that provider only. Will be ignored if user is already signed in.\nExample: await wallet.connect({ settings: {signInWith: &quot;google&quot;}}\nSupported Providers: &quot;google&quot;, &quot;discord&quot;, &quot;twitch&quot;, &quot;apple&quot;, &quot;facebook&quot;\n","title":"settings.signInWith","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"347":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingssigninwithemail","html":"\n<p>Specify signInWithEmail with an email address to allow user automatically sign in with the email option. Will be ignored if user is already signed in.</p>\n<p>Example: <code>await wallet.connect({ settings: {signInWithEmail: &quot;user@email.com&quot;}}</code></p>\n","isPage":false,"text":"\nSpecify signInWithEmail with an email address to allow user automatically sign in with the email option. Will be ignored if user is already signed in.\nExample: await wallet.connect({ settings: {signInWithEmail: &quot;user@email.com&quot;}}\n","title":"settings.signInWithEmail","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"348":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingssigninoptions","html":"\n<p>Specify signInOptions to pick/limit the available sign in options. Will be ignored if user is already signed in.</p>\n<p>Example: <code>await wallet.connect({ settings: {signInOptions: [&quot;email&quot;, &quot;google&quot;, &quot;apple&quot;]}}</code></p>\n","isPage":false,"text":"\nSpecify signInOptions to pick/limit the available sign in options. Will be ignored if user is already signed in.\nExample: await wallet.connect({ settings: {signInOptions: [&quot;email&quot;, &quot;google&quot;, &quot;apple&quot;]}}\n","title":"settings.signInOptions","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"349":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingsincludedpaymentproviders","html":"\n<p>List of payment providers users will be able to access. By default, users can access all payment providers integrated in Sequence.</p>\n<p>Example: <code>await wallet.connect({ settings: {includedPaymentProviders: [&quot;moonpay&quot;, &quot;ramp&quot;]}}</code></p>\n","isPage":false,"text":"\nList of payment providers users will be able to access. By default, users can access all payment providers integrated in Sequence.\nExample: await wallet.connect({ settings: {includedPaymentProviders: [&quot;moonpay&quot;, &quot;ramp&quot;]}}\n","title":"settings.includedPaymentProviders","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"350":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingsdefaultfundingcurrency","html":"\n<p>The tag of the default currency to show when users open the payment provider page. The currency has to be supported by the payment providers integrated in sequence.</p>\n<p>Example: <code>await wallet.connect({ settings: {defaultFundingCurrency: &quot;usdc&quot;}}</code></p>\n","isPage":false,"text":"\nThe tag of the default currency to show when users open the payment provider page. The currency has to be supported by the payment providers integrated in sequence.\nExample: await wallet.connect({ settings: {defaultFundingCurrency: &quot;usdc&quot;}}\n","title":"settings.defaultFundingCurrency","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"351":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingsdefaultpurchaseamount","html":"\n<p>Use to specify a default purchase amount, as an integer, for prefilling the funding amount. If not specified, the default is 100.</p>\n<p>Example: <code>await wallet.connect({ settings: {defaultPurchaseAmount: 200}}</code></p>\n","isPage":false,"text":"\nUse to specify a default purchase amount, as an integer, for prefilling the funding amount. If not specified, the default is 100.\nExample: await wallet.connect({ settings: {defaultPurchaseAmount: 200}}\n","title":"settings.defaultPurchaseAmount","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"352":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#settingslockfundingcurrencytodefault","html":"\n<p>Whether to only allow users to purchase the default currency specified by the <code>defaultFundingCurrency</code> option. If set to false, users will also be able to purchase other tokens. locking the default funding currency can be useful to prevent users from purchasing the wrong currency or the currency on the wrong chain.</p>\n<p>Example: <code>await wallet.connect({ settings: {defaultFundingCurrency: true}}</code></p>\n","isPage":false,"text":"\nWhether to only allow users to purchase the default currency specified by the defaultFundingCurrency option. If set to false, users will also be able to purchase other tokens. locking the default funding currency can be useful to prevent users from purchasing the wrong currency or the currency on the wrong chain.\nExample: await wallet.connect({ settings: {defaultFundingCurrency: true}}\n","title":"settings.lockFundingCurrencyToDefault","titles":["Connect Wallet","Wallet Login and Connect Options",null]},"353":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#connecting-your-dapp-with-web3js-or-ethersjs","html":"\n<p>For a full example of a dapp which supports Sequence (on-demand + chrome extension), Metamask, and WalletConnect\nplease see the <a href=\"https://github.com/0xsequence/demo-dapp-web3modal\">Demo-Dapp-Web3Modal repo</a>.</p>\n<p><img src=\"/img/web3modal.png\" alt=\"Sequence Web3Modal Integration\"/></p>\n","isPage":false,"text":"\nFor a full example of a dapp which supports Sequence (on-demand + chrome extension), Metamask, and WalletConnect\nplease see the Demo-Dapp-Web3Modal repo.\n\n","title":"Connecting your dapp with web3.js or ethers.js","titles":["Connect Wallet"]},"354":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#connecting-to-any-ethereum-dapp-with-the-sequence-wallet-chrome-extension","html":"\n<p>Sequence Chrome Extension: <a href=\"https://chrome.google.com/webstore/detail/sequence-wallet/ocmccklecaalljlflmclidjeclpcpdim?hl=en\">Install</a></p>\n<p><img src=\"/img/build/seq-chrome-store.png\" alt=\"Sequence Chrome Extension\"/></p>\n","isPage":false,"text":"\nSequence Chrome Extension: Install\n\n","title":"Connecting to any Ethereum dapp with the Sequence Wallet Chrome Extension","titles":["Connect Wallet"]},"355":{"href":"/solutions/wallets/universal-wallet/03-guides/01-connect-wallet#connecting-via-walletconnect","html":"\n<p>Sequence already supports connecting to dapps via <a href=\"https://walletconnect.com\">WalletConnect</a>.\nIf your dapp already supports WalletConnect, and you don&#x27;t need Sequence-specific functionality, nothing more needs to be done.\nFrom the user&#x27;s perspective, the WalletConnect flow behaves as follows.</p>\n<p>Taking <a href=\"https://app.uniswap.org\">Uniswap</a> as an example, the user is prompted to connect their wallet using one of multiple possible protocols.</p>\n<img src=\"/img/walletconnect/connect-wallet.png\"/>\n<p>The user selects the WalletConnect option.</p>\n<img src=\"/img/walletconnect/select-walletconnect.png\"/>\n<p>A QR code is displayed, which can be scanned by Sequence.\nAlternatively, the user can also choose to copy the connection details via their OS clipboard.</p>\n<img src=\"/img/walletconnect/qr-code.png\"/>\n<p>Back in the Sequence interface, the user chooses &quot;Scan&quot;.</p>\n<img src=\"/img/walletconnect/scan-qr-code.png\"/>\n<p>The QR code from the dapp is scanned.\nAlternatively, the code is pasted from the OS clipboard if the user chose that previously.</p>\n<img src=\"/img/walletconnect/scan.png\"/>\n<p>The user confirms the connection request.</p>\n<img src=\"/img/walletconnect/confirm.png\"/>\n<p>The connection succeeded, and the dapp is updated to reflect that.</p>\n<img src=\"/img/walletconnect/success.png\"/>\n<p>While connected, the dapp is able to make signing requests to Sequence.\nSequence will always prompt for confirmation from the user for any activity initiated by the dapp.</p>\n<img src=\"/img/walletconnect/activity.png\"/>\n<p>Once the user has finished using the dapp, they can disconnect the wallet via the session menu.</p>\n<img src=\"/img/walletconnect/disconnect.png\"/>","isPage":false,"text":"\nSequence already supports connecting to dapps via WalletConnect.\nIf your dapp already supports WalletConnect, and you don&#x27;t need Sequence-specific functionality, nothing more needs to be done.\nFrom the user&#x27;s perspective, the WalletConnect flow behaves as follows.\nTaking Uniswap as an example, the user is prompted to connect their wallet using one of multiple possible protocols.\n\nThe user selects the WalletConnect option.\n\nA QR code is displayed, which can be scanned by Sequence.\nAlternatively, the user can also choose to copy the connection details via their OS clipboard.\n\nBack in the Sequence interface, the user chooses &quot;Scan&quot;.\n\nThe QR code from the dapp is scanned.\nAlternatively, the code is pasted from the OS clipboard if the user chose that previously.\n\nThe user confirms the connection request.\n\nThe connection succeeded, and the dapp is updated to reflect that.\n\nWhile connected, the dapp is able to make signing requests to Sequence.\nSequence will always prompt for confirmation from the user for any activity initiated by the dapp.\n\nOnce the user has finished using the dapp, they can disconnect the wallet via the session menu.\n","title":"Connecting via WalletConnect","titles":["Connect Wallet"]},"356":{"href":"/solutions/wallets/universal-wallet/03-guides/02-auth-address#authenticate-users-with-message-signature","html":"</header>\n","isPage":true,"text":"\n","title":"Authenticate Users with Message Signature","titles":[]},"357":{"href":"/solutions/wallets/universal-wallet/03-guides/02-auth-address#ask-for-the-wallet-address","html":"\n<p>To get the user&#x27;s Sequence wallet address:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(address)</span></span></code></pre>\n","isPage":false,"text":"\nTo get the user&#x27;s Sequence wallet address:\nconst wallet = sequence.getWallet()\nconst address = wallet.getAddress()\nconsole.log(address)\n","title":"Ask for the wallet address","titles":["Authenticate Users with Message Signature"]},"358":{"href":"/solutions/wallets/universal-wallet/03-guides/02-auth-address#authenticate-wallet","html":"\n<p>In many cases, you&#x27;ll want your users to connect and then verify they do control this wallet address. Applications typically do this by asking the user\nto sign a message with their wallet, and then verify the signature from the user to ensure its integrity.</p>\n<p>As this is such a common workflow, Sequence can automatically authenticate the account address at the same time\nwhile the user is prompt to connect their wallet to your dapp. This allows the user experience to be simpler and\nmore seamless.</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { sequence } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;0xsequence&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sequence.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getWallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> connectDetails</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">({</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  app: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Your Dapp name&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  authorize: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">true</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> // &lt;---&lt;&lt;&lt; this will automatically sign+verify a EIP712 message when user clicks &quot;Connect&quot;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">})</span></span></code></pre>\n<p>It will look like this to your users:</p>\n<img alt=\"Sequence on-demand sign in, connect\" src=\"/img/authorize_connect.png\" width=\"400\"/>\n<p>In the above example, we pass <code>authorize: true</code> to the <code>connect()</code> function, which will automatically have the user\nsign a <strong>EIP712 signed message</strong> to prove their identity. This allows you to then easily authenticate the connected\nwallet address with absolute certainty.</p>\n<p>You can find the signed message proof returned in <code>connectDetails.proof</code>, which is an EIP712 signed object using\na simple convention from <a href=\"https://github.com/0xsequence/ethauth.js\">ethauth</a>. NOTE: EIP712 allows you to use an actual object for\nsigning instead of just a plain-text string.</p>\n","isPage":false,"text":"\nIn many cases, you&#x27;ll want your users to connect and then verify they do control this wallet address. Applications typically do this by asking the user\nto sign a message with their wallet, and then verify the signature from the user to ensure its integrity.\nAs this is such a common workflow, Sequence can automatically authenticate the account address at the same time\nwhile the user is prompt to connect their wallet to your dapp. This allows the user experience to be simpler and\nmore seamless.\nimport { sequence } from &#x27;0xsequence&#x27;\n \nconst wallet = sequence.getWallet()\n \nconst connectDetails = await wallet.connect({\n  app: &#x27;Your Dapp name&#x27;,\n  authorize: true // &lt;---&lt;&lt;&lt; this will automatically sign+verify a EIP712 message when user clicks &quot;Connect&quot;\n})\nIt will look like this to your users:\n\nIn the above example, we pass authorize: true to the connect() function, which will automatically have the user\nsign a EIP712 signed message to prove their identity. This allows you to then easily authenticate the connected\nwallet address with absolute certainty.\nYou can find the signed message proof returned in connectDetails.proof, which is an EIP712 signed object using\na simple convention from ethauth. NOTE: EIP712 allows you to use an actual object for\nsigning instead of just a plain-text string.\n","title":"Authenticate wallet","titles":["Authenticate Users with Message Signature"]},"359":{"href":"/solutions/wallets/universal-wallet/03-guides/02-auth-address#authenticate-wallet-server-side","html":"\n<p>The above example demonstrates how to connect and verify the user&#x27;s identity in your dapp on the client-side,\nbut if you&#x27;d like to authenticate the Sequence authorization proof on your server, then you can do so with the following snippet:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { ValidateSequenceWalletProof } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/auth&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { commons, v2 } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/core&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { ETHAuth } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/ethauth&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { trackers } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/sessions&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> *</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> as</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;ethers&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// ...</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> rpcUrl</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;https://polygon-mainnet.infura.io/v3/&lt;your infura key here&gt;&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> provider</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.providers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">JsonRpcProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rpcUrl)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// create an EIP-6492-aware ETHAuth proof validator</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> validator</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> ValidateSequenceWalletProof</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  () </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=&gt;</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> commons.reader.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">OnChainReader</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(provider),</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> trackers.remote.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">RemoteConfigTracker</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;https://sessions.sequence.app&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">),</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  v2.DeployedWalletContext</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> ethauth</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> ETHAuth</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(validator)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethauth.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">configJsonRpcProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(rpcUrl)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">try</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">  const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> proof</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethAuth.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">decodeProof</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(connectDetails.proof.proofString)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`proof for address ${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">proof</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">.</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">address</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">} is valid`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">catch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (err) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">`invalid proof -- do not trust address: ${</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">err</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">}`</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p>See the <a href=\"https://github.com/0xsequence/go-sequence\">Go Sequence SDK</a> on using Sequence in your Go applications.</p>\n<p>If your server is written in a language other than Javascript/Typescript or Go, all you have to do is validate\nthe signature with <a href=\"https://eips.ethereum.org/EIPS/eip-1271\">EIP1271, the standard method for validating signed messages for a smart wallet</a>.</p>\n<p>As always, if you have any questions or require help, reach out to us on <a href=\"https://discord.gg/sequence\">Discord</a>.</p>","isPage":false,"text":"\nThe above example demonstrates how to connect and verify the user&#x27;s identity in your dapp on the client-side,\nbut if you&#x27;d like to authenticate the Sequence authorization proof on your server, then you can do so with the following snippet:\nimport { ValidateSequenceWalletProof } from &#x27;@0xsequence/auth&#x27;\nimport { commons, v2 } from &#x27;@0xsequence/core&#x27;\nimport { ETHAuth } from &#x27;@0xsequence/ethauth&#x27;\nimport { trackers } from &#x27;@0xsequence/sessions&#x27;\nimport * as ethers from &#x27;ethers&#x27;\n \n// ...\n \nconst rpcUrl = &#x27;https://polygon-mainnet.infura.io/v3/&lt;your infura key here&gt;&#x27;\nconst provider = new ethers.providers.JsonRpcProvider(rpcUrl)\n \n// create an EIP-6492-aware ETHAuth proof validator\nconst validator = ValidateSequenceWalletProof(\n  () =&gt; new commons.reader.OnChainReader(provider),\n  new trackers.remote.RemoteConfigTracker(&#x27;https://sessions.sequence.app&#x27;),\n  v2.DeployedWalletContext\n)\nconst ethauth = new ETHAuth(validator)\nawait ethauth.configJsonRpcProvider(rpcUrl)\n \ntry {\n  const proof = await ethAuth.decodeProof(connectDetails.proof.proofString)\n  console.log(`proof for address ${proof.address} is valid`)\n} catch (err) {\n  console.log(`invalid proof -- do not trust address: ${err}`)\n}\nSee the Go Sequence SDK on using Sequence in your Go applications.\nIf your server is written in a language other than Javascript/Typescript or Go, all you have to do is validate\nthe signature with EIP1271, the standard method for validating signed messages for a smart wallet.\nAs always, if you have any questions or require help, reach out to us on Discord.","title":"Authenticate wallet server-side","titles":["Authenticate Users with Message Signature"]},"360":{"href":"/solutions/wallets/universal-wallet/03-guides/03-sign-message#todo---replace-with-code-groups-from-vocs","html":"</header>","isPage":true,"text":"","title":"TODO - Replace with Code Groups from Vocs","titles":[]},"361":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#no-wallet-confirmation-signatures","html":"</header>\n<p>It is possible to build an application where users sign messages without requiring a confirmation in their Sequence wallet every time. This is possible using <em>session keys</em>, or ephemeral keys.</p>\n<header>","isPage":true,"text":"\nIt is possible to build an application where users sign messages without requiring a confirmation in their Sequence wallet every time. This is possible using session keys, or ephemeral keys.\n","title":"No-Wallet-Confirmation Signatures","titles":[]},"362":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#session-keys","html":"</header>\n<p>Session keys are ephemeral private keys that can be generated and stored client-side, typically in a user&#x27;s local storage. They provide a convenient and secure way for users to authorize specific actions in a decentralized application without requiring them to confirm each action through their primary wallet.</p>\n<p>By signing a message with their primary wallet (e.g., Sequence Wallet), users can authorize a session key to act on their behalf for a limited time or scope. Applications can then interpret signed messages from the session key as if they were coming directly from the user&#x27;s wallet, streamlining the user experience.</p>\n<p>Session keys are particularly useful for applications that require frequent user interactions, as they help reduce the number of wallet confirmations needed, while still maintaining a secure and verifiable authentication process.</p>\n<header>","isPage":false,"text":"\nSession keys are ephemeral private keys that can be generated and stored client-side, typically in a user&#x27;s local storage. They provide a convenient and secure way for users to authorize specific actions in a decentralized application without requiring them to confirm each action through their primary wallet.\nBy signing a message with their primary wallet (e.g., Sequence Wallet), users can authorize a session key to act on their behalf for a limited time or scope. Applications can then interpret signed messages from the session key as if they were coming directly from the user&#x27;s wallet, streamlining the user experience.\nSession keys are particularly useful for applications that require frequent user interactions, as they help reduce the number of wallet confirmations needed, while still maintaining a secure and verifiable authentication process.\n","title":"Session Keys","titles":[]},"363":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#using-session-keys-with-sequence","html":"</header>\n","isPage":false,"text":"\n","title":"Using Session keys with Sequence","titles":[]},"364":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#1-initialize-sequence-wallet-and-connect","html":"\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { Wallet } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;@0xsequence/wallet&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">import</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> { ethers } </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">from</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;ethers&#x27;</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> wallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\"> Wallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">connect</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> userAddress</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nimport { Wallet } from &#x27;@0xsequence/wallet&#x27;\nimport { ethers } from &#x27;ethers&#x27;\n \nconst wallet = new Wallet()\nawait wallet.connect()\n \nconst signer = wallet.getSigner()\nconst userAddress = signer.getAddress()\n","title":"1. Initialize Sequence Wallet and Connect","titles":["Using Session keys with Sequence",null]},"365":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#2-generate-a-session-key","html":"\n<p>Create a new ephemeral private key, store it in local storage, and derive the associated address:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessionPrivateKey</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">randomBytes</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">32</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">localStorage.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">setItem</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;sessionPrivateKey&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">hexlify</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionPrivateKey))</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessionWallet</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Wallet</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(sessionPrivateKey)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessionAddress</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sessionWallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span></code></pre>\n","isPage":false,"text":"\nCreate a new ephemeral private key, store it in local storage, and derive the associated address:\nconst sessionPrivateKey = ethers.utils.randomBytes(32)\nlocalStorage.setItem(&#x27;sessionPrivateKey&#x27;, ethers.utils.hexlify(sessionPrivateKey))\nconst sessionWallet = new ethers.Wallet(sessionPrivateKey)\nconst sessionAddress = await sessionWallet.getAddress()\n","title":"2. Generate a Session Key","titles":["Using Session keys with Sequence",null]},"366":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#3-sign-authorization-message","html":"\n<p>Sign a message with the user&#x27;s Sequence Wallet to authorize the session key:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> authorizationMessage</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> `Authorize this device to play this game.`</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signature</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(authorizationMessage)</span></span></code></pre>\n","isPage":false,"text":"\nSign a message with the user&#x27;s Sequence Wallet to authorize the session key:\nconst authorizationMessage = `Authorize this device to play this game.`\nconst signature = await signer.signMessage(authorizationMessage)\n","title":"3. Sign Authorization Message","titles":["Using Session keys with Sequence",null]},"367":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#4-verify-authorization-signature","html":"\n<p>Verify the signature on the server or client side using Sequence utility functions:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> provider</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getProvider</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> chainId</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getChainId</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> isValid</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">isValidMessageSignature</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  userAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  authorizationMessage,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  signature,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  chainId</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (isValid) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Session key authorized&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Session key not authorized&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n","isPage":false,"text":"\nVerify the signature on the server or client side using Sequence utility functions:\nconst provider = wallet.getProvider()\nconst chainId = await wallet.getChainId()\n \nconst isValid = await wallet.utils.isValidMessageSignature(\n  userAddress,\n  authorizationMessage,\n  signature,\n  chainId\n)\n \nif (isValid) {\n  console.log(&#x27;Session key authorized&#x27;)\n} else {\n  console.log(&#x27;Session key not authorized&#x27;)\n}\n","title":"4. Verify Authorization Signature","titles":["Using Session keys with Sequence",null]},"368":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#5-sign-message-with-session-key","html":"\n<p>Use the session key to sign a message client-side without user interaction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> message</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &#x27;Perform action without wallet confirmation&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> sessionSignature</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sessionWallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">signMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message)</span></span></code></pre>\n","isPage":false,"text":"\nUse the session key to sign a message client-side without user interaction:\nconst message = &#x27;Perform action without wallet confirmation&#x27;\nconst sessionSignature = await sessionWallet.signMessage(message)\n","title":"5. Sign Message with Session Key","titles":["Using Session keys with Sequence",null]},"369":{"href":"/solutions/wallets/universal-wallet/03-guides/04-session-keys#6-verify-session-signature","html":"\n<p>Verify the session signature on the server or client side:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> recoveredSessionAddress</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">verifyMessage</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(message, sessionSignature)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">if</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> (recoveredSessionAddress </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">===</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> sessionAddress) {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Session signature valid&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">} </span><span style=\"color:#D73A49;--shiki-dark:#F47067\">else</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;Session signature invalid&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span></code></pre>\n<p><strong>Note</strong>: You should retrieve the session key stored in local storage upon loading the application and only create a new session key if none can be found.</p>","isPage":false,"text":"\nVerify the session signature on the server or client side:\nconst recoveredSessionAddress = ethers.utils.verifyMessage(message, sessionSignature)\nif (recoveredSessionAddress === sessionAddress) {\n  console.log(&#x27;Session signature valid&#x27;)\n} else {\n  console.log(&#x27;Session signature invalid&#x27;)\n}\nNote: You should retrieve the session key stored in local storage upon loading the application and only create a new session key if none can be found.","title":"6. Verify Session Signature","titles":["Using Session keys with Sequence",null]},"370":{"href":"/solutions/wallets/universal-wallet/03-guides/05-send-transaction#sending-transactions","html":"</header>\n<p>Signing a transaction will only retrieve the signed payload.\nIf you want the wallet to actually dispatch the transaction to the network as well, that requires only a small modification to the previous example (note the change from <code>signTransactions</code> to <code>sendTransaction</code>):</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: recipientAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000000000000000000</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> txnResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(transaction)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txnResponse)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>","isPage":true,"text":"\nSigning a transaction will only retrieve the signed payload.\nIf you want the wallet to actually dispatch the transaction to the network as well, that requires only a small modification to the previous example (note the change from signTransactions to sendTransaction):\nconst transaction = {\n  to: recipientAddress,\n  value: 1000000000000000000\n}\n \nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransaction(transaction)\nconsole.log(txnResponse)\n ","title":"Sending Transactions","titles":[]},"371":{"href":"/solutions/wallets/universal-wallet/03-guides/06-send-erc20#sending-erc-20-tokens","html":"</header>\n<p>You can ask the wallet to send a single ERC-20 token transfer:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc20Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function transfer(address _to, uint256 _value)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode an ERC-20 token transfer to recipient of the specified amount</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc20Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;transfer&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [recipientAddress, amount]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: daiContractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> txnResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(transaction)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txnResponse)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>\n<p>With batching functionality, you can send multiple token transfers in a single native transaction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc20Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function transfer(address _to, uint256 _value)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode two different ERC-20 token transfers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc20Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;transfer&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [recipient1Address, amount1]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc20Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;transfer&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [recipient2Address, amount2]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: daiContractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data: data1</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: daiContractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data: data2</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send a multiple transactions as a single bundle which is executed as one transaction on chain.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> txnResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([transaction1, transaction2])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txnResponse)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>","isPage":true,"text":"\nYou can ask the wallet to send a single ERC-20 token transfer:\nconst erc20Interface = new ethers.utils.Interface([\n  &#x27;function transfer(address _to, uint256 _value)&#x27;\n])\n \n// Encode an ERC-20 token transfer to recipient of the specified amount\nconst data = erc20Interface.encodeFunctionData(\n  &#x27;transfer&#x27;, [recipientAddress, amount]\n)\n \nconst transaction = {\n  to: daiContractAddress,\n  data\n}\n \nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransaction(transaction)\nconsole.log(txnResponse)\n \nWith batching functionality, you can send multiple token transfers in a single native transaction:\nconst erc20Interface = new ethers.utils.Interface([\n  &#x27;function transfer(address _to, uint256 _value)&#x27;\n])\n \n// Encode two different ERC-20 token transfers\nconst data1 = erc20Interface.encodeFunctionData(\n  &#x27;transfer&#x27;, [recipient1Address, amount1]\n)\nconst data2 = erc20Interface.encodeFunctionData(\n  &#x27;transfer&#x27;, [recipient2Address, amount2]\n)\n \nconst transaction1 = {\n  to: daiContractAddress,\n  data: data1\n}\n \nconst transaction2 = {\n  to: daiContractAddress,\n  data: data2\n}\n \n// Send a multiple transactions as a single bundle which is executed as one transaction on chain.\nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransaction([transaction1, transaction2])\nconsole.log(txnResponse)\n ","title":"Sending ERC-20 Tokens","titles":[]},"372":{"href":"/solutions/wallets/universal-wallet/03-guides/07-send-erc721#sending-erc-721-nft-tokens","html":"</header>\n<p>Sending an ERC-721 NFT is similar to sending an ERC-20 token.\nThe only notable difference is in the contract standard itself:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc721Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function safeTransferFrom(address _from, address _to, uint256 _tokenId)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode the transfer of the NFT tokenId to recipient</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc721Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipientAddress, tokenId]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: erc721TokenAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> txnResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(transaction)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txnResponse)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>\n<p>With batching functionality, you can send multiple token transfers in a single native transaction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc721Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function safeTransferFrom(address _from, address _to, uint256 _tokenId)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode two different ERC-721 token transfers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc721Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipient1Address, amount1]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc721Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipient2Address, amount2]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: erc721ContractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data: data1</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: erc721ContractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data: data2</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send a multiple transactions as a single bundle which is executed as one transaction on chain.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> txnResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransactionBatch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([transaction1, transaction2])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txnResponse)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>","isPage":true,"text":"\nSending an ERC-721 NFT is similar to sending an ERC-20 token.\nThe only notable difference is in the contract standard itself:\nconst erc721Interface = new ethers.utils.Interface([\n  &#x27;function safeTransferFrom(address _from, address _to, uint256 _tokenId)&#x27;\n])\n \n// Encode the transfer of the NFT tokenId to recipient\nconst address = await wallet.getAddress()\nconst data = erc721Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipientAddress, tokenId]\n)\n \nconst transaction = {\n  to: erc721TokenAddress,\n  data\n}\n \nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransaction(transaction)\nconsole.log(txnResponse)\n \nWith batching functionality, you can send multiple token transfers in a single native transaction:\nconst erc721Interface = new ethers.utils.Interface([\n  &#x27;function safeTransferFrom(address _from, address _to, uint256 _tokenId)&#x27;\n])\n \n// Encode two different ERC-721 token transfers\nconst data1 = erc721Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipient1Address, amount1]\n)\nconst data2 = erc721Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipient2Address, amount2]\n)\n \nconst transaction1 = {\n  to: erc721ContractAddress,\n  data: data1\n}\n \nconst transaction2 = {\n  to: erc721ContractAddress,\n  data: data2\n}\n \n// Send a multiple transactions as a single bundle which is executed as one transaction on chain.\nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransactionBatch([transaction1, transaction2])\nconsole.log(txnResponse)\n ","title":"Sending ERC-721 (NFT) Tokens","titles":[]},"373":{"href":"/solutions/wallets/universal-wallet/03-guides/08-send-erc1155#sending-erc-1155-collectible-tokens","html":"</header>\n<p>Sending an ERC-1155 collectible is similar to sending an ERC-20 token.\nThe only notable difference is in the contract standard itself:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc1155Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode the transfer of the collectible to recipient</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> address</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getAddress</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc1155Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipientAddress, tokenId, amount, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: erc1155TokenAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> txnResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(transaction)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txnResponse)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>\n<p>With batching functionality, you can send multiple token transfers in a single native transaction:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc1155Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Encode two different ERC-1155 token transfers</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc1155Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipient1Address, token1Id, amount1, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> data2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc1155Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipient2Address, token2Id, amount2, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: erc1155ContractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data: data1</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: erc1155ContractAddress,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  data: data2</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\">// Send a multiple transactions as a single bundle which is executed as one transaction on chain.</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> txnResponse</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransactionBatch</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([transaction1, transaction2])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(txnResponse)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span></code></pre>","isPage":true,"text":"\nSending an ERC-1155 collectible is similar to sending an ERC-20 token.\nThe only notable difference is in the contract standard itself:\nconst erc1155Interface = new ethers.utils.Interface([\n  &#x27;function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data)&#x27;\n])\n \n// Encode the transfer of the collectible to recipient\nconst address = await wallet.getAddress()\nconst data = erc1155Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipientAddress, tokenId, amount, &#x27;0x&#x27;]\n)\n \nconst transaction = {\n  to: erc1155TokenAddress,\n  data\n}\n \nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransaction(transaction)\nconsole.log(txnResponse)\n \nWith batching functionality, you can send multiple token transfers in a single native transaction:\nconst erc1155Interface = new ethers.utils.Interface([\n  &#x27;function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data)&#x27;\n])\n \n// Encode two different ERC-1155 token transfers\nconst data1 = erc1155Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipient1Address, token1Id, amount1, &#x27;0x&#x27;]\n)\nconst data2 = erc1155Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipient2Address, token2Id, amount2, &#x27;0x&#x27;]\n)\n \nconst transaction1 = {\n  to: erc1155ContractAddress,\n  data: data1\n}\nconst transaction2 = {\n  to: erc1155ContractAddress,\n  data: data2\n}\n \n// Send a multiple transactions as a single bundle which is executed as one transaction on chain.\nconst signer = wallet.getSigner()\nconst txnResponse = await signer.sendTransactionBatch([transaction1, transaction2])\nconsole.log(txnResponse)\n ","title":"Sending ERC-1155 (Collectible) Tokens","titles":[]},"374":{"href":"/solutions/wallets/universal-wallet/03-guides/09-send-batch-transactions#sending-a-batch-of-transactions","html":"</header>\n<p>Likewise, bundling multiple transactions to be sent in a single native transaction is equally as easy:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction1</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: recipient1Address,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000000000000000000</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transaction2</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> {</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  to: recipient2Address,</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  value: </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">1000000000000000000</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">}</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([transaction1, transaction2])</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(response)</span></span></code></pre>\n<p>The transactions don&#x27;t have to be the same token or even token standard either.\nYou can mix and match:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc20Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function transfer(address _to, uint256 _value)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc721Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function safeTransferFrom(address _from, address _to, uint256 _tokenId)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc1155Interface</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> new</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> ethers.utils.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">Interface</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">([</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data)&#x27;</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">])</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc20Data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc20Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;transfer&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [recipient2Address, amount2]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc721Data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc721Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipient3Address, amount3]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> erc1155Data</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> erc1155Interface.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">encodeFunctionData</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">  &#x27;safeTransferFrom&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">, [address, recipient4Address, token4Id, amount4, </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;0x&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">)</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> transactions</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> [</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  { to: recipient1Address, value: </span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&#x27;1000000000000000000&#x27;</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  { to: daiContractAddress, data: erc20Data },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  { to: erc721ContractAddress, data: erc721Data },</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">  { to: erc1155ContractAddress, data: erc1155Data }</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">]</span></span>\n<span class=\"line\" data-empty-line=\"true\"> </span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> signer</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> wallet.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">getSigner</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">()</span></span>\n<span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">const</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> response</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> =</span><span style=\"color:#D73A49;--shiki-dark:#F47067\"> await</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> signer.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">sendTransaction</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(transactions)</span></span>\n<span class=\"line\"><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">console.</span><span style=\"color:#6F42C1;--shiki-dark:#DCBDFB\">log</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">(response)</span></span></code></pre>","isPage":true,"text":"\nLikewise, bundling multiple transactions to be sent in a single native transaction is equally as easy:\nconst transaction1 = {\n  to: recipient1Address,\n  value: 1000000000000000000\n}\n \nconst transaction2 = {\n  to: recipient2Address,\n  value: 1000000000000000000\n}\n \nconst signer = wallet.getSigner()\nconst response = await signer.sendTransaction([transaction1, transaction2])\nconsole.log(response)\nThe transactions don&#x27;t have to be the same token or even token standard either.\nYou can mix and match:\nconst erc20Interface = new ethers.utils.Interface([\n  &#x27;function transfer(address _to, uint256 _value)&#x27;\n])\nconst erc721Interface = new ethers.utils.Interface([\n  &#x27;function safeTransferFrom(address _from, address _to, uint256 _tokenId)&#x27;\n])\nconst erc1155Interface = new ethers.utils.Interface([\n  &#x27;function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data)&#x27;\n])\n \nconst erc20Data = erc20Interface.encodeFunctionData(\n  &#x27;transfer&#x27;, [recipient2Address, amount2]\n)\nconst erc721Data = erc721Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipient3Address, amount3]\n)\nconst erc1155Data = erc1155Interface.encodeFunctionData(\n  &#x27;safeTransferFrom&#x27;, [address, recipient4Address, token4Id, amount4, &#x27;0x&#x27;]\n)\n \nconst transactions = [\n  { to: recipient1Address, value: &#x27;1000000000000000000&#x27; },\n  { to: daiContractAddress, data: erc20Data },\n  { to: erc721ContractAddress, data: erc721Data },\n  { to: erc1155ContractAddress, data: erc1155Data }\n]\n \nconst signer = wallet.getSigner()\nconst response = await signer.sendTransaction(transactions)\nconsole.log(response)","title":"Sending a Batch of Transactions","titles":[]},"375":{"href":"/solutions/wallets/universal-wallet/03-guides/10-building-backends#building-backends-with-sequence","html":"</header>\n","isPage":true,"text":"\n","title":"Building Backends with Sequence","titles":[]},"376":{"href":"/solutions/wallets/universal-wallet/03-guides/10-building-backends#nodejs","html":"\n<p>The <a href=\"https://github.com/0xsequence/sequence.js\">0xsequence</a> package which is available for browser / client use, also works perfectly on nodejs backends\nwritten in Javascript or Typescript.</p>\n","isPage":false,"text":"\nThe 0xsequence package which is available for browser / client use, also works perfectly on nodejs backends\nwritten in Javascript or Typescript.\n","title":"nodejs","titles":["Building Backends with Sequence",null]},"377":{"href":"/solutions/wallets/universal-wallet/03-guides/10-building-backends#go","html":"\n<p>A complete Sequence SDK is also available in Go: <a href=\"https://github.com/0xsequence/go-sequence\">https://github.com/0xsequence/go-sequence</a>.</p>\n<p><a href=\"https://github.com/0xsequence/go-sequence\">go-sequence</a> is the equivalent of <a href=\"https://github.com/0xsequence/sequence.js\">0xsequence</a>\nbut for Go / Golang backends. In fact, all of Sequence&#x27;s infrastructure is written in Go and is built with <a href=\"https://github.com/0xsequence/go-sequence\">go-sequence</a>.</p>\n","isPage":false,"text":"\nA complete Sequence SDK is also available in Go: https://github.com/0xsequence/go-sequence.\ngo-sequence is the equivalent of 0xsequence\nbut for Go / Golang backends. In fact, all of Sequence&#x27;s infrastructure is written in Go and is built with go-sequence.\n","title":"Go","titles":["Building Backends with Sequence",null]},"378":{"href":"/solutions/wallets/universal-wallet/03-guides/10-building-backends#ethkit","html":"\n<p>As part of the Sequence open source tools, our team has also built <a href=\"https://github.com/0xsequence/ethkit\">ethkit</a>, which\nis an Ethereum dev toolkit for Go backends. <a href=\"https://github.com/0xsequence/ethkit\">ethkit</a> supports EOA wallets,\nand you can think of it like <code>ethers.js</code> but for Go.</p>\n","isPage":false,"text":"\nAs part of the Sequence open source tools, our team has also built ethkit, which\nis an Ethereum dev toolkit for Go backends. ethkit supports EOA wallets,\nand you can think of it like ethers.js but for Go.\n","title":"ethkit","titles":["Building Backends with Sequence",null]},"379":{"href":"/solutions/wallets/universal-wallet/03-guides/10-building-backends#support-for-other-backend-languages","html":"\n<p>If your backend services are written in a language other than JS or Go, you can still easily integrate Sequence,\nas Sequence is really just a standard Ethereum client library with some extra features. In many cases, the extra\nfeatures are best utilized on the client-side / dapp.</p>\n<p>If your situation for example is a Python or Java backend where you&#x27;d like to verify signatures from a Sequence Wallet,\nwell then, you can call the standard <a href=\"https://eips.ethereum.org/EIPS/eip-1271\">EIP1271</a> function for the account address\nfrom your backend.</p>\n<p>If you&#x27;d like to use the Sequence&#x27;s Meta-Transaction capabilities, see <a href=\"/guides/templates/template-go-relayer\">Building Relaying Server with Sequence</a>.</p>","isPage":false,"text":"\nIf your backend services are written in a language other than JS or Go, you can still easily integrate Sequence,\nas Sequence is really just a standard Ethereum client library with some extra features. In many cases, the extra\nfeatures are best utilized on the client-side / dapp.\nIf your situation for example is a Python or Java backend where you&#x27;d like to verify signatures from a Sequence Wallet,\nwell then, you can call the standard EIP1271 function for the account address\nfrom your backend.\nIf you&#x27;d like to use the Sequence&#x27;s Meta-Transaction capabilities, see Building Relaying Server with Sequence.","title":"Support for other backend languages","titles":["Building Backends with Sequence",null]}},"dirtCount":0,"index":[["🖼️",{"2":{"330":1}}],["👛",{"2":{"330":1}}],["🔐🪪",{"2":{"330":1}}],["⛓️",{"2":{"330":1}}],["🪙",{"2":{"330":1}}],["🦊",{"2":{"330":1}}],["🧰",{"2":{"329":1}}],["^5",{"2":{"317":1}}],["^1",{"2":{"317":1}}],["$",{"2":{"286":1,"359":2}}],["`authorize",{"2":{"366":1}}],["`invalid",{"2":{"359":1}}],["`proof",{"2":{"359":1}}],["`failedtransactionresponse`",{"2":{"312":1}}],["`senttransactionresponse`",{"2":{"312":1}}],["`wallet",{"2":{"286":1}}],["`walletproxybytecode`",{"2":{"236":1}}],["`",{"2":{"282":2,"284":2,"285":2,"286":3,"287":2,"288":2,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"301":2,"311":2,"312":2,"359":1,"366":1}}],["`$",{"2":{"282":2,"284":2,"285":2,"286":2,"287":2,"288":2,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"311":2,"312":2}}],["`mainmodule`",{"2":{"236":1}}],["x19ethereum",{"2":{"261":1}}],["x",{"2":{"199":1,"274":2}}],["x27",{"2":{"36":18,"37":22,"38":5,"39":2,"41":5,"43":4,"49":9,"50":9,"53":2,"54":2,"56":6,"57":6,"59":6,"60":17,"66":1,"68":1,"72":1,"77":1,"91":1,"93":1,"94":1,"96":1,"100":1,"102":1,"103":2,"107":1,"111":1,"113":1,"120":1,"121":1,"128":2,"129":4,"131":2,"141":1,"151":1,"153":1,"157":1,"159":2,"162":2,"169":1,"178":1,"188":1,"190":3,"197":1,"198":1,"210":2,"213":1,"215":2,"218":2,"224":1,"226":2,"232":1,"235":1,"236":14,"237":1,"239":1,"241":4,"242":2,"243":1,"248":1,"249":5,"250":1,"253":1,"254":2,"255":2,"256":1,"257":1,"261":2,"262":28,"263":1,"266":12,"273":3,"274":3,"275":2,"281":1,"282":6,"283":1,"284":5,"285":5,"286":24,"287":4,"288":4,"289":2,"290":6,"291":6,"293":10,"294":10,"295":10,"296":14,"298":1,"299":10,"300":10,"301":9,"304":2,"306":3,"307":6,"308":6,"309":6,"311":8,"312":8,"326":1,"331":1,"332":3,"333":5,"335":2,"337":1,"340":1,"355":2,"357":1,"358":5,"359":16,"362":2,"364":4,"365":2,"366":1,"367":4,"368":2,"369":4,"371":10,"372":10,"373":16,"374":17,"377":1,"379":3}}],["911",{"2":{"196":1}}],["9",{"0":{"196":1}}],["6492",{"2":{"359":1}}],["68572",{"2":{"296":1}}],["66547",{"2":{"296":1}}],["66597",{"2":{"57":1}}],["65535required",{"2":{"228":1}}],["6",{"0":{"193":1,"369":1},"2":{"205":1,"323":1}}],["qr",{"2":{"355":2}}],["qmw5gvygwb98gsn8vjtrwu4pln6jryexnxzknwpphvwtdm",{"2":{"196":1}}],["qmdjzqexj2wnny7pnnn4kauzckjh4va5xhoxmmis919ev3",{"2":{"189":1}}],["questions",{"2":{"359":1}}],["queried",{"2":{"256":1,"257":1}}],["queryclientprovider",{"2":{"36":3,"37":5,"53":2,"60":2}}],["queryclient",{"2":{"36":4,"37":5,"53":1,"60":1}}],["query",{"0":{"5":1,"7":1,"27":1,"29":1,"31":1,"33":1,"82":1,"83":1},"2":{"35":3,"36":1,"37":1}}],["quantstamp",{"0":{"268":1},"2":{"267":1}}],["quantities",{"2":{"179":1}}],["quantityraw",{"2":{"57":1}}],["quickstart",{"0":{"201":1,"276":1,"314":1},"1":{"202":1,"203":1,"204":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"315":1,"316":1,"317":1,"318":1}}],["quickly",{"2":{"86":1,"126":1,"136":1,"203":1,"278":1,"316":1}}],["quot",{"2":{"188":12,"189":12,"192":2,"193":2,"198":4,"199":2,"221":2,"228":4,"229":10,"230":28,"236":6,"241":6,"261":4,"263":2,"267":6,"284":10,"285":6,"286":10,"287":82,"288":2,"290":2,"291":16,"293":24,"294":24,"295":22,"301":426,"311":66,"312":68,"317":13,"318":4,"333":38,"344":2,"345":2,"346":12,"347":2,"348":6,"349":4,"350":2,"355":2,"358":2}}],["01a087979dccbbc49a45b72d987e5651d65bd97349ccbfdd601b0b7beee9ddc4",{"2":{"294":1}}],["09t18",{"2":{"287":2}}],["03",{"2":{"287":3}}],["02t18",{"2":{"287":4}}],["02170000000014",{"2":{"218":1}}],["0247",{"2":{"215":1}}],["0",{"2":{"163":1,"215":1,"218":1,"241":1,"254":1,"257":1,"263":1,"274":1,"288":1,"299":1,"300":1,"301":1,"311":2,"312":1,"317":3}}],["0x839ee023b21f4ffe2294025de0ac30ba7278d6fd",{"2":{"312":2}}],["0x8a5bc19e22d6ad55a2c763b93a75d09f321fe764",{"2":{"219":1}}],["0xacc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0",{"2":{"311":1}}],["0x153824576d03629b264683b430bbf9acea1d0975",{"2":{"312":1}}],["0x1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881",{"2":{"311":1}}],["0x1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3",{"2":{"294":1}}],["0x1626ba7e",{"2":{"263":2}}],["0x9fa2b3c4",{"2":{"293":1}}],["0x9c5a87452d4fac0cbd53bdca580b20a45526b3ab",{"2":{"218":2}}],["0x27cabc9700ee6db2797b6ac1e1ece81c72a2cd8d",{"2":{"293":1,"294":1,"295":1,"307":1}}],["0x2791bca1f2de4661ed88a30c99a7a9449aa84174",{"2":{"56":1}}],["0x4d4ee1b8583e31fe789eaf2e1b6e011c220c10b6",{"2":{"311":2,"312":1}}],["0x4936962d9972a70bffc27f376f55d9c60c12e762819fa6384fdb466664122b6e",{"2":{"295":1}}],["0x48656c6c6f20776f726c64",{"2":{"291":1}}],["0x4fbf69aa2a75f9942a768dc8da7804ec965f7bea",{"2":{"230":1,"231":2}}],["0x3c4e11e4dbf23b87c14bd75d0da9c75707392d21",{"2":{"287":2}}],["0x5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae7",{"2":{"311":1}}],["0x503388c73ca663ea34e103c11c9f47c9433af471",{"2":{"299":1,"300":1}}],["0x574372ff1a0eede68b5358cce7bbb93155a9dfe0",{"2":{"287":2}}],["0x596af90cecdbf9a768886e771178fd5561dd27ab",{"2":{"230":1,"231":2,"241":1}}],["0xe4b10c53aa75e19e088cfdd0cff7d46a0e4206f0",{"2":{"290":1}}],["0xe6b9b21c077f382333220a072e4c44280b873907",{"2":{"266":1}}],["0xec9a7204a43d3f4a82c84fde92d25bfc9110981e",{"2":{"230":1,"231":1}}],["0xd72c236be524ec24f72329317e2785e687105b69",{"2":{"311":1}}],["0xd6043fe6f06d90ec2cb36ca5cd1b193a8515f350",{"2":{"284":1}}],["0xd130b43062d875a4b7af3f8fc036bc6e9d3e1b3e",{"2":{"266":1}}],["0xd01f11855bccb95f88d7a48492f66410d4637313",{"2":{"236":1,"266":1}}],["0x7efe6ce415956c5f80c6530cc6cc81b4808f6118",{"2":{"266":1}}],["0x061150e5574716dbb1a2cdf54b3dce9f94395f65",{"2":{"309":1}}],["0x0100010000000002012128ff2dd168dc250dc3da93db3131f737e6961a0000fe0100030000000006010001000074000197013331090a763fc7ef2216502cfbff5d855530f977a0ee6db3615722ed9bad498781d8ed72d52b5c9717708ac757f7789c9567e5468566179bd03f72d1fc7b1c010400002c01011111b16c6268897233eddea98a041b326b0faef2010122229ce37ccfee1cbab2b743b22c314b5667cf1a06020001000074000100deb9091f5beb1ebd8d91a1b81e562a70cdb3a1cdafc5e61087b18d1c221c570754ecbe056bdef5f82c388a9bf53f074521aeaf5afdeed3a2ba70adb89362631b010400002c0101444444444444444444444444444444444444444401015555555555555555555555555555555555555555030100a5a91b133336e5ef1c7e23c13974535018fab1c0",{"2":{"291":1}}],["0x02390f3e6e5fd1c6786cb78fd3027c117a9955a7",{"2":{"266":1}}],["0x0",{"2":{"263":1}}],["0x0000000000000000000000000000000000000000000000000000000000000000",{"2":{"311":1}}],["0x0000000000000000000000001119e72b4af230becebd933d0e07f0eec51d8c2a0000000000000000000000000000000000000000000000000000000000000001",{"2":{"311":1}}],["0x00",{"2":{"197":1,"312":1}}],["0xcccccccccccccccccccccccccccccccccccccccc",{"2":{"262":1}}],["0xce0042b868300000d44a59004da54a005ffdcf9f",{"2":{"215":1}}],["0xf439e432d54c2bf5518a1901d3791070d4192986",{"2":{"299":1,"300":1,"301":1}}],["0xf87e31492faf9a91b02ee0deaad50d51d56d5d4d",{"2":{"295":1}}],["0xf2e9f728abd65089f25efda5852e605ced377f4e2c89dbf143b124623ed09b2c",{"2":{"293":1,"311":1}}],["0xff",{"2":{"236":1}}],["0xf9d09d634fb818b05149329c1dccfaea53639d96",{"2":{"236":1,"266":1}}],["0xf9010880852416b84e01830222e08080b8b66080604052348015600f57600080fd5b50609980601d6000396000f3fe60a06020601f369081018290049091028201604052608081815260009260609284918190838280828437600092018290525084519495509392505060208401905034f5604080516001600160a01b0383168152905191935081900360200190a0505000fea26469706673582212205a310755225e3c740b2f013fb6343f4c205e7141fcdf15947f5f0e0e818727fb64736f6c634300060a00331ca01820182018201820182018201820182018201820182018201820182018201820a01820182018201820182018201820182018201820182018201820182018201820",{"2":{"218":1}}],["0xf9016c8085174876e8008303c4d88080b90154608060405234801561001057600080fd5b50610134806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80634af63f0214602d575b600080fd5b60cf60048036036040811015604157600080fd5b810190602081018135640100000000811115605b57600080fd5b820183602082011115606c57600080fd5b80359060200191846001830284011164010000000083111715608d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550509135925060eb915050565b604080516001600160a01b039092168252519081900360200190f35b6000818351602085016000f5939250505056fea26469706673582212206b44f8a82cb6b156bfcc3dc6aadd6df4eefd204bc928a4397fd15dacf6d5320564736f6c634300060200331b83247000822470",{"2":{"215":1}}],["0x6b175474e89094c44da98b954eedeac495271d0f",{"2":{"294":1,"301":1,"307":1}}],["0x63a21cca14ed7454b9cf6466af422b5c597c6b57",{"2":{"284":1}}],["0x631998e91476da5b870d741192fc5cbc55f5a52e",{"2":{"57":1,"296":1}}],["0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3",{"2":{"236":1}}],["0x608060405234801561001057600080fd5b5061013d806100206000396000f3fe60806040526004361061001e5760003560e01c80639c4ae2d014610023575b600080fd5b6100cb6004803603604081101561003957600080fd5b81019060208101813564010000000081111561005457600080fd5b82018360208201111561006657600080fd5b8035906020019184600183028401116401000000008311171561008857600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506100cd915050565b005b60008183516020850134f56040805173ffffffffffffffffffffffffffffffffffffffff83168152905191925081900360200190a050505056fea264697066735822122033609f614f03931b92d88c309d698449bb77efcd517328d341fa4f923c5d8c7964736f6c63430007060033",{"2":{"219":1}}],["0x6192e0fdcd868b3de01c7fbc0ad98baebd7330c1",{"2":{"230":1,"231":2}}],["0xbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",{"2":{"262":1}}],["0xbb6e024b9cffacb947a71991e386681b1cd1477d",{"2":{"215":1}}],["0xb392c99d9f8e3e0b248e5c283818be5bf5cecca7",{"2":{"199":1}}],["0x",{"2":{"163":1,"290":1,"308":1,"312":1,"373":3,"374":1}}],["0xsequence",{"0":{"333":1},"2":{"35":10,"36":2,"37":4,"38":1,"39":1,"53":4,"54":1,"58":1,"60":1,"217":1,"220":1,"261":1,"262":2,"280":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1,"317":8,"318":3,"332":1,"333":3,"358":1,"359":4,"364":1,"376":1,"377":2}}],["zellic",{"0":{"270":1}}],["zero",{"0":{"253":1,"254":1},"2":{"249":4,"253":1,"254":1,"255":2}}],["zone",{"2":{"129":1}}],["zkevm",{"2":{"81":1}}],["✓",{"2":{"120":1}}],["42161",{"2":{"293":2,"294":1,"295":1,"307":1,"311":1}}],["42",{"2":{"287":4,"290":1}}],["4k",{"2":{"165":1}}],["4",{"0":{"114":1,"151":1,"164":1,"174":1,"184":1,"191":1,"367":1},"1":{"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"152":1,"153":1},"2":{"230":1,"262":1}}],["java",{"2":{"379":1}}],["javascript",{"2":{"359":1,"376":1}}],["july",{"2":{"268":1}}],["just",{"2":{"94":1,"95":1,"157":1,"165":1,"179":1,"198":1,"330":1,"332":3,"358":1,"379":1}}],["js",{"0":{"318":1,"353":2},"2":{"217":1,"220":1,"317":1,"318":3,"332":2,"378":1,"379":1}}],["jsonrpcprovider",{"2":{"241":1,"359":1}}],["json",{"2":{"188":3,"189":2,"190":1,"191":1,"195":1,"196":3,"197":1,"317":2}}],["joined",{"2":{"261":1,"262":1}}],["join",{"2":{"112":1}}],["815189234z",{"2":{"287":1}}],["815189174z",{"2":{"287":1}}],["819722082z",{"2":{"287":1}}],["8545",{"2":{"241":1}}],["8",{"0":{"195":1},"2":{"97":1}}],["36000",{"2":{"338":1}}],["33347671958251969419410711528313284722562",{"2":{"295":1}}],["3rd",{"2":{"274":1}}],["32",{"2":{"236":1,"287":3,"365":1}}],["3",{"0":{"76":1,"113":1,"147":1,"163":1,"173":1,"183":1,"190":1,"220":1,"366":1},"1":{"148":1,"149":1,"150":1},"2":{"97":1,"109":1,"145":1,"230":1,"231":2,"287":1,"325":1,"333":2,"345":1}}],["+",{"2":{"66":1,"77":1,"143":1,"146":2,"196":1,"231":4,"261":2,"283":2,"302":1,"328":1,"332":1,"353":1}}],["❤️",{"2":{"61":1}}],["1699442705",{"2":{"312":1}}],["1699442705965",{"2":{"312":1}}],["1699443005",{"2":{"312":1}}],["191",{"0":{"261":1},"2":{"261":1}}],["1200x400",{"2":{"333":2,"345":1}}],["1271",{"2":{"229":1,"248":1,"260":1}}],["12",{"0":{"199":1},"2":{"236":1}}],["123456",{"2":{"285":1,"306":1}}],["123",{"2":{"196":2,"340":1}}],["102951017z",{"2":{"287":1}}],["102950917z",{"2":{"287":1}}],["109787921z",{"2":{"287":1}}],["109234880945084120673",{"2":{"287":4}}],["10",{"0":{"197":1},"2":{"287":2,"306":1}}],["1000",{"2":{"296":1}}],["1000000000000000000",{"2":{"370":1,"374":3}}],["10000000000",{"2":{"56":1}}],["100",{"2":{"57":1,"226":1,"351":1}}],["1155",{"0":{"158":1,"168":1,"373":1},"2":{"157":1,"158":1,"161":2,"163":1,"167":1,"168":1,"169":1,"193":1,"195":1,"373":2}}],["11",{"0":{"198":1},"2":{"97":1,"287":4}}],["1",{"0":{"74":1,"78":1,"104":1,"142":1,"161":1,"171":1,"181":1,"188":1,"215":1,"218":1,"273":1,"364":1},"1":{"105":1,"106":1,"143":1},"2":{"97":1,"163":1,"188":1,"197":1,"199":1,"230":1,"231":1,"262":2,"274":1,"293":1,"299":1,"300":1,"301":1,"308":2,"309":2,"333":2,"338":1,"345":1}}],["137",{"2":{"36":1,"37":1,"56":1,"60":1,"291":1,"296":1,"312":2}}],["risks",{"2":{"328":1}}],["right",{"2":{"44":3,"111":1,"121":1,"124":1,"148":1,"152":1,"292":1}}],["rpcurl",{"2":{"359":3}}],["rpc",{"2":{"271":1}}],["ration",{"2":{"345":1}}],["ratio",{"2":{"333":2}}],["rather",{"2":{"124":1}}],["raw",{"0":{"293":1},"2":{"293":1}}],["randombytes",{"2":{"365":1}}],["random",{"2":{"248":1}}],["rainbow",{"2":{"209":1}}],["ramp",{"2":{"205":5,"323":5,"333":2,"349":1}}],["ramps",{"0":{"205":1,"323":1}}],["rules",{"2":{"178":1}}],["running",{"2":{"334":1}}],["runs",{"2":{"333":2}}],["runtime",{"2":{"237":1}}],["run",{"2":{"90":1,"216":1,"332":1}}],["root",{"2":{"286":1}}],["router=",{"2":{"286":1}}],["routerprovider",{"2":{"286":2}}],["router",{"2":{"286":7}}],["rotation",{"2":{"211":1}}],["rotate",{"0":{"121":1},"2":{"121":1}}],["robust",{"2":{"90":1,"329":1}}],["royalties",{"2":{"87":1,"137":1}}],["roles",{"0":{"67":1},"2":{"67":1,"155":1}}],["role",{"2":{"66":1,"108":1}}],["redirect",{"2":{"336":1}}],["reduce",{"2":{"232":1,"362":1}}],["reducing",{"2":{"168":1}}],["retrieve",{"2":{"333":1,"369":1,"370":1}}],["retrieving",{"0":{"256":1,"257":1},"1":{"257":1}}],["returning",{"2":{"309":1}}],["returned",{"2":{"261":1,"262":1,"312":1,"343":1,"358":1}}],["returns",{"2":{"223":1,"243":1,"257":1,"263":1,"287":1,"305":1,"306":4,"307":2}}],["return",{"0":{"225":1,"245":1},"2":{"36":1,"37":2,"38":1,"39":1,"53":1,"54":1,"59":2,"60":1,"155":1,"256":1,"263":5,"286":3,"309":1,"310":1,"311":1,"339":1}}],["rejected",{"2":{"240":1,"248":1}}],["res",{"2":{"284":2}}],["response",{"0":{"311":1,"312":1},"2":{"293":1,"311":2,"312":2,"374":4}}],["responses",{"2":{"293":1}}],["responsibility",{"2":{"248":1}}],["respect",{"2":{"263":1}}],["respectively",{"2":{"309":1}}],["respective",{"2":{"76":1,"131":1}}],["rest",{"2":{"242":1,"273":1}}],["resulting",{"2":{"261":1,"262":1,"263":1}}],["result",{"2":{"213":1,"225":2,"226":1,"239":1,"306":2,"312":1}}],["region",{"2":{"205":1,"323":1}}],["regulations",{"2":{"94":1}}],["reflect",{"2":{"355":1}}],["refunded",{"2":{"215":1,"218":1}}],["refreshedat",{"2":{"287":2}}],["refresh",{"0":{"341":1},"2":{"199":3,"341":2}}],["references",{"2":{"267":1}}],["referencing",{"2":{"240":1,"248":1,"253":1}}],["refer",{"2":{"36":1,"59":1,"220":1,"280":1,"317":1}}],["replace",{"0":{"360":1},"2":{"325":1,"328":1}}],["replay",{"2":{"286":1,"340":1}}],["repo",{"2":{"353":1}}],["reports",{"2":{"267":1}}],["repository",{"2":{"40":1,"213":1,"216":2,"217":1,"220":1,"286":1}}],["represents",{"2":{"254":1}}],["represent",{"2":{"178":1,"179":1}}],["reverted",{"2":{"311":1}}],["revertreason",{"2":{"311":2}}],["revert",{"2":{"251":1}}],["revertonerror",{"0":{"251":1},"2":{"249":2,"251":1,"254":1,"255":1}}],["reveal",{"2":{"172":1,"182":1}}],["review",{"2":{"127":1}}],["recipient4address",{"2":{"374":1}}],["recipient3address",{"2":{"374":1}}],["recipient2address",{"2":{"371":1,"372":1,"373":1,"374":2}}],["recipient1address",{"2":{"371":1,"372":1,"373":1,"374":2}}],["recipientaddress",{"2":{"370":1,"371":1,"372":1,"373":1}}],["recipient",{"2":{"294":1,"295":1,"307":1,"371":1,"372":1,"373":1}}],["receipts",{"0":{"310":1},"1":{"311":1,"312":1},"2":{"293":1,"310":2,"311":1}}],["receipt",{"2":{"293":3,"294":1,"295":1,"311":5,"312":1}}],["receives",{"2":{"306":1}}],["receive",{"2":{"213":1}}],["receiving",{"2":{"131":1}}],["recoveredsessionaddress",{"2":{"369":2}}],["recovery",{"2":{"90":1,"211":1,"275":1}}],["recommendations",{"2":{"328":1}}],["recognized",{"2":{"169":1}}],["recognition",{"2":{"168":1}}],["render",{"2":{"251":1,"286":1}}],["rendered",{"2":{"248":1,"254":1,"344":1}}],["renewal",{"2":{"126":1}}],["renaming",{"0":{"117":1}}],["rename",{"0":{"116":1},"1":{"117":1,"118":1},"2":{"114":1,"116":1}}],["remember",{"2":{"284":1}}],["remaining",{"2":{"109":1,"126":1,"325":1}}],["removed",{"2":{"328":1}}],["remove",{"2":{"111":1,"328":1}}],["removing",{"2":{"69":1}}],["remoteconfigtracker",{"2":{"359":1}}],["remotely",{"2":{"332":1}}],["remote",{"0":{"10":1,"16":1},"2":{"261":1,"262":1,"359":1}}],["re",{"2":{"96":1,"157":1,"162":1,"177":1,"331":1,"332":1,"341":1}}],["requiring",{"2":{"163":1,"309":1,"333":1,"361":1,"362":1}}],["requirefreshsigner",{"2":{"266":1}}],["require",{"2":{"253":1,"284":1,"298":1,"303":1,"304":1,"327":1,"359":1,"362":1}}],["required",{"2":{"214":2,"215":1,"217":2,"218":1,"226":1,"272":1,"274":1,"292":1,"293":1,"307":1,"332":1}}],["requires",{"2":{"94":1,"215":1,"307":1,"317":1,"370":1}}],["requirement",{"2":{"89":1}}],["requests",{"2":{"355":1}}],["request",{"2":{"61":1,"153":1,"293":1,"294":1,"295":1,"311":1,"312":1,"355":1}}],["relaying",{"2":{"379":1}}],["relayer",{"2":{"139":1}}],["relevant",{"2":{"311":1}}],["reload",{"2":{"199":1}}],["relinquishing",{"2":{"87":1,"137":1}}],["rely",{"2":{"60":1}}],["reach",{"2":{"359":1}}],["reached",{"2":{"261":1,"262":1}}],["reactdom",{"2":{"286":1}}],["react",{"0":{"40":1},"2":{"35":3,"36":1,"37":1,"39":1,"286":8}}],["reasons",{"2":{"248":1}}],["reason",{"2":{"226":1,"254":1,"311":1,"312":1}}],["really",{"2":{"379":1}}],["realm",{"2":{"329":1}}],["real",{"2":{"89":1,"271":1}}],["reader",{"2":{"359":1}}],["reading",{"0":{"241":1}}],["ready",{"2":{"194":1,"199":1,"331":1}}],["read",{"2":{"64":1,"76":2,"109":1,"153":1,"164":1,"174":1,"184":1,"199":1,"241":1,"333":1}}],["\tmessage",{"2":{"262":1}}],["\tdomain",{"2":{"262":1}}],["\tprimarytype",{"2":{"262":1}}],["\ttypes",{"2":{"262":1}}],["\t",{"2":{"41":1,"262":3}}],["\t\tcount",{"2":{"262":1}}],["\t\tchainid",{"2":{"262":1}}],["\t\twallet",{"2":{"262":1}}],["\t\tverifyingcontract",{"2":{"262":1}}],["\t\tversion",{"2":{"262":1}}],["\t\tname",{"2":{"262":2}}],["\t\t\t",{"2":{"262":3}}],["\t\tperson",{"2":{"262":1}}],["\t\tposition",{"2":{"41":1}}],["\t\t",{"2":{"41":1,"262":1}}],["\t\tdefaulttheme",{"2":{"41":1}}],["having",{"2":{"333":1}}],["haven",{"2":{"102":1,"141":1}}],["have",{"0":{"83":1},"2":{"66":2,"68":1,"70":2,"75":1,"76":1,"80":1,"91":1,"107":1,"108":1,"109":1,"115":1,"116":1,"119":1,"122":1,"123":2,"124":1,"127":1,"128":1,"129":1,"141":1,"143":1,"145":1,"148":1,"152":1,"153":1,"155":1,"160":2,"161":1,"162":1,"163":2,"165":1,"170":2,"171":1,"172":1,"174":1,"180":2,"181":1,"182":1,"184":1,"188":1,"197":1,"200":1,"232":1,"254":1,"282":1,"292":1,"313":1,"332":1,"333":1,"358":1,"359":2,"374":1}}],["had",{"2":{"328":1}}],["handled",{"2":{"293":1}}],["handlegooglelogin",{"2":{"286":3}}],["handle",{"2":{"286":1}}],["handlers",{"2":{"333":1}}],["handler",{"2":{"286":3}}],["handles",{"2":{"283":1,"294":1,"295":1}}],["happen",{"2":{"274":1,"307":1}}],["hardware",{"2":{"273":1}}],["hasn",{"2":{"273":1}}],["hashes",{"2":{"248":1}}],["hasheddata",{"2":{"262":2}}],["hashed",{"2":{"232":1}}],["hash",{"0":{"232":1,"233":1},"1":{"233":1,"236":1},"2":{"224":1,"236":2,"242":1,"243":1,"247":1,"248":1,"256":1,"263":6,"286":3,"311":2}}],["has",{"2":{"168":1,"213":1,"227":1,"230":1,"240":1,"241":1,"248":1,"285":2,"289":1,"295":1,"301":1,"308":2,"309":1,"313":1,"326":1,"350":1,"355":1,"378":1}}],["hint",{"2":{"337":1}}],["higher",{"2":{"90":1}}],["history",{"2":{"82":1,"121":1}}],["hitting",{"2":{"153":1,"164":1,"174":1,"184":1}}],["hit",{"2":{"79":1,"105":1,"163":1,"164":1,"173":1,"174":1,"183":1,"184":1}}],["he",{"2":{"306":1}}],["hexlify",{"2":{"365":1}}],["hex",{"2":{"261":1,"262":1}}],["hexdataslice",{"2":{"236":1}}],["hexzeropad",{"2":{"236":1}}],["head",{"2":{"189":1,"198":1}}],["hello",{"2":{"261":1,"291":1}}],["held",{"2":{"159":1}}],["helper",{"2":{"294":1,"295":1,"297":1}}],["help",{"2":{"72":1,"131":1,"162":1,"172":1,"182":1,"187":1,"327":1,"359":1,"362":1}}],["here",{"2":{"41":1,"59":1,"80":1,"112":1,"113":1,"120":1,"125":1,"162":1,"163":1,"286":1,"333":1,"359":1}}],["horizon",{"2":{"327":3}}],["host",{"2":{"337":1}}],["hosted",{"2":{"273":1,"274":1}}],["hosting",{"2":{"187":1,"327":1}}],["holders",{"2":{"133":1}}],["homeverse",{"2":{"81":2}}],["however",{"2":{"58":1,"75":1,"132":1,"168":1,"169":1,"304":1,"313":1}}],["how",{"0":{"83":1,"112":1,"131":1,"133":1,"141":1,"156":1,"166":1,"176":1,"186":1},"1":{"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"2":{"41":1,"59":2,"76":1,"93":1,"112":1,"114":1,"141":1,"160":1,"170":1,"180":1,"199":1,"205":1,"323":1,"328":1,"332":1,"359":1}}],["hook",{"2":{"38":2,"39":1,"54":1,"286":1,"308":1,"309":2}}],["https",{"2":{"139":1,"196":1,"199":2,"287":4,"318":2,"320":1,"321":1,"332":1,"333":2,"345":1,"359":2,"377":1}}],["http",{"2":{"36":2,"37":2,"241":1}}],["ll",{"2":{"111":1,"113":1,"120":1,"121":1,"162":1,"188":1,"281":1,"282":1,"358":1}}],["languages",{"0":{"379":1}}],["language",{"2":{"359":1,"379":1}}],["land",{"2":{"295":1}}],["layout",{"0":{"228":1,"229":1},"1":{"229":1,"230":2,"231":2,"232":1,"233":1}}],["latest",{"2":{"318":1}}],["latency",{"2":{"90":1}}],["later",{"2":{"78":1,"97":1,"291":1}}],["labeled",{"2":{"129":1}}],["label",{"0":{"85":1,"135":1},"1":{"86":1,"87":1,"88":1,"136":1,"137":1,"138":1},"2":{"85":1,"135":1}}],["launched",{"0":{"88":1,"138":1},"2":{"85":1,"135":1}}],["launch",{"0":{"85":1,"135":1},"1":{"86":1,"87":1,"88":1,"136":1,"137":1,"138":1},"2":{"86":1,"136":1,"199":1}}],["locking",{"2":{"352":1}}],["lockfundingcurrencytodefault",{"0":{"352":1},"2":{"333":2}}],["localstorage",{"2":{"365":1}}],["local",{"2":{"261":1,"262":1,"362":1,"365":1,"369":1}}],["localhost",{"2":{"241":1}}],["location",{"2":{"44":1,"120":1}}],["lost",{"2":{"325":3,"327":1}}],["loss",{"2":{"225":1,"239":1}}],["losing",{"2":{"121":1}}],["long",{"2":{"197":1,"285":1,"333":1}}],["longer",{"2":{"111":1}}],["loading",{"2":{"286":1,"369":1}}],["load",{"2":{"145":1,"160":1,"170":1,"180":1}}],["low",{"2":{"90":1}}],["loyalty",{"2":{"69":1}}],["love",{"2":{"61":1}}],["logging",{"2":{"303":1,"304":1,"345":1}}],["logs",{"2":{"286":1,"311":3}}],["logins",{"2":{"285":2,"305":2,"325":1,"330":1}}],["login",{"0":{"303":1,"304":1,"325":1,"334":1},"1":{"326":1,"327":1,"328":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1},"2":{"133":1,"273":3,"275":1,"286":5,"301":1,"302":1,"305":1,"324":1,"325":2,"328":1}}],["logic",{"2":{"67":1,"210":1}}],["log",{"2":{"56":1,"102":1,"241":1,"284":1,"285":1,"286":1,"287":1,"291":1,"293":1,"294":1,"295":1,"304":1,"305":1,"308":1,"309":1,"311":1,"312":1,"333":2,"357":1,"359":2,"367":2,"369":2,"370":1,"371":2,"372":2,"373":2,"374":2}}],["logolight",{"2":{"59":2}}],["logodark",{"2":{"59":2}}],["logo",{"2":{"46":1}}],["logourl",{"0":{"46":1}}],["looking",{"2":{"152":1}}],["looksrare",{"2":{"87":1,"137":1}}],["look",{"2":{"37":1,"124":1,"188":1,"189":1,"196":2,"317":1,"331":1,"358":1}}],["len",{"2":{"261":1}}],["lemur",{"2":{"196":1}}],["least",{"2":{"325":1}}],["leaked",{"2":{"275":1}}],["leading",{"2":{"330":1}}],["lead",{"2":{"239":1}}],["leads",{"2":{"169":1}}],["leave",{"2":{"133":1}}],["learn",{"2":{"93":1,"205":1,"323":1}}],["learning",{"2":{"40":1}}],["leveraging",{"2":{"203":1,"278":1,"315":1}}],["leverage",{"0":{"133":1},"2":{"93":1,"133":1}}],["level",{"2":{"83":1,"107":2,"108":2,"109":2,"129":1,"332":1}}],["lets",{"2":{"159":1}}],["let",{"2":{"72":1,"77":1,"100":1,"107":1,"159":1,"169":1}}],["less",{"2":{"72":1,"213":1}}],["left",{"2":{"41":1,"44":3,"103":1,"106":1,"118":1,"142":1}}],["lib",{"2":{"318":1}}],["libs",{"2":{"266":1}}],["library",{"0":{"282":1},"2":{"261":1,"262":1,"282":1,"329":1,"379":1}}],["live",{"2":{"213":1}}],["little",{"2":{"187":1}}],["limited",{"2":{"275":1,"362":1}}],["limitations",{"2":{"213":1}}],["limit",{"0":{"128":1},"2":{"109":2,"128":3,"159":1,"333":1,"348":1}}],["limitted",{"2":{"109":1}}],["limits",{"2":{"100":1,"107":1,"125":1,"274":1,"293":1}}],["liquidity",{"2":{"87":1,"137":1}}],["link",{"0":{"109":1,"110":1,"111":1},"1":{"110":1,"111":1,"117":1,"118":1,"120":1,"121":1,"123":1,"124":1,"126":1},"2":{"107":2,"109":7,"110":3,"111":4,"204":1,"280":1,"301":1,"312":1}}],["linked",{"0":{"155":1},"2":{"95":1,"123":1}}],["links",{"2":{"76":1,"100":1}}],["line",{"2":{"83":1,"274":1}}],["listen",{"0":{"308":1}}],["listed",{"2":{"124":1}}],["listsessions",{"2":{"287":1,"288":1}}],["listings",{"2":{"87":1,"137":1}}],["list",{"0":{"287":1},"2":{"49":1,"50":1,"51":2,"57":1,"60":1,"80":1,"102":1,"113":1,"123":2,"227":1,"256":1,"287":1,"349":1}}],["light",{"2":{"41":1,"43":1,"333":1,"344":1}}],["likewise",{"2":{"374":1}}],["likely",{"2":{"150":1}}],["like",{"2":{"37":1,"64":1,"76":1,"78":2,"83":1,"87":1,"128":1,"137":1,"155":1,"161":1,"162":1,"171":1,"172":1,"179":5,"181":1,"182":1,"188":2,"189":1,"196":1,"271":1,"301":1,"304":1,"308":1,"317":1,"324":1,"330":1,"332":2,"333":2,"358":1,"359":1,"378":1,"379":2}}],["lt",{"2":{"36":8,"37":19,"38":4,"39":2,"41":3,"53":9,"54":2,"60":8,"199":3,"216":1,"286":11,"317":1,"318":4,"333":1,"358":4,"359":1}}],["keep",{"2":{"342":1}}],["keepwalletopened",{"0":{"342":1},"2":{"342":2}}],["keccak256",{"2":{"236":2,"263":2}}],["keys",{"0":{"114":1,"326":1,"362":1,"363":1},"1":{"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1},"2":{"91":1,"93":1,"100":3,"114":2,"116":1,"120":1,"123":1,"211":1,"275":1,"281":1,"313":3,"324":3,"325":6,"326":1,"328":3,"332":1,"361":2,"362":3}}],["key",{"0":{"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"324":1,"327":1,"328":1,"330":1,"365":1,"368":1},"1":{"117":1,"118":1,"120":1,"121":1,"123":1,"124":1,"126":1,"325":1,"326":1,"327":1,"328":1},"2":{"36":1,"37":1,"60":1,"114":9,"115":8,"116":2,"119":3,"120":3,"121":2,"122":3,"123":2,"124":2,"126":1,"179":1,"207":1,"211":1,"274":1,"281":2,"282":2,"284":2,"285":3,"286":2,"287":2,"288":2,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"311":2,"312":2,"313":1,"324":3,"325":9,"326":1,"327":6,"328":6,"333":1,"359":1,"362":2,"365":1,"366":1,"367":2,"368":1,"369":2}}],["know",{"2":{"127":1,"317":1}}],["known",{"2":{"68":1,"167":1,"168":1,"226":1,"236":1,"256":1,"257":1,"267":1}}],["kyc",{"2":{"94":1}}],["killed",{"2":{"159":1}}],["kind",{"0":{"90":1},"2":{"155":1,"274":1}}],["kinds",{"2":{"82":1}}],["kitcheckoutprovider",{"2":{"53":4}}],["kitconfig",{"2":{"37":1,"41":2,"60":2}}],["kitwalletprovider",{"2":{"37":7}}],["kitprovider",{"2":{"36":4,"37":6,"41":3,"53":2,"60":2}}],["kit",{"0":{"34":1,"35":1,"36":1,"58":1,"329":1},"1":{"35":1,"59":1,"330":1},"2":{"34":1,"35":8,"36":3,"37":4,"38":1,"39":1,"40":1,"41":2,"43":1,"53":6,"54":1,"58":3,"59":2,"60":3,"61":1,"329":1,"330":1,"331":2}}],["===",{"2":{"369":1}}],["=",{"2":{"36":8,"37":10,"38":6,"39":5,"41":1,"53":2,"54":6,"55":1,"56":2,"59":4,"60":3,"231":3,"236":6,"241":4,"249":1,"254":1,"255":1,"261":3,"262":4,"263":1,"266":1,"282":1,"284":3,"285":6,"286":14,"287":2,"288":2,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"299":1,"300":1,"301":2,"305":1,"306":2,"307":2,"308":1,"309":2,"311":2,"312":2,"333":11,"334":1,"357":2,"358":2,"359":6,"364":3,"365":3,"366":2,"367":3,"368":2,"369":1,"370":3,"371":12,"372":13,"373":13,"374":13}}],["flag",{"2":{"341":1}}],["flagged",{"2":{"251":1}}],["flows",{"2":{"302":1}}],["flow",{"2":{"217":1,"355":1}}],["flexible",{"2":{"211":1,"332":1}}],["flexibility",{"2":{"168":1,"301":1}}],["fly",{"2":{"188":1}}],["flip",{"2":{"97":1}}],["fallback",{"2":{"301":1}}],["false",{"0":{"250":1},"2":{"249":2,"255":1,"286":1,"287":1,"301":16,"305":1,"306":2,"307":1,"309":1,"312":1,"333":2,"352":1}}],["familiar",{"2":{"271":1,"331":1,"332":1}}],["fashion",{"2":{"262":1}}],["fast",{"2":{"200":1}}],["failing",{"2":{"312":1}}],["failedtransactionresponse",{"2":{"312":1}}],["failed",{"0":{"312":1},"2":{"310":2,"311":1}}],["fail",{"2":{"293":1}}],["fails",{"2":{"251":1,"312":2}}],["failure",{"2":{"90":1,"293":1}}],["fault",{"2":{"90":1}}],["favorite",{"2":{"89":1}}],["facet",{"2":{"272":1}}],["facebook",{"2":{"49":1,"60":1,"284":1,"301":1,"304":1,"330":1,"346":1}}],["fact",{"2":{"324":1,"377":1}}],["factual",{"0":{"226":1},"2":{"224":1,"226":1,"236":1,"242":1,"257":1}}],["factory",{"0":{"215":1,"221":1,"222":1},"1":{"222":1,"223":2,"224":2,"225":2,"226":1},"2":{"215":6,"216":1,"221":1,"225":1,"235":1,"236":2,"237":1,"238":1,"242":1,"249":2,"266":1}}],["factors",{"2":{"154":1,"164":1,"174":1,"184":1}}],["facilitate",{"2":{"52":1}}],["frontend",{"2":{"275":2}}],["from",{"0":{"234":1,"360":1},"2":{"36":6,"37":8,"38":3,"39":1,"51":1,"53":1,"54":1,"60":1,"61":1,"63":1,"66":1,"67":1,"68":1,"80":2,"81":1,"82":2,"87":2,"89":1,"97":1,"115":1,"133":1,"137":2,"145":1,"157":1,"160":1,"161":1,"162":1,"165":3,"167":2,"170":1,"171":1,"172":1,"174":1,"175":1,"177":1,"180":1,"181":1,"182":1,"184":1,"187":1,"188":1,"189":1,"196":1,"226":1,"237":1,"240":1,"241":1,"248":1,"261":1,"262":2,"272":1,"273":1,"274":2,"275":1,"282":1,"284":1,"285":2,"286":10,"287":1,"288":2,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"301":2,"309":1,"311":1,"312":1,"320":1,"321":1,"324":1,"326":1,"327":1,"332":1,"333":2,"352":1,"355":4,"358":3,"359":5,"362":2,"364":2,"370":1,"372":2,"373":2,"374":2,"379":2}}],["frequent",{"2":{"362":1}}],["freshly",{"2":{"195":1}}],["free",{"2":{"61":1,"80":1,"226":1}}],["friendlyname",{"2":{"287":2}}],["friendly",{"2":{"62":1,"83":1,"313":1}}],["feb",{"2":{"268":1}}],["fetch",{"2":{"82":1,"83":1}}],["few",{"2":{"70":1,"75":1,"145":1,"154":1,"164":1,"174":1,"184":1,"330":1}}],["fee",{"2":{"153":2}}],["fees",{"2":{"68":1,"69":2,"87":1,"137":1,"211":1}}],["feel",{"2":{"61":1,"80":1}}],["features",{"0":{"330":1},"2":{"62":1,"83":1,"93":2,"200":1,"379":2}}],["feature",{"2":{"53":1,"190":1}}],["fixed",{"2":{"242":1}}],["fiat",{"0":{"205":1,"323":1}}],["files",{"0":{"190":1},"2":{"188":1,"189":3,"190":1,"191":1,"195":1}}],["file",{"2":{"188":1,"189":1,"197":1,"286":1}}],["filled",{"2":{"163":1}}],["fill",{"2":{"163":2,"197":1}}],["five",{"2":{"100":1,"103":1}}],["find",{"2":{"103":1,"104":1,"114":1,"124":1,"129":1,"142":1,"256":1,"257":1,"358":1}}],["finalizeauth",{"2":{"285":1}}],["finalize",{"0":{"198":1}}],["final",{"2":{"100":1}}],["finally",{"2":{"67":1,"109":1,"197":1}}],["finished",{"2":{"355":1}}],["finishes",{"2":{"254":2}}],["finishvalidatesession",{"2":{"306":2}}],["finish",{"2":{"79":1,"108":1,"109":1,"115":1,"128":1}}],["first",{"0":{"249":1},"1":{"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1},"2":{"60":1,"72":1,"75":1,"105":1,"107":1,"160":1,"163":2,"170":1,"180":1,"188":2,"226":1,"249":1,"254":2,"325":1,"333":1}}],["fields",{"2":{"59":1,"163":3,"311":1}}],["field",{"2":{"56":1,"57":1,"60":1,"105":1,"106":1,"108":1,"117":1,"120":1,"121":1,"123":1,"294":1,"295":1}}],["further",{"2":{"333":1}}],["func",{"2":{"299":1,"300":1,"301":1}}],["functions",{"2":{"367":1}}],["functional",{"2":{"200":1,"271":1,"286":1}}],["functionality",{"2":{"132":1,"206":1,"210":1,"250":1,"355":1,"371":1,"372":1,"373":1}}],["function",{"0":{"298":1},"1":{"299":1,"300":1},"2":{"36":1,"37":1,"59":1,"60":1,"223":1,"226":1,"239":1,"243":2,"247":1,"249":1,"263":1,"286":5,"287":1,"297":1,"298":2,"299":2,"300":3,"301":10,"358":1,"371":2,"372":2,"373":2,"374":3,"379":1}}],["fungibility",{"0":{"179":1}}],["fungible",{"2":{"158":3,"167":1,"168":2,"178":1,"179":2}}],["fungability",{"0":{"179":1}}],["funding",{"2":{"351":1,"352":1}}],["funded",{"2":{"215":1,"218":1}}],["funds",{"2":{"215":4,"218":4,"225":1,"226":1,"239":1,"253":1,"333":1}}],["fund",{"2":{"70":1,"215":1}}],["fully",{"2":{"200":1,"271":1}}],["full",{"2":{"49":1,"50":1,"87":1,"137":1,"311":1,"312":1,"313":1,"341":1,"353":1}}],["found",{"2":{"213":1,"215":1,"216":1,"217":1,"218":1,"369":1}}],["folder",{"0":{"191":1},"2":{"190":4,"191":2,"196":1,"197":1}}],["follows",{"2":{"178":1,"261":1,"355":1}}],["following",{"2":{"81":1,"129":1,"139":1,"187":1,"214":1,"215":1,"217":1,"218":1,"219":1,"254":1,"275":1,"283":1,"359":1}}],["follow",{"2":{"36":1,"53":1,"80":1,"93":1,"107":1,"129":1,"345":1}}],["focus",{"2":{"169":1,"195":1}}],["fostering",{"2":{"69":1}}],["force",{"2":{"341":1}}],["formerly",{"2":{"267":1}}],["forms",{"2":{"206":1}}],["format",{"2":{"199":1}}],["form",{"2":{"66":1,"207":1}}],["foreach",{"2":{"36":1,"37":1}}],["for",{"0":{"69":1,"73":1,"82":1,"87":1,"90":1,"91":1,"137":1,"144":1,"161":1,"163":1,"169":1,"171":1,"173":1,"181":1,"183":1,"308":1,"317":1,"357":1,"379":1},"1":{"74":1,"75":1,"76":1,"145":1,"146":1,"318":1},"2":{"35":2,"36":3,"40":1,"43":2,"49":1,"50":1,"56":1,"59":3,"64":1,"68":2,"69":2,"70":2,"72":1,"75":1,"76":1,"78":1,"82":6,"83":1,"87":1,"89":2,"90":1,"91":1,"93":3,"97":2,"100":1,"107":2,"112":1,"114":1,"115":1,"119":1,"124":1,"127":1,"130":1,"131":3,"132":1,"137":1,"141":1,"149":1,"150":1,"152":1,"155":1,"157":2,"158":1,"160":1,"162":1,"163":3,"167":2,"168":3,"169":1,"170":1,"172":1,"173":1,"178":1,"179":1,"180":1,"182":1,"183":1,"187":2,"188":1,"189":2,"190":1,"195":2,"196":2,"197":1,"199":1,"204":1,"210":1,"213":2,"214":2,"217":2,"218":1,"220":1,"224":3,"226":1,"228":1,"236":1,"242":1,"248":3,"254":2,"256":1,"257":1,"261":1,"262":1,"263":1,"271":1,"274":1,"280":2,"284":1,"285":1,"287":1,"293":3,"294":1,"296":1,"297":1,"301":2,"303":1,"305":2,"308":2,"309":1,"311":1,"313":3,"317":2,"324":1,"325":3,"328":2,"329":1,"332":4,"333":1,"336":1,"337":1,"338":1,"340":1,"351":1,"353":1,"355":2,"358":1,"359":3,"362":3,"376":1,"377":1,"378":2,"379":2}}],["blocking",{"2":{"333":2}}],["block",{"2":{"311":1,"333":1}}],["blockchain",{"2":{"271":1,"313":1,"324":1,"330":1,"333":1}}],["browser",{"0":{"322":1},"2":{"321":1,"326":1,"332":3,"333":1,"376":1}}],["browsers",{"2":{"320":1,"333":3}}],["brave",{"2":{"287":1}}],["branded",{"2":{"274":1}}],["breaches",{"2":{"263":1}}],["bring",{"0":{"146":1}}],["briefly",{"2":{"120":1}}],["billing",{"0":{"125":1,"126":1},"1":{"126":1,"127":1,"128":1},"2":{"100":1,"125":1,"126":3,"127":1,"128":1}}],["bob",{"2":{"262":1}}],["bool",{"2":{"243":1,"263":1,"301":3}}],["boot",{"2":{"221":1}}],["bounded",{"2":{"228":1}}],["bounds",{"2":{"210":1}}],["boss",{"2":{"159":1}}],["both",{"2":{"131":1,"132":1,"133":1,"165":1,"168":2,"175":1,"254":2,"272":1,"273":1,"325":1}}],["bottom",{"2":{"44":3,"111":1,"118":1,"121":1,"124":1,"146":1}}],["box",{"2":{"124":1}}],["boasts",{"2":{"83":1}}],["bnb",{"2":{"81":1}}],["banner",{"2":{"333":2,"345":3}}],["bannerurl",{"0":{"345":1},"2":{"333":2,"345":1}}],["batching",{"0":{"264":1},"2":{"371":1,"372":1,"373":1}}],["batch",{"0":{"374":1},"2":{"168":1}}],["backends",{"0":{"375":1},"1":{"376":1,"377":1,"378":1,"379":1},"2":{"376":1,"377":1,"378":1}}],["backend",{"0":{"379":1},"2":{"275":1,"379":3}}],["backup",{"2":{"208":1}}],["back",{"2":{"160":1,"170":1,"180":1,"325":1,"355":1}}],["baked",{"2":{"159":1}}],["based",{"2":{"302":1}}],["base",{"0":{"196":1},"2":{"81":1,"195":1,"196":1}}],["basis",{"2":{"59":1,"179":1}}],["basics",{"2":{"188":1}}],["basic",{"2":{"36":1}}],["balanceof",{"2":{"301":1}}],["balances",{"2":{"165":1,"185":1}}],["balance",{"2":{"64":1,"82":1,"301":1}}],["beauty",{"2":{"332":1}}],["beautifully",{"2":{"320":1,"321":1}}],["beyond",{"2":{"250":1}}],["behaves",{"2":{"355":1}}],["behaviour",{"2":{"239":1,"246":1}}],["behalf",{"2":{"69":1,"362":1}}],["because",{"2":{"210":1,"213":1,"237":1,"275":1}}],["becomes",{"2":{"64":1,"324":1}}],["beta",{"2":{"281":1}}],["better",{"2":{"169":1}}],["between",{"0":{"132":1},"2":{"90":1,"333":1}}],["before",{"2":{"159":1,"160":1,"170":1,"180":1,"213":1,"226":2,"254":2,"293":1,"311":1,"312":2}}],["been",{"2":{"152":1,"213":1,"232":1,"273":1,"285":1,"289":1,"301":1,"308":2,"309":1}}],["being",{"2":{"133":1,"151":1,"168":1,"214":1,"217":1,"252":1}}],["begin",{"2":{"102":1,"286":1}}],["best",{"2":{"87":1,"127":1,"137":1,"333":2,"345":1,"379":1}}],["benefits",{"0":{"133":1},"2":{"132":2,"133":2,"332":1}}],["benefit",{"2":{"61":1,"87":1,"137":1}}],["be",{"0":{"65":1,"88":1,"98":1,"138":1},"2":{"43":1,"46":1,"47":1,"48":1,"49":3,"50":3,"51":3,"63":1,"67":1,"68":1,"70":1,"75":1,"76":1,"78":1,"79":1,"85":1,"96":2,"97":2,"107":1,"109":2,"111":2,"114":1,"118":1,"120":1,"123":2,"131":3,"135":1,"149":1,"150":1,"154":1,"155":1,"157":1,"159":1,"163":1,"165":1,"169":1,"173":1,"178":1,"179":1,"183":1,"196":2,"197":1,"200":1,"205":3,"210":1,"213":1,"215":2,"216":1,"217":1,"218":1,"224":1,"225":1,"226":2,"228":1,"229":1,"235":1,"236":1,"238":2,"240":2,"242":1,"244":1,"246":1,"248":4,"251":1,"252":1,"254":5,"255":1,"256":2,"257":2,"261":1,"262":1,"263":1,"271":2,"272":1,"274":2,"275":3,"281":1,"282":1,"284":1,"285":3,"288":2,"289":1,"290":1,"291":2,"293":4,"297":2,"298":1,"301":1,"304":1,"307":1,"309":1,"311":1,"312":4,"313":4,"318":1,"323":3,"324":2,"326":1,"327":1,"328":5,"333":1,"335":1,"337":2,"340":1,"343":1,"344":1,"346":1,"347":1,"348":1,"349":1,"350":1,"352":2,"355":2,"358":1,"362":1,"369":1,"374":2}}],["below",{"2":{"36":1,"37":1,"53":1,"93":1,"107":1,"131":1,"162":1,"172":1,"182":1,"248":1,"286":1,"334":1}}],["byte",{"2":{"263":1}}],["bytes4",{"2":{"263":4}}],["bytes1",{"2":{"236":1}}],["bytes32",{"2":{"223":1,"236":3,"241":1,"243":1,"247":1,"257":1,"263":3}}],["bytes",{"2":{"163":1,"197":1,"236":1,"263":3,"373":2,"374":1}}],["by",{"2":{"41":1,"43":1,"51":1,"60":1,"61":2,"68":1,"69":1,"70":2,"82":1,"83":1,"100":1,"102":1,"107":2,"108":2,"109":3,"115":3,"116":1,"119":1,"122":1,"123":2,"124":1,"127":1,"128":2,"131":1,"139":1,"152":1,"153":1,"157":1,"161":1,"162":1,"164":1,"165":1,"167":1,"171":1,"174":2,"181":1,"184":2,"210":1,"215":1,"218":1,"226":1,"227":1,"228":1,"236":2,"238":2,"240":1,"241":1,"242":1,"248":1,"249":1,"250":1,"251":1,"255":1,"256":1,"263":1,"267":1,"273":3,"274":3,"275":1,"285":2,"286":1,"292":1,"293":1,"297":1,"301":2,"304":1,"309":1,"311":1,"312":1,"313":2,"324":1,"325":1,"327":1,"328":1,"330":1,"333":3,"344":1,"349":1,"350":1,"352":1,"355":2,"358":1,"362":1}}],["bundling",{"2":{"374":1}}],["bundle",{"2":{"251":1,"254":3,"371":1,"372":1,"373":1}}],["bunch",{"2":{"332":1}}],["built",{"2":{"132":1,"329":1,"332":1,"377":1,"378":1}}],["building",{"0":{"375":1},"1":{"376":1,"377":1,"378":1,"379":1},"2":{"74":1,"96":1,"379":1}}],["build",{"0":{"74":1,"76":1,"80":1},"2":{"74":1,"188":1,"200":2,"320":1,"321":1,"361":1}}],["builders",{"2":{"81":1,"85":1,"135":1}}],["builder",{"0":{"0":1,"21":1,"62":1,"65":1,"68":1,"71":1,"73":1,"81":1,"89":1,"93":1,"98":1,"99":1,"101":1,"130":1,"134":1,"156":1,"166":1,"176":1,"186":1,"192":1},"1":{"63":1,"64":1,"65":1,"66":1,"67":1,"69":1,"70":1,"71":1,"74":1,"75":1,"76":1,"82":1,"83":1,"84":1,"90":1,"91":1,"92":1,"100":1,"101":1,"102":2,"103":2,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"131":1,"132":1,"133":1,"134":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"2":{"43":1,"62":1,"63":2,"64":1,"68":1,"72":2,"75":1,"76":1,"77":1,"81":1,"82":1,"85":2,"86":1,"87":1,"89":1,"93":3,"100":2,"102":1,"130":1,"131":1,"135":2,"136":1,"137":1,"141":2,"152":2,"155":1,"160":1,"170":1,"180":1,"187":1,"192":1,"193":1}}],["but",{"2":{"131":1,"132":1,"157":1,"168":1,"232":1,"246":1,"252":1,"273":1,"274":1,"275":1,"282":1,"301":1,"311":1,"332":2,"359":1,"377":1,"378":1}}],["button",{"2":{"38":2,"39":2,"54":2,"74":1,"79":1,"105":1,"106":1,"108":2,"109":2,"110":1,"111":1,"113":1,"115":3,"117":1,"118":1,"120":1,"121":1,"123":2,"124":1,"127":2,"128":2,"129":1,"143":1,"146":2,"153":1}}],["burn",{"0":{"12":1,"18":1}}],["ultimate",{"2":{"329":1}}],["umd",{"2":{"318":3}}],["ux",{"2":{"277":1}}],["utils",{"2":{"236":7,"241":2,"262":1,"365":2,"367":1,"369":1,"371":2,"372":2,"373":2,"374":3}}],["utility",{"2":{"60":1,"367":1}}],["utilized",{"2":{"123":1,"379":1}}],["utilize",{"2":{"36":1,"38":1}}],["uint8",{"2":{"262":1,"301":1}}],["uint80",{"2":{"229":1}}],["uint256",{"2":{"163":2,"197":2,"299":1,"300":1,"301":8,"371":2,"372":2,"373":4,"374":4}}],["uri",{"0":{"196":1}}],["urls",{"2":{"91":1}}],["url",{"0":{"191":1},"2":{"46":1,"91":1,"191":1,"195":1,"196":2,"345":1}}],["unauthorized",{"2":{"326":1}}],["unpkg",{"2":{"318":1}}],["unusable",{"2":{"248":1,"251":1,"254":1}}],["unknown",{"2":{"248":1}}],["unsanitized",{"2":{"225":1,"248":1}}],["unleash",{"2":{"330":1}}],["unless",{"2":{"129":1}}],["unlock",{"2":{"325":2,"329":1}}],["unlimited",{"2":{"228":1,"254":2}}],["unlike",{"2":{"178":1,"215":1}}],["unreal",{"2":{"131":1,"132":2,"133":1,"336":1}}],["uniswap",{"2":{"355":1}}],["unit",{"2":{"179":2}}],["unity",{"2":{"131":1,"132":2,"133":1,"280":3,"317":3,"336":1}}],["universaldeployer",{"2":{"219":3,"226":1}}],["universaldeployer2",{"0":{"219":1},"2":{"219":3,"220":1}}],["universal",{"0":{"213":1},"1":{"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1},"2":{"132":1,"215":1,"315":1,"330":1}}],["unique",{"2":{"59":1,"95":1,"159":1,"169":1,"179":1,"188":1,"241":1,"290":1}}],["until",{"2":{"109":1,"123":1,"282":1,"305":1}}],["underwent",{"2":{"267":1}}],["underlying",{"2":{"210":1,"237":1,"239":1}}],["understand",{"2":{"179":1}}],["under",{"2":{"83":1,"129":1,"196":1,"197":1,"231":1}}],["undefined",{"2":{"51":1,"286":1}}],["usual",{"2":{"285":2}}],["usually",{"2":{"197":1}}],["usable",{"2":{"225":1,"284":1}}],["usage",{"2":{"91":1,"107":1,"114":1,"121":1,"232":1,"271":1}}],["usdc",{"2":{"211":1,"350":1}}],["us",{"2":{"169":1,"273":1,"359":1}}],["useeffect",{"2":{"286":3}}],["usestate",{"2":{"286":4}}],["usesessionhash",{"2":{"286":5}}],["uses",{"2":{"224":1,"237":1,"328":1}}],["usecheckoutmodal",{"2":{"54":3}}],["useful",{"2":{"43":1,"297":1,"352":1,"362":1}}],["used",{"2":{"43":1,"45":1,"114":1,"120":1,"123":2,"126":1,"157":2,"167":1,"178":1,"224":1,"232":1,"236":1,"250":1,"251":1,"282":1,"285":2,"286":5,"290":1,"291":1,"297":1,"301":1,"328":1,"338":1}}],["usedisconnect",{"2":{"38":1}}],["use",{"2":{"40":1,"54":1,"59":2,"60":1,"75":3,"76":2,"83":1,"93":1,"113":1,"120":1,"131":1,"145":1,"151":1,"169":1,"178":1,"190":1,"197":1,"200":1,"208":1,"213":2,"219":1,"226":1,"250":1,"286":1,"305":1,"308":1,"325":1,"333":2,"343":1,"351":1,"358":1,"368":1,"376":1,"379":1}}],["useopenwalletmodal",{"2":{"39":3}}],["useopenconnectmodal",{"2":{"38":3}}],["useraddress",{"2":{"364":1,"367":1}}],["userid",{"2":{"287":2}}],["users",{"0":{"356":1},"1":{"357":1,"358":1,"359":1},"2":{"64":1,"68":2,"94":1,"132":1,"133":2,"205":3,"275":1,"292":1,"302":1,"303":1,"304":1,"313":1,"321":1,"323":3,"324":1,"326":1,"327":1,"328":3,"329":1,"330":2,"332":8,"333":3,"345":1,"349":2,"350":1,"352":3,"358":2,"361":1,"362":2}}],["user",{"2":{"38":2,"62":1,"66":1,"83":1,"93":1,"108":1,"132":1,"271":1,"273":3,"274":4,"275":2,"282":1,"283":3,"285":6,"286":1,"287":1,"289":3,"290":2,"301":1,"304":2,"306":2,"307":1,"324":2,"325":4,"327":2,"328":4,"332":1,"333":5,"335":1,"343":1,"346":2,"347":3,"348":1,"355":9,"357":1,"358":6,"359":1,"362":4,"366":1,"368":1}}],["useaccount",{"2":{"38":3}}],["using",{"0":{"21":1,"60":1,"134":1,"363":1},"1":{"364":1,"365":1,"366":1,"367":1,"368":1,"369":1},"2":{"38":1,"39":1,"41":1,"55":1,"58":1,"60":1,"100":1,"107":1,"108":1,"167":1,"169":1,"211":1,"216":1,"220":1,"221":1,"223":1,"225":1,"235":1,"240":1,"242":1,"248":1,"249":1,"271":1,"274":1,"281":1,"282":1,"284":1,"285":2,"286":1,"288":1,"293":1,"304":1,"309":1,"311":1,"316":1,"321":1,"324":1,"325":1,"328":1,"332":2,"333":1,"355":2,"358":1,"359":1,"361":1,"367":1}}],["upon",{"2":{"369":1}}],["upi",{"2":{"205":1,"323":1}}],["upgradeability",{"2":{"211":1}}],["upgraded",{"2":{"210":1}}],["upgrade",{"2":{"127":1}}],["updating",{"0":{"199":1},"2":{"70":1,"115":1,"238":1,"242":1,"254":1}}],["updateimagehash",{"0":{"247":1},"1":{"248":1,"250":1,"251":1,"252":1,"253":1,"254":1},"2":{"247":1,"249":2,"254":1,"255":2}}],["updateimplementation",{"2":{"239":3,"249":1,"254":1}}],["updateconfiguration",{"0":{"239":1},"1":{"240":1}}],["updates",{"0":{"255":1},"2":{"131":1,"235":1,"247":1}}],["updated",{"2":{"97":1,"232":1,"246":1,"249":1,"254":3,"255":2,"256":1,"257":2,"355":1}}],["update",{"0":{"122":1,"127":1,"195":1,"237":1,"249":1},"1":{"123":1,"124":1,"126":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":2,"251":2,"252":2,"253":2,"254":2,"255":2,"256":2,"257":2},"2":{"67":2,"96":1,"100":3,"105":1,"106":1,"113":1,"117":1,"122":2,"123":2,"124":2,"125":1,"127":1,"189":1,"199":1,"239":1,"249":3,"251":1,"286":1}}],["uploaded",{"2":{"191":1,"197":1}}],["upload",{"0":{"190":1},"2":{"63":1,"96":1,"146":1,"189":1,"190":2}}],["up",{"0":{"36":1,"37":1,"73":1,"189":1,"192":1,"284":1,"285":1},"1":{"74":1,"75":1,"76":1,"285":1,"286":1},"2":{"72":2,"78":1,"83":1,"141":1,"146":1,"152":1,"153":1,"160":1,"162":1,"164":1,"170":1,"172":1,"174":1,"180":1,"182":1,"184":1,"192":1,"197":1,"284":1,"286":1}}],["yes",{"2":{"111":1,"118":1}}],["yet",{"2":{"102":1,"141":1,"254":1,"257":1}}],["yarn",{"2":{"35":1,"53":1,"216":1,"317":1}}],["yoursite",{"2":{"333":2,"345":1}}],["yourself",{"2":{"150":1,"273":1,"283":1}}],["your",{"0":{"61":1,"85":1,"117":1,"118":1,"120":1,"121":1,"127":1,"128":1,"135":1,"144":1,"146":1,"147":1,"161":1,"164":1,"165":1,"171":1,"174":1,"175":1,"181":1,"184":1,"185":1,"188":1,"190":1,"193":1,"329":1,"333":1,"353":1},"1":{"86":1,"87":1,"88":1,"136":1,"137":1,"138":1,"145":1,"146":1,"148":1,"149":1,"150":1,"330":1},"2":{"34":1,"36":3,"53":1,"59":2,"60":2,"61":2,"62":1,"63":3,"68":1,"72":1,"75":1,"78":1,"79":1,"80":1,"82":1,"83":1,"85":2,"86":1,"87":2,"89":4,"90":3,"91":2,"93":3,"95":2,"96":4,"97":3,"100":5,"103":1,"104":1,"105":1,"106":3,"107":2,"108":1,"109":2,"110":1,"111":1,"112":1,"113":1,"114":5,"115":1,"116":1,"120":5,"121":1,"123":5,"124":3,"125":3,"126":1,"127":2,"128":1,"129":5,"130":1,"133":1,"135":2,"136":1,"137":2,"145":2,"146":1,"149":2,"151":1,"153":3,"154":1,"155":2,"157":1,"158":1,"159":2,"162":2,"163":1,"164":2,"165":2,"169":2,"172":1,"173":1,"174":3,"177":1,"182":1,"183":2,"184":4,"187":1,"188":2,"189":2,"190":2,"191":1,"192":3,"193":2,"194":1,"195":3,"197":2,"198":1,"199":1,"200":1,"204":1,"213":1,"261":1,"262":1,"273":1,"274":1,"283":1,"284":1,"304":1,"313":1,"317":4,"321":1,"329":2,"330":3,"331":1,"332":2,"333":8,"345":1,"355":1,"358":4,"359":5,"379":3}}],["you",{"0":{"91":1,"159":1},"2":{"34":1,"35":1,"38":1,"40":1,"41":1,"58":2,"59":3,"60":2,"63":1,"66":5,"68":1,"70":1,"72":2,"75":8,"76":4,"77":1,"78":3,"79":2,"80":3,"82":1,"83":1,"85":1,"87":3,"89":1,"90":1,"91":1,"96":3,"100":1,"102":3,"103":2,"104":1,"106":1,"107":3,"108":3,"109":5,"110":1,"111":2,"112":1,"113":4,"114":3,"115":3,"116":2,"118":1,"119":2,"120":2,"121":2,"122":2,"123":6,"124":3,"125":3,"126":1,"127":8,"128":3,"129":7,"131":2,"133":2,"135":1,"137":3,"141":2,"143":1,"145":2,"146":1,"148":2,"149":1,"151":2,"152":5,"153":4,"154":1,"155":3,"158":1,"159":1,"160":5,"161":4,"162":5,"163":4,"164":3,"165":6,"167":1,"169":1,"170":5,"171":3,"172":2,"173":2,"174":4,"175":1,"180":5,"181":3,"182":2,"183":2,"184":4,"187":1,"188":4,"191":1,"194":1,"195":4,"196":4,"197":1,"198":1,"199":5,"200":1,"205":2,"215":2,"218":2,"219":1,"271":1,"273":3,"274":2,"280":1,"281":2,"282":2,"283":3,"285":1,"286":2,"289":1,"304":1,"309":1,"313":1,"317":3,"323":2,"331":1,"332":2,"333":9,"355":1,"358":4,"359":4,"369":1,"370":1,"371":2,"372":1,"373":1,"374":1,"378":1,"379":4}}],["2123",{"2":{"287":2}}],["22",{"2":{"287":3}}],["230",{"2":{"286":1}}],["24th",{"2":{"268":1}}],["2470",{"2":{"215":1}}],["2nd",{"2":{"268":1}}],["255",{"2":{"229":1}}],["200",{"2":{"293":1,"294":1,"296":1,"307":1,"351":1}}],["200000000000000000000",{"2":{"293":1,"294":1,"307":1}}],["2023",{"2":{"270":1,"287":4}}],["2021",{"2":{"268":1}}],["2020",{"2":{"268":1,"269":1}}],["20",{"0":{"178":1,"371":1},"2":{"177":1,"178":2,"179":1,"181":1,"371":3,"372":1,"373":1}}],["2981",{"2":{"87":1,"137":1}}],["2",{"0":{"75":1,"79":1,"107":1,"144":1,"162":1,"172":1,"182":1,"189":1,"216":1,"219":1,"274":1,"365":1},"1":{"108":1,"109":1,"110":1,"111":1,"145":1,"146":1},"2":{"35":3,"188":1,"230":2,"231":4,"272":2,"274":2}}],["7908",{"2":{"312":1}}],["712",{"0":{"262":1},"2":{"262":1}}],["721",{"0":{"168":1,"372":1},"2":{"167":1,"168":2,"169":2,"171":1,"179":1,"372":2}}],["7",{"0":{"194":1},"2":{"35":3,"317":1,"318":1}}],["5931",{"2":{"312":1}}],["50",{"2":{"287":3}}],["5",{"0":{"125":1,"154":1,"165":1,"175":1,"185":1,"192":1,"368":1},"1":{"126":1,"127":1,"128":1,"155":1},"2":{"35":3,"165":1,"175":1,"230":2,"231":3,"318":1}}],["equivalent",{"2":{"377":1}}],["equips",{"2":{"81":1}}],["equally",{"2":{"374":1}}],["ephemeral",{"2":{"361":1,"362":1,"365":1}}],["e6513a60b63359a365f0d3f05744d89823278ec829fc5cb4d275bb815d0f5887",{"2":{"295":1}}],["err",{"2":{"359":2}}],["error",{"2":{"286":6,"293":1,"312":3}}],["erc1271",{"2":{"263":1}}],["erc1155data",{"2":{"374":2}}],["erc1155contractaddress",{"2":{"373":2,"374":1}}],["erc1155tokenaddress",{"2":{"373":1}}],["erc1155interface",{"2":{"373":5,"374":2}}],["erc1155",{"0":{"296":1},"2":{"63":1,"145":1,"149":1,"296":1}}],["erc",{"0":{"158":1,"168":2,"178":1,"261":1,"262":1,"371":1,"372":1,"373":1},"2":{"87":1,"137":1,"157":1,"158":1,"161":2,"163":1,"167":2,"168":3,"169":3,"171":1,"177":1,"178":2,"179":2,"181":1,"193":1,"195":1,"260":1,"261":1,"262":1,"371":3,"372":3,"373":3}}],["erc20data",{"2":{"374":2}}],["erc20interface",{"2":{"371":5,"374":2}}],["erc20",{"0":{"294":1},"2":{"63":1,"145":1,"149":1,"211":1,"294":1}}],["erc721data",{"2":{"374":2}}],["erc721contractaddress",{"2":{"372":2,"374":1}}],["erc721tokenaddress",{"2":{"372":1}}],["erc721interface",{"2":{"372":5,"374":2}}],["erc721",{"0":{"295":1},"2":{"63":1,"145":1,"149":1,"295":1}}],["element",{"2":{"286":2}}],["else",{"2":{"273":1,"312":1,"367":1,"369":1}}],["eoa",{"2":{"229":1,"378":1}}],["eoas",{"2":{"206":1,"207":1,"210":1,"313":1}}],["eip1271",{"2":{"359":1,"379":1}}],["eip712",{"2":{"339":1,"358":4}}],["eip",{"2":{"215":1,"229":1,"248":1,"359":1}}],["either",{"2":{"60":1,"70":1,"107":1,"238":1,"274":1,"309":1,"310":1,"324":1,"374":1}}],["ecdsa",{"2":{"207":1}}],["economies",{"2":{"177":1}}],["ecosystem",{"2":{"61":1}}],["established",{"2":{"304":1}}],["estimations",{"2":{"153":1}}],["essence",{"2":{"221":1}}],["essentially",{"2":{"196":1}}],["ethkit",{"0":{"378":1},"2":{"378":2}}],["ethauth",{"2":{"338":1,"339":1,"340":1,"358":1,"359":7}}],["eth",{"2":{"293":1,"333":1}}],["ether",{"2":{"262":1}}],["ethereum",{"0":{"261":1,"354":1},"2":{"81":1,"206":1,"207":1,"261":1,"271":1,"293":1,"313":1,"321":1,"332":3,"333":1,"378":1,"379":1}}],["ethers",{"0":{"253":1,"254":1,"353":1},"2":{"35":3,"236":7,"241":4,"249":4,"255":2,"317":4,"318":2,"332":1,"359":3,"364":2,"365":3,"369":1,"371":2,"372":2,"373":2,"374":3,"378":1}}],["etc",{"2":{"188":1,"273":1,"274":1,"284":1,"293":1}}],["euros",{"2":{"179":1}}],["evm",{"2":{"139":1,"213":2,"271":1,"333":1}}],["event",{"2":{"301":2,"333":1}}],["events",{"2":{"82":1,"308":1}}],["even",{"2":{"240":1,"248":1,"324":1,"328":1,"374":1}}],["everywhere",{"2":{"332":1}}],["every",{"2":{"159":1,"179":1,"227":1,"229":1,"232":1,"237":1,"241":1,"361":1}}],["everything",{"2":{"77":1,"87":1,"137":1,"162":1,"172":1,"182":1}}],["earlier",{"2":{"165":1,"168":1,"196":1}}],["each",{"0":{"133":1},"2":{"76":2,"77":1,"91":1,"107":1,"114":2,"124":1,"159":1,"163":2,"179":2,"188":1,"189":3,"213":2,"216":1,"271":2,"272":1,"290":1,"324":2,"362":1}}],["ease",{"2":{"168":1}}],["easier",{"2":{"213":1}}],["easiest",{"2":{"77":1,"298":1}}],["easily",{"2":{"52":1,"93":1,"179":1,"187":1,"358":1,"379":1}}],["easy",{"2":{"64":1,"70":1,"72":1,"91":2,"93":1,"178":1,"200":1,"208":1,"374":1}}],["effectively",{"2":{"326":1}}],["effective",{"2":{"69":1}}],["efficient",{"2":{"69":1,"168":1,"169":1}}],["effortlessly",{"2":{"329":1,"330":1}}],["effortless",{"2":{"64":1}}],["edit",{"2":{"66":1,"114":1,"116":1}}],["env",{"2":{"282":2,"284":2,"285":2,"286":2,"287":2,"288":2,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"311":2,"312":2}}],["environment",{"2":{"216":1}}],["enforce",{"2":{"274":1}}],["enforcing",{"2":{"87":1,"137":1}}],["enclave",{"2":{"273":1}}],["encrypted",{"2":{"273":1}}],["encoding",{"0":{"259":1,"260":1},"1":{"261":1,"262":1,"263":1}}],["encodetypeddatadigest",{"2":{"262":2}}],["encoded",{"2":{"261":2,"262":1,"263":1}}],["encodefunctiondata",{"2":{"249":2,"255":1,"371":3,"372":3,"373":3,"374":3}}],["encode",{"2":{"241":1,"262":1,"263":1,"371":2,"372":2,"373":2}}],["endpoints",{"2":{"204":1}}],["endpoint",{"2":{"199":2}}],["entry",{"2":{"289":1}}],["entire",{"2":{"190":1}}],["entering",{"2":{"107":1}}],["enter",{"0":{"78":1},"2":{"78":1,"105":1,"108":1,"109":1,"117":1,"123":1,"127":1,"128":1,"129":1,"163":3,"173":2,"183":2,"197":1}}],["ensure",{"2":{"90":1,"123":1,"133":1,"219":1,"248":1,"328":2,"358":1}}],["engine",{"2":{"132":2}}],["engines",{"2":{"131":1}}],["engineered",{"2":{"90":1}}],["engagement",{"2":{"69":1}}],["enable",{"2":{"123":1,"124":1}}],["enabled",{"2":{"91":1}}],["enables",{"2":{"52":1,"271":1}}],["enabling",{"2":{"68":1,"123":1,"132":1,"273":1,"330":1}}],["enjoyable",{"2":{"69":1}}],["enjoy",{"2":{"61":1,"330":1}}],["e",{"2":{"56":1,"211":1,"273":1,"313":1,"362":1}}],["emitted",{"2":{"311":1}}],["email",{"0":{"285":1,"303":1},"2":{"48":1,"75":1,"133":1,"273":1,"274":1,"284":1,"285":13,"301":3,"303":1,"304":1,"305":2,"306":1,"325":2,"328":2,"343":1,"347":3,"348":1}}],["embedded",{"0":{"13":1,"19":1,"37":1,"39":1,"271":1},"1":{"272":1,"273":1,"274":1,"275":1},"2":{"34":1,"35":1,"37":1,"39":1,"51":1,"132":1,"133":1,"188":1,"271":2,"272":1,"277":1,"278":1,"280":2,"281":3,"282":1,"283":1,"285":1,"293":1,"302":1,"312":1,"317":2,"330":2}}],["extra",{"2":{"292":1,"379":2}}],["extensions",{"2":{"333":1}}],["extension",{"0":{"322":1,"354":1},"2":{"322":1,"332":2,"353":1,"354":1}}],["extend",{"2":{"250":1}}],["external",{"2":{"239":1,"247":1,"273":1}}],["externally",{"0":{"207":1},"1":{"208":1,"209":1},"2":{"206":1,"207":1,"252":1,"313":1}}],["excellent",{"2":{"332":1}}],["except",{"2":{"285":1}}],["exchangeable",{"2":{"179":1}}],["exist",{"2":{"284":1}}],["exists",{"2":{"214":1,"217":1}}],["existing",{"0":{"317":1},"1":{"318":1},"2":{"59":1,"87":1,"100":1,"114":1,"132":1,"133":1,"137":1}}],["executed",{"2":{"223":1,"311":1,"312":2,"371":1,"372":1,"373":1}}],["execute",{"2":{"153":1,"164":1,"174":1,"184":1}}],["executing",{"2":{"64":1,"215":1,"218":1,"254":2,"293":1,"310":1}}],["expiry",{"0":{"338":1},"2":{"338":2}}],["expiresat",{"2":{"287":2}}],["expires",{"2":{"109":1,"312":1}}],["expand",{"2":{"114":1,"163":1,"173":1,"183":1,"196":1,"197":1}}],["expanding",{"2":{"61":1}}],["expected",{"2":{"224":1}}],["expect",{"0":{"90":1}}],["experiences",{"2":{"273":1}}],["experience",{"2":{"41":1,"69":1,"85":2,"87":1,"132":1,"135":2,"137":1,"328":1,"329":1,"330":1,"332":1,"358":1,"362":1}}],["exploring",{"2":{"80":1}}],["explore",{"2":{"64":1,"330":1}}],["export",{"2":{"59":1,"266":1,"286":3}}],["examples",{"0":{"209":1,"212":1},"2":{"333":1}}],["example",{"0":{"40":1,"230":1},"2":{"40":1,"56":1,"57":1,"59":2,"155":1,"161":1,"163":1,"165":1,"173":1,"175":1,"183":1,"217":1,"230":1,"274":1,"285":1,"293":1,"325":1,"333":1,"335":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"355":1,"358":1,"359":1,"370":1,"379":1}}],["vocs",{"0":{"360":1}}],["v3",{"2":{"359":1}}],["vulnerate",{"2":{"275":1}}],["v1",{"0":{"217":1,"234":1},"1":{"218":1,"219":1,"220":1},"2":{"217":1}}],["v2",{"0":{"214":1},"1":{"215":1,"216":1},"2":{"359":2}}],["vs",{"0":{"168":1,"179":1}}],["very",{"2":{"332":1}}],["version",{"2":{"317":1}}],["versatility",{"2":{"168":1}}],["verbose",{"2":{"301":1}}],["verifymessage",{"2":{"369":1}}],["verifying",{"2":{"274":1}}],["verify",{"0":{"367":1,"369":1},"2":{"273":1,"358":2,"359":1,"367":1,"369":1,"379":1}}],["verifiable",{"2":{"362":1}}],["verifies",{"2":{"263":1}}],["verified",{"2":{"263":1,"275":1,"337":1}}],["verification",{"0":{"263":1},"2":{"260":1,"303":1,"304":1}}],["ve",{"2":{"91":1,"153":1,"195":1,"198":1,"332":2}}],["vision",{"2":{"285":1}}],["visible",{"2":{"106":1,"111":1,"205":1,"323":1}}],["video",{"2":{"107":1,"112":1}}],["virtual",{"2":{"69":1,"210":1,"213":1,"263":1}}],["via",{"0":{"355":1},"2":{"58":1,"205":3,"274":1,"304":1,"318":1,"323":3,"325":1,"330":1,"332":4,"355":3}}],["views",{"2":{"132":1,"133":1}}],["viewing",{"2":{"79":1}}],["view",{"2":{"51":3,"66":1,"146":1,"162":1,"172":1,"182":1,"194":1,"243":1,"263":1,"301":6,"311":1,"312":1}}],["viem",{"2":{"35":4}}],["vary",{"2":{"317":1}}],["varies",{"2":{"241":1}}],["variety",{"2":{"172":1,"182":1}}],["variables",{"2":{"216":1}}],["various",{"2":{"35":1,"44":1,"63":1,"64":1,"69":1,"100":1,"168":1,"169":1}}],["vastly",{"2":{"132":1}}],["value",{"0":{"253":1},"2":{"178":1,"224":1,"241":1,"249":2,"253":1,"255":1,"263":3,"293":2,"294":1,"296":2,"299":2,"300":2,"301":8,"307":1,"308":1,"309":1,"311":1,"312":2,"337":1,"370":1,"371":2,"373":2,"374":5}}],["values",{"0":{"225":1,"245":1},"2":{"43":1,"44":1,"49":1,"50":1,"97":1,"226":1,"236":1,"296":1}}],["valid`",{"2":{"359":1}}],["validity",{"2":{"249":1}}],["validating",{"2":{"359":1}}],["validations",{"0":{"308":1}}],["validation",{"0":{"242":1,"302":1,"305":1,"306":1,"309":1},"1":{"243":1,"244":1,"245":1,"303":1,"304":1,"305":1,"306":2,"307":3,"308":2,"309":1},"2":{"242":1,"284":1,"301":1,"304":1,"305":2,"306":1,"307":5,"308":3,"309":4}}],["validator",{"2":{"359":3}}],["validatesequencewalletproof",{"2":{"359":2}}],["validatesession",{"2":{"306":2}}],["validates",{"2":{"243":1}}],["validate",{"2":{"236":1,"242":1,"243":1,"263":2,"293":1,"303":1,"306":1,"359":1}}],["validated",{"2":{"232":2,"244":1,"248":1,"291":1,"306":1}}],["valid",{"0":{"231":1},"2":{"109":1,"197":1,"224":1,"225":2,"228":1,"248":1,"254":1,"263":4,"287":1,"306":1,"333":1,"369":1}}],["os",{"2":{"355":2}}],["omitted",{"2":{"337":1}}],["otp",{"2":{"274":1,"285":4}}],["otherwise",{"2":{"261":1,"262":1,"263":1,"306":2}}],["others",{"2":{"61":1}}],["other",{"0":{"379":1},"2":{"35":1,"59":1,"60":1,"95":1,"154":1,"164":1,"174":1,"178":1,"179":1,"184":1,"197":1,"237":1,"240":1,"248":1,"274":2,"352":1,"359":1,"379":1}}],["oauth",{"2":{"274":1,"286":4}}],["oasys",{"2":{"81":2}}],["obtained",{"2":{"285":1,"286":1}}],["obtain",{"2":{"224":1,"226":1,"285":2,"286":2}}],["obtaining",{"2":{"69":1}}],["object",{"2":{"43":2,"45":1,"54":1,"55":1,"157":1,"311":2,"312":1,"334":1,"358":2}}],["objectdark",{"2":{"43":1}}],["our",{"2":{"63":1,"90":1,"91":2,"127":1,"132":1,"145":1,"167":1,"202":1,"203":1,"277":2,"278":1,"315":1,"329":1,"330":1,"331":1,"378":1}}],["outside",{"2":{"333":1}}],["outputs",{"2":{"301":9}}],["out",{"0":{"86":1,"136":1},"1":{"87":1,"137":1},"2":{"56":1,"82":1,"163":3,"202":1,"204":1,"261":1,"262":1,"277":1,"315":1,"330":1,"331":1,"333":1,"359":1}}],["owner",{"0":{"150":1},"2":{"150":1,"155":1,"271":1,"301":3,"313":1}}],["owners",{"2":{"70":1}}],["owned",{"0":{"207":1},"1":{"208":1,"209":1},"2":{"51":1,"82":1,"83":1,"206":1,"207":1,"313":1,"327":1}}],["own",{"0":{"87":1,"137":1,"146":1},"2":{"59":1,"63":1,"146":1,"157":1,"159":1,"163":2,"173":1,"177":1,"183":1,"184":1,"199":1,"204":1,"324":1,"330":1}}],["often",{"2":{"167":1,"178":1}}],["offchain",{"2":{"291":1}}],["offer",{"2":{"124":1,"132":1,"273":1,"332":1}}],["offered",{"2":{"97":1}}],["offering",{"2":{"90":1}}],["offers",{"2":{"83":1,"89":1,"130":1,"168":1,"200":1,"271":1}}],["off",{"2":{"70":1}}],["official",{"2":{"49":1,"50":1,"58":1,"59":1}}],["of",{"0":{"90":1,"119":1,"122":1,"133":1,"231":1,"374":1},"1":{"120":1,"121":1,"123":1,"124":1,"126":1},"2":{"44":1,"46":1,"47":1,"49":1,"50":1,"51":1,"57":1,"59":2,"60":2,"61":1,"62":1,"63":2,"66":1,"75":1,"76":2,"80":1,"82":2,"83":1,"87":2,"93":1,"94":2,"96":3,"97":2,"100":2,"102":1,"103":1,"104":1,"106":1,"107":1,"109":2,"111":1,"113":1,"114":4,"115":1,"116":1,"119":1,"121":1,"122":1,"123":2,"125":1,"129":1,"131":1,"133":2,"137":2,"145":2,"146":1,"151":1,"152":1,"153":2,"155":2,"157":1,"158":2,"162":1,"163":7,"165":2,"169":1,"172":2,"173":1,"175":1,"177":1,"178":1,"182":2,"183":1,"189":1,"191":2,"192":1,"195":3,"197":1,"204":1,"207":2,"210":2,"213":1,"215":2,"216":1,"217":1,"218":2,"219":1,"221":1,"225":2,"226":2,"227":1,"228":2,"229":3,"230":1,"231":4,"232":2,"235":2,"236":2,"237":3,"239":3,"240":2,"241":1,"242":5,"243":1,"244":1,"246":1,"248":5,"249":2,"253":1,"254":3,"256":1,"257":1,"260":1,"261":1,"262":1,"267":1,"271":3,"272":4,"274":4,"275":3,"277":1,"282":1,"283":1,"284":1,"287":1,"288":1,"290":1,"293":4,"294":1,"295":1,"304":1,"305":1,"311":2,"313":1,"317":1,"324":3,"325":2,"326":1,"327":1,"328":2,"329":2,"330":2,"332":7,"333":1,"335":1,"337":1,"344":2,"345":1,"349":1,"350":1,"353":1,"355":1,"358":1,"362":1,"371":1,"372":1,"373":1,"377":2,"378":2}}],["overage",{"0":{"128":1},"2":{"100":1,"125":1,"126":1,"128":4}}],["over",{"2":{"70":1,"87":1,"137":1,"189":1,"198":1,"313":1,"327":1,"328":1}}],["overview",{"0":{"52":1,"200":1,"272":1},"1":{"273":1,"274":1},"2":{"204":1}}],["override",{"2":{"43":1,"239":1,"243":1,"247":1,"263":1}}],["overwritten",{"2":{"43":1}}],["opcode",{"2":{"236":1}}],["opcodes",{"2":{"213":1}}],["optimism",{"2":{"81":1}}],["option",{"2":{"63":1,"75":1,"105":1,"106":1,"107":1,"128":1,"129":2,"332":2,"334":1,"347":1,"352":1,"355":1}}],["options",{"0":{"41":1,"42":1,"63":1,"100":1,"131":1,"132":1,"334":1},"1":{"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1},"2":{"41":2,"49":2,"50":2,"59":2,"70":1,"75":1,"104":1,"114":1,"130":1,"145":1,"162":4,"172":4,"182":4,"205":2,"323":2,"324":1,"331":1,"333":2,"348":1}}],["optionally",{"2":{"318":1,"333":1}}],["optional",{"2":{"37":1,"107":1,"109":1,"340":1}}],["operated",{"2":{"273":1}}],["operate",{"2":{"272":1}}],["operational",{"2":{"282":1}}],["operation",{"2":{"239":1,"251":1,"254":1,"284":1}}],["operations",{"2":{"64":1,"168":1,"289":1,"294":1}}],["openwithoptions",{"2":{"333":2}}],["openwalletintent",{"2":{"333":1}}],["openwallet",{"2":{"333":3}}],["opened",{"2":{"284":1,"285":1}}],["opensea",{"2":{"87":1,"137":1}}],["opening",{"0":{"54":1},"2":{"107":1,"172":1,"182":1,"337":1}}],["open",{"2":{"39":2,"54":1,"66":1,"104":1,"113":1,"114":1,"125":1,"143":1,"146":1,"162":1,"191":1,"285":2,"286":1,"333":2,"342":1,"350":1,"378":1}}],["origin",{"0":{"337":1},"2":{"337":1}}],["orderbook",{"2":{"203":1,"204":1}}],["ordersummaryitems",{"0":{"57":1},"2":{"55":1,"57":2}}],["order",{"0":{"57":1},"2":{"49":1,"50":1,"57":1,"151":1,"164":1,"174":1,"184":1,"219":1,"236":1,"272":1,"284":1}}],["or",{"0":{"116":1,"353":1},"1":{"117":1,"118":1},"2":{"35":2,"43":1,"53":2,"56":1,"59":1,"60":1,"66":1,"70":1,"75":1,"80":1,"82":3,"87":1,"95":1,"96":1,"97":2,"100":3,"107":1,"109":2,"114":4,"116":1,"120":1,"123":1,"133":1,"137":1,"149":1,"159":1,"162":1,"163":1,"172":1,"178":1,"179":3,"182":1,"197":1,"206":1,"213":1,"220":1,"225":1,"226":1,"229":1,"238":1,"242":1,"257":1,"271":1,"273":1,"274":1,"275":2,"291":1,"297":1,"298":1,"301":1,"304":1,"307":2,"309":2,"310":1,"311":1,"312":1,"317":2,"320":1,"321":1,"324":1,"325":3,"328":3,"331":1,"332":1,"333":1,"345":1,"352":1,"359":2,"361":1,"362":1,"367":1,"369":1,"374":1,"376":1,"379":2}}],["onboard",{"2":{"332":1}}],["onboarding",{"2":{"69":1,"329":1,"330":1,"332":1}}],["onvalidationrequired",{"0":{"307":1},"2":{"307":2,"308":2,"309":3}}],["onsuccess=",{"2":{"286":1}}],["onsessionstatechanged",{"2":{"286":2}}],["onmeta",{"2":{"205":1,"323":1}}],["one",{"0":{"303":1},"2":{"66":1,"77":1,"80":1,"81":1,"116":1,"127":1,"145":1,"158":1,"163":1,"195":1,"238":1,"243":1,"256":1,"272":1,"285":1,"303":1,"304":1,"313":1,"324":1,"325":1,"344":1,"355":1,"371":1,"372":1,"373":1}}],["onchainreader",{"2":{"359":1}}],["onchain",{"2":{"291":1}}],["once",{"2":{"38":1,"66":2,"76":1,"79":1,"127":1,"143":1,"153":1,"161":1,"163":1,"171":1,"174":1,"181":1,"184":1,"194":1,"215":1,"218":1,"255":1,"281":1,"285":1,"289":1,"306":1,"325":1,"333":1,"355":1}}],["onclick=",{"2":{"38":1,"39":1,"54":1}}],["onclick",{"2":{"38":2,"39":2,"54":2,"333":1}}],["onlyself",{"2":{"239":1,"240":1,"247":1,"248":1}}],["only",{"2":{"35":1,"51":1,"94":1,"123":1,"124":1,"205":1,"213":1,"226":1,"238":1,"240":1,"242":1,"248":1,"271":1,"274":3,"281":1,"287":1,"301":1,"312":1,"317":1,"323":1,"324":2,"328":1,"346":1,"352":1,"369":1,"370":2,"372":1,"373":1}}],["onramp",{"0":{"24":1}}],["on",{"0":{"22":1,"23":1,"24":1,"84":1,"189":1,"192":1,"205":1,"265":1,"323":1},"2":{"44":1,"59":2,"60":1,"64":1,"67":1,"69":1,"70":2,"74":1,"76":1,"78":1,"80":1,"82":1,"83":1,"93":1,"103":2,"106":1,"108":1,"109":1,"113":1,"123":1,"127":1,"128":1,"141":1,"142":1,"151":1,"153":2,"154":1,"162":1,"163":1,"164":2,"167":2,"169":2,"172":2,"174":2,"178":1,"179":1,"182":2,"184":2,"188":1,"190":1,"191":2,"192":2,"193":1,"194":1,"195":2,"196":1,"205":5,"207":1,"213":2,"214":1,"217":1,"225":1,"226":1,"232":1,"237":1,"241":1,"242":1,"250":1,"252":1,"254":1,"263":1,"271":1,"273":1,"275":1,"280":1,"289":1,"302":1,"312":2,"313":1,"317":3,"320":1,"321":2,"323":5,"324":2,"329":1,"332":5,"333":3,"335":1,"352":1,"353":1,"359":4,"362":1,"367":1,"369":1,"371":1,"372":1,"373":1,"376":1,"379":1}}],["python",{"2":{"379":1}}],["png",{"2":{"333":2,"345":1}}],["pnpm",{"2":{"35":1,"53":1,"280":1,"317":2}}],["philosophy",{"2":{"324":1}}],["phone",{"2":{"274":1,"301":1,"320":1,"321":1,"332":2}}],["pick",{"2":{"333":1,"348":1}}],["pixel",{"2":{"287":1}}],["pinata",{"0":{"189":1},"2":{"187":1,"189":2,"190":1,"191":1,"196":1,"197":1}}],["publicly",{"2":{"273":1}}],["public",{"2":{"223":1,"263":1}}],["purchasing",{"2":{"352":1}}],["purchase",{"2":{"205":2,"323":2,"351":1,"352":2}}],["purposes",{"2":{"178":1}}],["put",{"2":{"163":1,"173":1,"183":1}}],["pull",{"2":{"61":1}}],["people",{"2":{"93":1}}],["peak",{"2":{"90":1}}],["perfectly",{"2":{"376":1}}],["perform",{"2":{"307":1,"339":1,"368":1}}],["performed",{"2":{"289":1,"309":1}}],["performs",{"2":{"274":1}}],["performance",{"0":{"90":1}}],["performant",{"2":{"89":1}}],["performing",{"2":{"64":1}}],["perspective",{"2":{"355":1}}],["person",{"2":{"262":1}}],["permanently",{"2":{"129":1}}],["permissions",{"2":{"66":2,"129":1}}],["period",{"2":{"126":2}}],["per",{"2":{"100":1,"215":1}}],["prudent",{"2":{"326":1}}],["primary",{"2":{"362":2}}],["primitive",{"2":{"207":1}}],["private",{"2":{"313":2,"324":3,"325":1,"328":1,"362":1,"365":1}}],["privacy",{"2":{"76":1}}],["prices",{"2":{"293":1}}],["prevent",{"2":{"286":1,"352":1}}],["previously",{"2":{"355":1}}],["previous",{"2":{"219":1,"370":1}}],["preview",{"2":{"196":1}}],["prefilling",{"2":{"351":1}}],["prefixedmessage",{"2":{"261":2}}],["preference",{"2":{"328":1}}],["prefer",{"2":{"112":1}}],["preferred",{"2":{"91":1}}],["pre",{"2":{"215":2,"218":2}}],["prepared",{"2":{"210":1}}],["prepare",{"0":{"188":1}}],["prerequisite",{"0":{"160":1,"170":1,"180":1}}],["press",{"2":{"106":1}}],["presented",{"2":{"76":1}}],["prove",{"2":{"358":1}}],["providing",{"2":{"87":1,"132":1,"137":1,"149":1,"173":1,"183":1,"273":1,"298":1,"301":1,"329":1}}],["provide",{"0":{"149":1,"163":1,"173":1,"183":1},"2":{"59":1,"60":1,"78":1,"90":1,"115":1,"133":1,"145":1,"150":1,"169":1,"196":1,"206":1,"273":1,"280":1,"285":1,"304":1,"313":1,"317":1,"330":1,"362":1}}],["provider",{"2":{"53":1,"205":1,"241":2,"284":1,"286":2,"304":2,"323":1,"333":1,"346":2,"350":1,"359":2,"367":1}}],["providers",{"2":{"35":1,"90":1,"205":4,"241":1,"284":1,"304":1,"323":4,"346":1,"349":2,"350":1,"359":1}}],["provided",{"2":{"51":3,"223":1,"225":1,"237":1,"243":1,"249":1,"263":4,"281":1,"285":1,"297":1,"298":1,"344":1}}],["provides",{"2":{"43":1,"58":1,"64":1,"69":1,"85":1,"89":1,"93":2,"135":1,"273":1,"275":1}}],["proofstring",{"2":{"359":1}}],["proof",{"2":{"333":2,"338":1,"339":1,"358":2,"359":6}}],["progressively",{"2":{"332":1}}],["program",{"2":{"237":1}}],["pro",{"2":{"284":1,"285":1,"286":1,"287":2,"288":1}}],["protocol",{"2":{"332":1,"336":1}}],["protocols",{"2":{"200":1,"355":1}}],["protect",{"2":{"328":1}}],["protection",{"2":{"275":1,"304":1,"327":1,"340":1}}],["protected",{"2":{"273":1}}],["protects",{"2":{"272":1,"275":1}}],["proper",{"2":{"248":1}}],["property",{"2":{"226":1}}],["properties",{"2":{"179":1}}],["proxy",{"2":{"223":1,"224":1,"225":2,"236":2,"239":1}}],["prone",{"2":{"213":1}}],["pros",{"0":{"208":1,"211":1}}],["prompt",{"2":{"129":1,"308":1,"355":1,"358":1}}],["prompted",{"2":{"111":1,"118":1,"196":1,"355":1}}],["production",{"2":{"97":1}}],["problem",{"2":{"69":1}}],["process",{"0":{"91":1,"214":1,"217":1},"1":{"215":1,"216":1,"218":1,"219":1,"220":1},"2":{"63":1,"68":1,"94":1,"157":1,"177":1,"197":1,"214":1,"217":1,"282":2,"284":2,"285":2,"286":2,"287":2,"288":2,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"311":2,"312":2,"330":1,"333":1,"362":1}}],["projectid",{"2":{"287":2}}],["projects",{"2":{"93":1,"94":1,"95":1,"102":1}}],["project",{"0":{"77":1,"78":1,"79":1,"94":1,"95":1,"98":1,"102":1,"105":1,"127":1,"129":1,"160":1,"170":1,"180":1,"281":1,"317":1},"1":{"78":1,"79":1,"95":1,"96":1,"97":1,"98":1,"318":1},"2":{"47":1,"63":1,"70":2,"72":2,"77":3,"78":3,"79":2,"80":1,"93":1,"95":2,"96":2,"97":3,"100":7,"102":2,"103":1,"105":2,"106":2,"107":2,"108":1,"109":1,"112":1,"115":1,"116":1,"119":1,"122":1,"127":2,"128":1,"129":7,"130":1,"141":1,"142":1,"160":1,"161":1,"170":1,"180":1,"192":1,"274":1,"281":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1,"317":2}}],["projectname",{"0":{"47":1}}],["projectaccesskey",{"2":{"36":2,"37":2,"60":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1,"333":3}}],["plain",{"2":{"358":1}}],["platform",{"2":{"273":1}}],["platforms",{"0":{"319":1},"1":{"320":1,"321":1,"322":1},"2":{"87":1,"94":1,"137":1}}],["plans",{"2":{"127":2}}],["plan",{"0":{"127":1},"2":{"100":1,"125":1,"126":2,"127":4,"128":2,"145":1}}],["play",{"2":{"366":1}}],["playful",{"2":{"95":1}}],["players",{"2":{"90":1}}],["player",{"2":{"69":1,"159":2,"177":1}}],["playground",{"2":{"43":1}}],["places",{"2":{"178":1}}],["place",{"2":{"53":1,"274":1,"275":1}}],["please",{"2":{"36":1,"280":1,"304":1,"317":1,"353":1}}],["potential",{"2":{"133":1,"330":1}}],["powerful",{"2":{"93":2,"132":1}}],["power",{"2":{"90":1,"330":1}}],["popups",{"2":{"333":1}}],["popup",{"2":{"333":2}}],["popular",{"0":{"209":1},"2":{"214":1,"217":1,"329":1,"330":1}}],["pop",{"2":{"78":1,"153":1,"164":1,"174":1,"184":1}}],["policies",{"2":{"94":1}}],["policy",{"2":{"76":1}}],["polygon",{"2":{"36":2,"37":2,"81":3,"312":1,"333":1,"359":1}}],["points",{"2":{"223":1}}],["point",{"2":{"59":1,"97":1,"169":1,"195":1,"224":1,"289":1}}],["possibilities",{"2":{"329":1}}],["possible",{"0":{"67":1},"2":{"43":1,"44":1,"272":1,"275":1,"333":1,"355":1,"361":2}}],["poses",{"2":{"69":1}}],["positional",{"0":{"300":1},"2":{"298":1,"300":1,"301":1}}],["position",{"0":{"44":1},"2":{"44":1}}],["path",{"2":{"286":2,"333":3}}],["pair",{"2":{"207":1}}],["paid",{"2":{"128":2}}],["pasted",{"2":{"355":1}}],["paste",{"2":{"110":1,"120":1,"189":1,"196":1}}],["password",{"2":{"285":1}}],["pass",{"2":{"54":1,"60":1,"284":1,"333":3,"358":1}}],["passed",{"2":{"49":2,"50":2,"242":1,"340":1}}],["passing",{"2":{"41":1,"43":1,"51":1,"300":1}}],["param",{"2":{"263":2}}],["parameters",{"0":{"224":1,"240":1,"244":1,"248":1},"2":{"225":1,"293":1,"298":2,"334":1}}],["parameter",{"2":{"44":1}}],["partner",{"2":{"275":3}}],["party",{"2":{"273":1,"274":1}}],["partial",{"2":{"251":1,"275":1}}],["particularly",{"2":{"168":1,"362":1}}],["part",{"2":{"96":1,"378":1}}],["payload",{"2":{"370":1}}],["paypal",{"2":{"332":1}}],["payable",{"2":{"223":1,"301":11}}],["pay",{"2":{"211":1,"218":1}}],["paytrie",{"2":{"205":1,"323":1}}],["payment",{"2":{"127":1,"205":1,"323":1,"349":2,"350":2}}],["payments",{"2":{"52":1}}],["paying",{"2":{"70":1}}],["palette",{"2":{"43":1}}],["page",{"2":{"37":1,"49":1,"50":1,"53":1,"139":1,"350":1}}],["package",{"2":{"35":2,"58":1,"286":1,"317":4,"332":1,"376":1}}],["packages",{"0":{"35":1},"2":{"35":1,"317":2}}],["null",{"2":{"311":1,"312":1}}],["number",{"2":{"51":1,"109":1,"165":1,"197":1,"274":1,"301":1,"338":1,"340":1,"362":1}}],["nitro",{"2":{"273":1,"285":1}}],["nick",{"2":{"213":1,"218":1}}],["n",{"2":{"261":1}}],["nanouniversaldeployer",{"0":{"218":1},"2":{"218":4}}],["nativereceipt",{"2":{"293":1,"294":1,"295":1,"311":1}}],["native",{"0":{"318":1},"2":{"153":1,"272":1,"371":1,"372":1,"373":1,"374":1}}],["navigating",{"2":{"100":1}}],["navigate",{"0":{"162":1,"172":1,"182":1},"2":{"66":1,"192":1,"195":1,"286":2}}],["nametyperangedescription",{"2":{"229":1}}],["nametyperangedescriptionthresholduint161",{"2":{"228":1}}],["nametypedescription",{"2":{"224":1,"225":1,"240":1,"244":1,"245":1,"248":1}}],["names",{"2":{"198":1}}],["named",{"0":{"299":1},"2":{"188":1,"298":1,"300":1,"301":1}}],["name",{"0":{"95":1,"105":1,"149":1},"2":{"47":1,"59":2,"78":1,"95":1,"97":1,"100":1,"105":2,"115":1,"117":2,"129":1,"149":1,"188":2,"189":2,"191":1,"193":1,"199":1,"262":4,"290":1,"291":1,"293":1,"294":1,"299":1,"300":1,"301":38,"311":1,"312":1,"317":2,"333":3,"335":1,"344":1,"358":1}}],["nobody",{"2":{"273":1}}],["none",{"2":{"369":1}}],["nonpayable",{"2":{"301":3}}],["nonce=",{"2":{"286":1}}],["nonce",{"2":{"284":1,"293":1,"340":1}}],["non",{"0":{"179":1},"2":{"133":1,"158":1,"167":1,"168":1,"179":1,"257":3,"271":1,"313":1,"328":1}}],["notable",{"2":{"372":1,"373":1}}],["nothing",{"2":{"355":1}}],["note",{"2":{"131":1,"267":1,"282":1,"284":1,"333":1,"358":1,"369":1,"370":1}}],["notice",{"2":{"129":1,"213":1,"214":1,"217":1,"263":1,"293":1,"300":1}}],["notification",{"2":{"111":1,"121":1}}],["not",{"2":{"129":1,"149":1,"152":1,"160":1,"170":1,"179":1,"180":1,"210":1,"213":1,"214":1,"215":1,"217":1,"218":1,"225":2,"248":2,"254":1,"257":1,"274":2,"293":1,"297":1,"303":1,"307":1,"312":1,"351":1,"359":1,"367":1}}],["nodejs",{"0":{"376":1},"2":{"376":1}}],["node",{"0":{"89":1,"92":1},"1":{"90":1,"91":1,"92":1},"2":{"89":2,"90":5,"93":1,"113":1}}],["nova",{"2":{"81":1}}],["now",{"2":{"76":1,"79":2,"80":1,"102":1,"103":1,"120":1,"123":1,"155":1,"165":1,"190":1,"195":1,"199":1}}],["no",{"0":{"361":1},"2":{"51":1,"85":1,"90":1,"94":1,"111":1,"135":1,"223":1,"249":1,"250":1,"274":1,"292":1,"332":1}}],["nested",{"0":{"264":1}}],["necessitating",{"2":{"168":1}}],["necessary",{"2":{"35":1,"82":1,"85":1,"135":1,"149":1}}],["never",{"2":{"133":1,"232":2,"312":1}}],["near",{"2":{"124":1}}],["networks",{"0":{"97":1,"140":1},"2":{"81":1,"97":5,"100":2,"113":3,"139":1,"213":1,"214":2,"217":2}}],["network",{"0":{"113":1,"148":1},"2":{"63":1,"67":1,"78":1,"91":1,"113":2,"148":2,"151":1,"153":3,"154":2,"162":1,"164":2,"172":1,"174":2,"182":1,"184":2,"192":1,"214":1,"216":1,"217":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":4,"294":1,"295":1,"296":1,"311":2,"312":5,"328":2,"370":1}}],["next",{"0":{"331":1},"2":{"60":1,"126":1,"189":1}}],["needs",{"2":{"169":1,"249":1,"257":1,"355":1}}],["need",{"2":{"60":1,"90":1,"115":1,"120":1,"123":1,"125":1,"128":1,"129":1,"133":1,"149":1,"151":1,"152":1,"160":1,"164":1,"170":1,"174":1,"180":1,"184":1,"188":1,"200":1,"219":1,"226":1,"250":1,"252":1,"273":1,"281":1,"282":1,"283":2,"285":1,"293":1,"304":1,"313":1,"324":1,"355":1}}],["needed",{"2":{"59":1,"69":1,"89":1,"325":1,"362":1}}],["newimagehash",{"2":{"249":1,"255":1}}],["newly",{"2":{"155":1}}],["new",{"0":{"115":1,"143":1},"2":{"36":1,"37":1,"66":1,"79":1,"95":1,"100":1,"105":1,"108":2,"114":1,"115":2,"117":1,"133":1,"143":1,"149":1,"177":1,"191":1,"192":1,"214":1,"217":1,"224":1,"240":1,"241":1,"248":1,"282":2,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1,"328":1,"332":1,"359":4,"364":1,"365":2,"369":1,"371":2,"372":2,"373":2,"374":3}}],["npm",{"2":{"35":1,"53":1,"91":1,"317":2,"332":1}}],["nfts",{"2":{"167":1,"168":1}}],["nft",{"0":{"23":1,"372":1},"2":{"132":1,"133":1,"159":1,"168":1,"178":1,"195":1,"274":1,"372":2}}],["ie",{"2":{"341":1}}],["io",{"2":{"318":1,"359":1}}],["ignored",{"2":{"231":1,"333":1,"346":1,"347":1,"348":1}}],["ipfs",{"2":{"187":1,"188":1,"189":3,"196":1}}],["irreversible",{"2":{"129":1}}],["icon",{"2":{"128":1}}],["immediately",{"2":{"301":1}}],["imagination",{"2":{"159":1}}],["imagehashbytes32hash",{"2":{"244":1,"248":1}}],["imagehash",{"0":{"232":1},"1":{"233":1,"236":1},"2":{"224":1,"232":2,"235":1,"236":1,"243":3,"245":1,"247":2,"248":3,"254":3,"257":4}}],["images",{"0":{"188":1},"2":{"188":1,"189":1,"198":1}}],["image",{"0":{"233":1},"2":{"106":1,"188":1,"189":1,"333":2,"345":3}}],["improved",{"2":{"324":1}}],["improving",{"2":{"132":1}}],["imperative",{"2":{"254":1}}],["implementationaddressaddress",{"2":{"240":1}}],["implementation",{"0":{"238":1,"241":1},"1":{"239":1,"240":1,"241":1},"2":{"224":2,"225":1,"237":1,"239":4,"240":1,"241":4,"249":1}}],["implemented",{"2":{"206":1,"210":1,"242":1}}],["implement",{"0":{"234":1},"2":{"93":1,"208":1,"210":2,"213":1,"242":1,"283":1}}],["important",{"2":{"83":1}}],["import",{"2":{"36":6,"37":8,"38":2,"39":1,"53":1,"54":1,"60":1,"62":1,"91":1,"140":1,"241":1,"261":1,"262":2,"282":1,"284":1,"285":1,"286":8,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1,"333":2,"358":1,"359":5,"364":2}}],["i",{"0":{"64":1,"69":1,"82":1,"83":1,"87":1,"90":1,"131":1,"133":1,"137":1},"2":{"165":2,"313":1}}],["iterate",{"2":{"261":2,"262":2,"263":1}}],["items",{"0":{"156":1,"165":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1},"2":{"157":1,"159":2,"162":1,"163":2,"164":1,"165":4,"167":1,"169":1,"179":1,"187":1}}],["item",{"0":{"141":1,"144":1,"161":1,"186":1},"1":{"142":1,"143":1,"144":1,"145":2,"146":2,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"2":{"132":1,"145":1,"160":1,"161":1,"170":1,"180":1,"188":1,"193":1}}],["itself",{"2":{"240":1,"241":1,"248":1,"252":2,"285":1,"328":1,"372":1,"373":1}}],["its",{"2":{"60":1,"121":1,"151":1,"162":1,"163":1,"168":1,"172":1,"182":1,"333":1,"358":1}}],["it",{"0":{"86":1,"136":1,"159":1},"1":{"87":1,"137":1},"2":{"60":1,"64":1,"70":1,"75":1,"82":1,"83":1,"85":1,"91":2,"93":1,"109":1,"110":2,"115":1,"120":3,"123":1,"135":1,"149":1,"153":3,"155":1,"159":1,"161":1,"162":1,"163":2,"171":1,"172":1,"178":3,"181":1,"182":1,"189":2,"194":1,"195":1,"196":3,"197":3,"199":1,"210":1,"213":2,"221":1,"229":1,"237":3,"238":1,"240":1,"248":2,"251":1,"254":3,"255":1,"256":1,"273":2,"274":5,"275":3,"282":1,"284":1,"290":1,"298":1,"306":2,"307":2,"311":1,"312":2,"320":1,"321":1,"332":1,"333":1,"358":1,"361":1,"365":1,"378":1}}],["if",{"2":{"51":1,"59":2,"75":1,"78":1,"102":1,"112":1,"115":1,"123":1,"129":1,"141":1,"145":1,"149":1,"152":1,"160":1,"165":1,"169":1,"170":1,"180":1,"196":1,"199":1,"210":1,"214":1,"217":1,"225":2,"240":1,"243":1,"245":1,"248":1,"251":1,"254":1,"256":1,"257":1,"261":1,"262":1,"263":3,"275":1,"284":1,"286":1,"293":1,"294":1,"295":1,"304":1,"306":2,"307":2,"311":2,"312":2,"317":1,"324":1,"325":2,"327":2,"328":2,"331":1,"332":3,"333":4,"346":1,"347":1,"348":1,"351":1,"352":1,"355":2,"359":3,"362":1,"367":1,"369":2,"370":1,"379":3}}],["idtoken",{"2":{"284":2,"285":6,"286":2,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1}}],["identify",{"2":{"290":1}}],["identifier",{"2":{"189":1,"219":1,"312":1}}],["identity",{"2":{"96":1,"274":1,"275":1,"303":1,"304":1,"358":1,"359":1}}],["id",{"2":{"36":2,"37":2,"49":1,"50":1,"59":2,"60":1,"163":2,"188":1,"195":1,"196":2,"197":1,"199":1,"274":1,"286":1,"287":2,"288":2,"295":2,"296":3,"311":1,"373":2,"374":1}}],["isthis",{"2":{"287":2}}],["issessionvalid",{"2":{"305":2}}],["issenttransactionresponse",{"2":{"293":3,"294":2,"295":2,"296":1,"311":3,"312":2}}],["issuer",{"2":{"287":2}}],["issued",{"2":{"126":1,"312":1}}],["issignedin",{"2":{"286":1}}],["isvalidmessagesignature",{"2":{"367":1}}],["isvalidsignature",{"2":{"263":3}}],["isvalidbooltrue",{"2":{"245":1}}],["isvalid",{"2":{"243":1,"263":2,"305":2,"367":2}}],["isvalidimage",{"0":{"243":1},"1":{"244":1,"245":1},"2":{"243":1}}],["isconnected",{"2":{"38":2}}],["is",{"0":{"158":1,"178":1},"2":{"35":1,"36":1,"45":1,"59":1,"63":1,"67":1,"70":1,"72":1,"75":2,"77":2,"80":1,"90":2,"93":1,"94":1,"100":3,"105":1,"107":2,"109":1,"120":1,"132":3,"148":1,"149":3,"153":1,"154":1,"155":2,"158":1,"159":2,"165":1,"169":1,"174":1,"178":2,"179":3,"184":1,"194":1,"195":1,"197":2,"199":1,"200":1,"206":1,"214":1,"215":3,"217":1,"218":2,"219":1,"223":1,"225":2,"226":4,"231":1,"232":4,"237":1,"241":1,"242":2,"243":2,"246":1,"247":1,"248":4,"249":4,"250":2,"251":1,"252":1,"253":2,"254":4,"255":1,"256":1,"257":3,"261":2,"262":2,"263":5,"273":3,"274":2,"275":4,"281":2,"282":1,"284":1,"285":3,"286":7,"289":2,"290":3,"293":1,"296":1,"297":1,"298":1,"300":1,"301":2,"303":1,"305":1,"306":1,"307":4,"309":1,"311":1,"312":3,"313":2,"317":1,"324":2,"325":3,"327":1,"328":3,"329":1,"332":6,"333":2,"338":2,"340":1,"342":1,"346":1,"347":1,"348":1,"351":1,"355":6,"358":3,"359":3,"361":2,"371":1,"372":3,"373":3,"374":1,"376":1,"377":4,"378":1,"379":2}}],["initwallet",{"2":{"333":2}}],["initiated",{"2":{"355":1}}],["initiateauth",{"2":{"285":1}}],["initial",{"0":{"235":1},"1":{"236":1},"2":{"224":1,"235":1,"237":1,"238":1}}],["initialization",{"2":{"224":1}}],["initialize",{"0":{"364":1},"2":{"223":1,"249":1}}],["initialized",{"2":{"59":1,"289":1}}],["initially",{"2":{"223":1}}],["inactive",{"2":{"275":1}}],["increase",{"2":{"332":1}}],["incorrect",{"2":{"248":1}}],["inclusive",{"2":{"93":1}}],["including",{"2":{"60":1,"70":1,"108":1,"109":1,"133":1,"145":1,"293":1}}],["includes",{"2":{"287":1,"311":1,"332":1}}],["includedpaymentproviders",{"0":{"349":1},"2":{"333":2,"349":1}}],["included",{"2":{"96":1,"123":1,"162":1,"311":1}}],["include",{"2":{"43":1,"44":1,"123":1,"153":1,"248":1,"293":1}}],["index",{"2":{"311":1}}],["indexeddb",{"2":{"326":2}}],["indexed",{"2":{"301":6}}],["indexer",{"0":{"81":1,"84":1},"1":{"82":1,"83":1,"84":1},"2":{"81":1,"82":2,"83":1,"93":1,"132":1,"139":1,"162":1,"172":1,"182":1}}],["independently",{"2":{"273":1,"274":1,"275":1}}],["independent",{"2":{"267":1,"324":2}}],["individual",{"2":{"179":1,"324":1}}],["involve",{"2":{"310":1}}],["invoking",{"0":{"39":1}}],["invoke",{"2":{"38":1}}],["invalid",{"2":{"225":1,"231":1,"239":1,"369":1}}],["inviting",{"2":{"107":1}}],["invite",{"0":{"109":1,"110":1,"111":1,"112":1},"1":{"110":1,"111":1,"117":1,"118":1,"120":1,"121":1,"123":1,"124":1,"126":1},"2":{"100":1,"107":1,"109":4,"110":1,"111":1,"112":1}}],["infura",{"2":{"359":2}}],["informed",{"2":{"328":1}}],["information",{"0":{"126":1},"2":{"89":1,"107":1,"125":1,"126":1,"127":1,"215":1,"280":1,"317":1,"327":1}}],["info",{"2":{"139":1,"213":1,"214":1,"217":1,"242":1,"328":1,"333":1}}],["infrastructure",{"2":{"89":1,"90":2,"377":1}}],["insert",{"2":{"204":1}}],["ins",{"2":{"75":1}}],["instructions",{"2":{"129":1}}],["instantiating",{"2":{"333":1}}],["instances",{"2":{"215":1,"308":1}}],["instance",{"2":{"83":1,"215":1,"219":1,"282":1,"285":2,"333":2}}],["installed",{"2":{"318":1,"332":1}}],["installation",{"0":{"280":1}}],["install",{"0":{"317":1},"1":{"318":1},"2":{"35":5,"37":1,"53":3,"280":2,"317":4,"322":1,"332":1,"333":2,"354":1}}],["installing",{"0":{"35":1},"2":{"34":1}}],["instead",{"2":{"60":1,"232":2,"249":1,"283":1,"293":1,"324":1,"358":1}}],["inputs",{"2":{"173":1,"183":1,"301":11}}],["input",{"2":{"48":1,"131":1,"225":1,"248":1}}],["inline",{"2":{"48":1}}],["into",{"0":{"131":1,"329":1},"1":{"330":1},"2":{"85":1,"91":1,"100":1,"102":1,"120":1,"123":1,"130":1,"132":1,"133":1,"135":1,"179":1,"190":1,"317":1,"329":1,"331":2,"345":1}}],["integer",{"2":{"351":1}}],["integrity",{"2":{"337":1,"358":1}}],["integrating",{"2":{"130":1,"133":1,"205":1,"323":1,"329":1,"333":1}}],["integrations",{"2":{"133":1}}],["integration",{"0":{"53":1,"91":1,"92":1,"134":1},"1":{"54":1,"55":1,"56":1,"57":1},"2":{"61":1,"93":1,"132":1,"313":1,"330":1,"334":1}}],["integrates",{"2":{"132":1}}],["integrated",{"2":{"132":1,"133":1,"349":1,"350":1}}],["integrate",{"0":{"8":1,"13":1,"14":1,"19":1,"23":1,"24":1,"131":1,"329":1},"1":{"330":1},"2":{"53":1,"58":1,"85":1,"131":1,"132":1,"135":1,"271":1,"321":1,"330":1,"331":1,"379":1}}],["intent",{"2":{"274":1,"333":3}}],["intend",{"2":{"129":1,"328":1}}],["interpret",{"2":{"362":1}}],["interoperability",{"2":{"332":1}}],["internally",{"2":{"243":1}}],["internal",{"2":{"243":1,"273":1}}],["internet",{"2":{"96":1,"178":1}}],["interchangeable",{"2":{"179":1}}],["interesting",{"2":{"177":1}}],["interfaces",{"2":{"93":1}}],["interface",{"2":{"83":1,"242":3,"355":1,"371":2,"372":2,"373":2,"374":3}}],["interfacing",{"2":{"35":1}}],["interaction",{"2":{"368":1}}],["interactions",{"0":{"64":1},"2":{"177":1,"362":1}}],["interacting",{"2":{"56":1,"131":1}}],["interact",{"2":{"62":1,"162":1,"172":1,"182":1,"200":1,"273":1,"282":1,"283":1}}],["introduces",{"2":{"168":1}}],["introduction",{"0":{"157":1,"167":1,"177":1,"187":1},"1":{"158":1,"159":1,"160":1,"168":1,"169":1,"170":1,"178":1,"179":1,"180":1}}],["intro",{"0":{"0":1},"2":{"1":1}}],["in",{"0":{"4":1,"6":1,"11":1,"12":1,"17":1,"18":1,"26":1,"28":1,"30":1,"32":1,"45":1,"58":1,"62":1,"68":1,"71":2,"75":1,"76":1,"81":1,"88":1,"89":1,"98":1,"99":1,"101":1,"130":1,"138":1,"155":1,"156":2,"166":1,"176":2,"186":1,"284":1,"285":1},"1":{"46":1,"47":1,"48":1,"49":1,"50":1,"59":1,"63":1,"64":1,"65":1,"66":1,"67":1,"69":1,"70":1,"71":1,"82":1,"83":1,"84":1,"90":1,"91":1,"92":1,"100":1,"101":1,"102":2,"103":2,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"131":1,"132":1,"133":1,"134":1,"157":2,"158":2,"159":2,"160":2,"161":2,"162":2,"163":2,"164":2,"165":2,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"177":2,"178":2,"179":2,"180":2,"181":2,"182":2,"183":2,"184":2,"185":2,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"285":1,"286":1},"2":{"34":2,"38":2,"43":1,"45":1,"46":2,"47":2,"48":2,"49":4,"50":3,"51":4,"53":1,"57":1,"59":1,"60":1,"62":1,"68":1,"69":3,"72":1,"75":3,"76":2,"77":1,"82":1,"85":1,"87":1,"90":1,"91":1,"93":2,"94":1,"97":1,"100":3,"103":2,"104":1,"105":1,"106":1,"107":1,"108":3,"109":2,"113":2,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":2,"121":2,"122":1,"125":1,"126":2,"127":1,"128":1,"129":2,"131":1,"135":1,"137":1,"142":1,"151":1,"152":2,"153":2,"157":2,"158":2,"159":3,"161":2,"163":2,"164":1,"165":2,"167":2,"168":4,"169":3,"171":1,"173":1,"174":1,"175":1,"177":3,"178":1,"181":1,"183":1,"184":1,"187":1,"188":1,"189":1,"192":1,"197":1,"199":1,"202":1,"205":1,"208":1,"213":2,"215":1,"216":2,"217":1,"219":2,"220":1,"221":1,"225":1,"226":1,"236":1,"239":1,"242":1,"243":1,"248":1,"250":1,"251":1,"257":2,"262":1,"267":1,"272":1,"273":1,"274":1,"275":4,"284":3,"285":2,"286":1,"293":2,"301":1,"303":1,"304":2,"311":1,"323":1,"325":1,"326":2,"327":1,"328":1,"329":1,"333":2,"338":2,"343":2,"346":2,"347":2,"348":2,"349":1,"350":1,"355":1,"358":3,"359":3,"361":1,"362":2,"365":1,"369":1,"371":1,"372":2,"373":2,"374":1,"376":1,"377":3,"379":2}}],["typically",{"2":{"358":1,"362":1}}],["typescript",{"2":{"280":2,"317":2,"359":1,"376":1}}],["typeddata",{"2":{"262":2}}],["typed",{"2":{"262":1}}],["typedefault",{"2":{"51":1}}],["typedefaultbooleantrue",{"2":{"48":1}}],["typedefaultstringundefined",{"2":{"46":1,"47":1}}],["typedefaultstringcenter",{"2":{"44":1}}],["typedefaultstring",{"2":{"43":1,"49":1,"50":1}}],["type",{"2":{"162":1,"163":1,"172":1,"182":1,"262":3,"301":37,"311":1,"312":1,"333":1}}],["txnresponse",{"2":{"370":2,"371":4,"372":4,"373":4}}],["txhash",{"2":{"293":1,"294":1,"295":1,"311":2}}],["tx",{"2":{"293":3,"294":3,"295":3,"296":1,"299":1,"300":1,"301":1,"307":1,"309":1,"311":3,"312":4}}],["ts",{"2":{"286":1,"312":1}}],["tsx",{"2":{"286":1}}],["tips",{"2":{"328":1}}],["tip",{"2":{"226":1,"333":1}}],["time",{"0":{"197":1,"303":1},"2":{"89":1,"109":2,"153":1,"159":1,"197":1,"200":1,"232":1,"238":1,"254":1,"275":1,"285":1,"303":1,"304":1,"325":1,"358":1,"361":1,"362":1}}],["twitter",{"2":{"284":1}}],["twitch",{"2":{"49":1,"346":1}}],["two",{"2":{"107":1,"195":1,"206":1,"226":1,"267":1,"274":1,"281":1,"302":1,"325":2,"371":1,"372":1,"373":1}}],["tutorial",{"2":{"72":1,"131":1}}],["taking",{"2":{"355":1}}],["taken",{"2":{"254":1}}],["takes",{"2":{"82":1,"306":1,"333":1}}],["take",{"2":{"72":1,"100":1,"114":1,"127":2,"154":1,"164":1,"174":1,"184":1,"206":1,"213":1,"274":1,"324":1,"331":1}}],["tag",{"2":{"350":1}}],["tampered",{"2":{"273":1}}],["tank",{"0":{"68":1,"70":1,"71":1},"1":{"69":1,"70":1,"71":1},"2":{"68":1,"93":1}}],["tanstack",{"2":{"35":3,"36":1,"37":1}}],["tablet",{"2":{"320":1,"321":1}}],["table",{"0":{"234":1}}],["tablecomponent",{"2":{"140":1}}],["tab",{"2":{"66":1,"142":1,"191":1}}],["text",{"2":{"358":1}}],["team",{"2":{"93":1,"273":1,"281":1,"378":1}}],["test",{"2":{"97":1,"217":1,"220":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1}}],["testnet",{"2":{"81":3}}],["testing",{"2":{"40":1}}],["terms",{"2":{"76":2,"94":1,"328":1}}],["template",{"0":{"203":1,"278":1,"316":1},"2":{"203":1,"278":1,"316":1}}],["templates",{"2":{"63":1,"66":1}}],["temporarily",{"2":{"70":1}}],["t",{"2":{"60":1,"102":1,"141":1,"215":1,"218":1,"232":1,"235":1,"237":1,"242":1,"248":1,"249":1,"253":1,"254":1,"257":1,"273":2,"275":1,"282":1,"283":1,"284":1,"290":1,"298":1,"304":1,"355":1,"374":1}}],["tries",{"2":{"307":1}}],["trigger",{"0":{"306":1},"1":{"307":1},"2":{"306":1}}],["triggered",{"2":{"56":1,"307":3,"308":2,"309":1,"333":1}}],["triggertransaction",{"2":{"56":1}}],["triggercheckout",{"2":{"54":2}}],["triggering",{"0":{"38":1},"2":{"34":1}}],["trusted",{"2":{"303":1,"304":1,"305":1}}],["trust",{"2":{"96":1,"209":1,"273":1,"359":1}}],["true",{"0":{"251":1},"2":{"38":1,"39":1,"249":2,"254":1,"255":1,"287":1,"301":11,"305":2,"306":4,"307":2,"309":2,"312":1,"333":1,"339":1,"341":1,"342":1,"343":1,"352":1,"358":2}}],["trying",{"2":{"330":1}}],["try",{"0":{"86":1,"136":1,"202":1,"277":1,"315":1},"1":{"87":1,"137":1},"2":{"277":1,"286":1,"312":2,"315":1,"320":1,"321":1,"359":1}}],["trackers",{"2":{"359":2}}],["tradeoff",{"2":{"328":1}}],["tradable",{"2":{"169":1}}],["trading",{"2":{"69":1,"87":1,"137":1}}],["traditional",{"2":{"69":1,"273":1,"324":1}}],["traffic",{"2":{"90":1}}],["transform",{"2":{"121":1}}],["transfers",{"2":{"371":2,"372":2,"373":2}}],["transferfrom",{"2":{"301":1}}],["transferring",{"2":{"253":1}}],["transferred",{"2":{"226":1}}],["transfer",{"2":{"82":1,"301":3,"371":7,"372":1,"373":1,"374":2}}],["transaction2",{"2":{"371":2,"372":2,"373":2,"374":2}}],["transaction1",{"2":{"371":2,"372":2,"373":2,"374":2}}],["transactionfailed",{"2":{"312":1}}],["transactionreceipt",{"2":{"293":1,"294":1,"295":1,"311":1}}],["transactions",{"0":{"289":1,"292":1,"370":1,"374":1},"1":{"290":1,"291":1,"292":1,"293":2,"294":2,"295":2,"296":2,"297":2,"298":2,"299":2,"300":2,"301":2},"2":{"64":1,"69":1,"133":1,"177":1,"211":1,"249":1,"254":2,"255":1,"260":1,"274":2,"284":1,"292":1,"293":2,"301":2,"310":1,"311":1,"312":3,"371":1,"372":1,"373":1,"374":4}}],["transaction",{"0":{"151":1,"164":1,"174":1,"184":1,"259":1,"264":1,"293":1,"310":1,"311":1,"312":1},"1":{"152":1,"153":1,"311":1,"312":1},"2":{"56":1,"67":1,"68":1,"82":1,"151":2,"153":4,"154":3,"162":1,"163":1,"164":5,"165":1,"173":1,"174":6,"183":1,"184":6,"194":1,"198":1,"215":2,"218":2,"219":1,"226":1,"240":1,"243":1,"248":1,"251":2,"253":3,"254":4,"255":1,"293":7,"294":1,"295":1,"307":1,"308":1,"310":3,"311":8,"312":4,"370":4,"371":4,"372":4,"373":4,"374":1,"379":1}}],["transports",{"2":{"36":3,"37":3,"60":1}}],["torus",{"0":{"328":1},"2":{"325":3,"328":7}}],["took",{"2":{"327":1}}],["too",{"2":{"123":1,"148":1,"332":2,"333":1}}],["toolkit",{"2":{"329":1,"378":1}}],["tools",{"2":{"93":1,"329":1,"378":1}}],["tool",{"2":{"93":1}}],["toggle",{"2":{"97":1,"113":1,"128":1}}],["toggling",{"2":{"70":1}}],["tolerance",{"2":{"90":1}}],["totalsupply",{"2":{"301":1}}],["total",{"2":{"82":1,"165":1,"228":1}}],["todo",{"0":{"234":1,"360":1},"2":{"80":1,"93":1,"140":1,"204":1,"280":1,"312":1}}],["toying",{"2":{"43":1}}],["topics",{"2":{"311":2}}],["top",{"2":{"41":1,"44":3,"106":1,"152":1}}],["to",{"0":{"66":1,"69":1,"74":1,"76":1,"83":2,"91":1,"101":1,"103":1,"112":1,"141":1,"142":1,"156":1,"162":1,"166":1,"172":1,"176":1,"182":1,"186":1,"194":1,"252":1,"354":1},"1":{"67":1,"102":1,"103":1,"105":1,"106":1,"142":1,"143":2,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"2":{"35":2,"36":3,"37":1,"38":1,"41":1,"45":1,"46":1,"47":1,"49":2,"50":2,"51":1,"52":1,"53":1,"54":1,"58":1,"59":6,"60":3,"61":1,"62":1,"63":3,"64":1,"66":4,"67":2,"68":1,"69":1,"70":2,"72":1,"74":2,"75":5,"76":4,"77":2,"78":2,"80":1,"83":1,"86":1,"87":1,"89":2,"90":3,"91":3,"93":4,"94":1,"95":2,"96":4,"100":2,"105":3,"106":3,"107":5,"108":2,"109":6,"110":4,"111":3,"112":3,"113":2,"114":1,"115":3,"116":2,"118":2,"119":2,"120":6,"121":2,"122":3,"123":8,"124":5,"127":3,"128":3,"129":6,"131":1,"132":1,"133":3,"136":1,"137":1,"141":1,"145":4,"146":1,"148":1,"149":1,"151":4,"152":1,"153":3,"154":1,"155":2,"157":1,"159":1,"160":3,"161":1,"162":5,"163":8,"164":3,"165":2,"168":2,"169":4,"170":3,"171":1,"172":2,"173":5,"174":3,"175":1,"177":2,"178":1,"179":1,"180":3,"181":1,"182":2,"183":5,"184":3,"185":1,"189":2,"190":1,"192":1,"194":1,"195":5,"196":4,"197":6,"198":2,"199":3,"200":6,"202":1,"204":1,"205":5,"206":1,"208":3,"210":2,"213":5,"214":4,"215":3,"217":4,"218":2,"219":5,"220":1,"223":1,"224":4,"226":1,"228":1,"232":1,"236":2,"237":1,"238":2,"239":2,"240":1,"241":1,"242":3,"243":2,"244":1,"245":1,"246":1,"248":4,"249":8,"250":2,"251":1,"252":2,"254":2,"255":2,"256":3,"257":3,"260":1,"261":1,"263":2,"271":1,"272":2,"273":6,"274":1,"275":5,"280":1,"281":2,"282":3,"283":2,"284":2,"285":9,"286":7,"289":2,"290":2,"291":1,"292":1,"293":5,"294":1,"295":1,"297":2,"298":1,"299":4,"300":2,"301":8,"303":1,"304":4,"305":1,"306":1,"307":2,"308":2,"309":1,"311":3,"312":7,"313":3,"317":4,"320":1,"321":2,"323":5,"324":4,"325":2,"326":1,"327":1,"328":7,"330":1,"331":1,"332":9,"333":10,"335":1,"339":1,"340":1,"342":1,"343":3,"346":1,"347":1,"348":1,"349":1,"350":2,"351":1,"352":5,"355":7,"357":1,"358":11,"359":4,"361":1,"362":3,"366":2,"368":1,"370":5,"371":7,"372":7,"373":7,"374":11,"379":2}}],["token4id",{"2":{"374":1}}],["token2id",{"2":{"373":1}}],["token1id",{"2":{"373":1}}],["tokenresponse",{"2":{"286":2}}],["tokenbaseuri",{"2":{"196":2}}],["tokenid",{"2":{"57":1,"163":1,"197":2,"299":2,"372":4,"373":1,"374":1}}],["token",{"0":{"25":1,"178":1,"188":1},"2":{"82":3,"149":4,"158":1,"178":2,"179":1,"187":1,"188":5,"189":4,"196":2,"197":2,"198":1,"199":2,"205":1,"274":1,"294":1,"295":1,"296":1,"307":1,"323":1,"371":4,"372":3,"373":3,"374":2}}],["tokens",{"0":{"11":1,"12":1,"17":1,"18":1,"21":1,"294":1,"295":1,"296":1,"371":1,"372":1,"373":1},"2":{"64":1,"67":2,"82":1,"83":1,"149":1,"153":1,"158":2,"159":1,"163":1,"165":1,"167":1,"168":2,"175":1,"177":1,"178":2,"179":4,"195":1,"197":1,"198":2,"199":4,"211":1,"294":1,"295":1,"296":1,"352":1}}],["three",{"2":{"325":3}}],["threat",{"0":{"275":1}}],["threats",{"2":{"272":1}}],["threshold",{"2":{"227":1,"230":2,"231":2,"242":1,"243":1,"247":1,"248":1,"261":1,"262":1,"263":1,"328":1}}],["through",{"2":{"34":1,"58":1,"63":1,"76":1,"107":1,"113":1,"132":1,"141":1,"157":1,"160":1,"167":1,"170":1,"177":2,"180":1,"261":2,"262":2,"263":1,"302":1,"332":1,"362":1}}],["those",{"2":{"159":1,"162":1,"172":1,"182":1,"317":1}}],["think",{"2":{"332":1,"378":1}}],["things",{"0":{"80":1},"2":{"188":1}}],["third",{"2":{"273":1}}],["this",{"2":{"34":1,"37":1,"51":1,"58":1,"61":1,"69":2,"72":1,"75":1,"78":1,"91":1,"94":1,"103":1,"107":2,"109":2,"121":1,"123":2,"124":1,"127":2,"129":3,"141":1,"146":1,"148":2,"149":1,"150":1,"152":2,"157":1,"158":1,"160":1,"161":1,"162":2,"163":4,"167":1,"168":1,"169":1,"170":1,"172":1,"173":1,"177":1,"179":1,"180":1,"182":1,"183":1,"187":1,"188":2,"189":2,"190":1,"191":2,"195":3,"196":3,"197":3,"199":1,"210":1,"213":1,"214":1,"217":2,"226":2,"230":1,"232":1,"236":1,"239":1,"240":2,"242":2,"243":1,"247":1,"248":3,"249":2,"250":1,"251":1,"254":1,"256":1,"257":2,"261":1,"262":1,"263":1,"273":3,"274":3,"275":4,"281":1,"283":1,"285":2,"287":1,"293":1,"294":1,"295":1,"296":1,"297":1,"301":1,"303":1,"304":1,"305":1,"306":1,"307":1,"309":1,"311":1,"312":5,"317":1,"321":1,"325":1,"327":3,"328":1,"332":5,"333":1,"337":1,"358":7,"361":1,"366":2}}],["than",{"2":{"72":1,"124":1,"313":1,"359":1,"379":1}}],["that",{"2":{"40":1,"51":1,"70":2,"75":1,"80":1,"81":1,"83":2,"85":1,"89":1,"90":1,"94":1,"96":1,"103":1,"119":1,"122":1,"123":2,"124":1,"125":1,"127":1,"128":1,"129":2,"131":1,"133":1,"135":1,"143":1,"148":1,"151":2,"155":1,"158":2,"160":1,"161":1,"162":2,"165":2,"170":1,"171":1,"172":1,"175":2,"178":1,"180":1,"181":1,"182":1,"185":1,"197":1,"199":1,"205":1,"210":2,"213":2,"215":1,"225":1,"226":2,"228":1,"232":1,"239":1,"240":1,"241":1,"246":1,"247":1,"248":2,"249":1,"251":1,"254":1,"263":2,"271":1,"273":1,"274":3,"275":1,"282":1,"285":2,"286":2,"287":1,"289":2,"293":2,"297":1,"300":1,"303":1,"306":1,"307":1,"310":1,"311":2,"313":2,"317":1,"323":1,"324":3,"325":1,"327":1,"328":2,"332":2,"333":1,"338":1,"346":1,"355":2,"362":2,"370":1}}],["therefore",{"2":{"232":1}}],["there",{"2":{"70":1,"80":1,"100":1,"114":1,"149":1,"155":1,"249":1,"250":1}}],["themselves",{"2":{"250":1,"273":1,"328":1}}],["them",{"0":{"133":1},"2":{"70":1,"90":1,"165":1,"174":1,"184":1,"213":1,"272":1,"328":1,"330":1,"362":1}}],["theme",{"0":{"344":1},"2":{"43":1,"96":1,"333":2,"344":2}}],["their",{"2":{"69":1,"107":2,"108":1,"131":1,"132":1,"168":1,"198":1,"205":1,"227":1,"228":1,"274":1,"303":1,"304":1,"323":1,"324":3,"325":5,"326":3,"327":1,"328":4,"330":1,"332":3,"333":1,"355":2,"358":3,"361":1,"362":3}}],["they",{"2":{"49":1,"50":1,"70":1,"132":1,"179":1,"210":1,"236":1,"312":1,"325":1,"333":1,"343":2,"355":1,"358":1,"362":3}}],["then",{"2":{"37":1,"66":1,"72":1,"106":1,"108":1,"113":1,"117":1,"128":1,"149":1,"152":2,"164":1,"173":1,"183":1,"190":1,"199":1,"249":1,"284":1,"285":1,"332":1,"341":1,"358":3,"359":1,"362":1,"379":1}}],["these",{"0":{"131":1,"132":1},"2":{"36":1,"41":1,"53":1,"80":1,"93":1,"97":1,"107":1,"129":1,"157":1,"163":2,"164":1,"173":1,"174":1,"178":2,"188":2,"210":1,"236":1,"240":1,"248":1,"267":1,"271":1,"274":1,"275":1,"313":2,"328":1}}],["the",{"0":{"36":1,"37":1,"38":1,"39":1,"54":1,"55":1,"70":1,"71":1,"78":1,"79":1,"84":1,"91":1,"98":1,"119":1,"132":1,"133":1,"142":1,"148":1,"151":1,"161":1,"163":1,"171":1,"173":1,"181":1,"183":1,"191":1,"196":1,"231":1,"256":1,"257":1,"354":1,"357":1},"1":{"56":1,"57":1,"120":1,"121":1,"143":1,"152":1,"153":1,"257":1},"2":{"34":2,"35":5,"36":4,"37":4,"38":6,"39":2,"40":1,"41":3,"43":5,"44":4,"45":2,"46":2,"47":2,"48":2,"49":7,"50":7,"51":5,"52":1,"53":4,"54":2,"55":2,"56":1,"57":3,"58":1,"59":3,"60":4,"61":2,"62":1,"63":2,"66":8,"67":4,"69":1,"70":2,"74":1,"75":1,"76":3,"77":1,"78":2,"79":1,"81":1,"82":6,"83":1,"87":3,"89":1,"90":1,"91":1,"93":4,"94":1,"95":1,"96":2,"97":3,"100":4,"103":3,"105":3,"106":5,"107":5,"108":8,"109":10,"110":2,"111":5,"113":4,"114":5,"115":7,"116":3,"117":2,"118":3,"119":5,"120":2,"121":4,"122":4,"123":5,"124":4,"126":2,"127":6,"128":7,"129":5,"131":4,"132":5,"133":3,"137":3,"139":1,"142":3,"143":1,"146":3,"148":2,"150":1,"151":4,"152":1,"153":5,"154":5,"155":1,"157":1,"158":1,"159":3,"160":1,"161":4,"162":5,"163":4,"164":6,"165":7,"168":1,"169":2,"170":1,"171":3,"172":4,"173":3,"174":8,"175":5,"177":1,"178":2,"179":2,"180":1,"181":3,"182":4,"183":3,"184":8,"185":2,"188":1,"189":3,"190":2,"191":2,"192":2,"194":2,"195":4,"196":5,"197":5,"198":2,"199":4,"200":3,"204":2,"205":5,"206":2,"207":1,"210":3,"213":7,"214":3,"215":17,"216":7,"217":4,"218":9,"219":9,"220":5,"221":2,"223":2,"224":4,"225":3,"226":13,"229":2,"231":2,"232":11,"235":8,"236":11,"237":8,"238":2,"239":8,"240":4,"241":5,"242":11,"243":6,"245":2,"246":3,"247":3,"248":17,"249":16,"250":4,"251":3,"252":4,"253":3,"254":14,"255":3,"256":6,"257":8,"261":7,"262":8,"263":13,"271":5,"272":4,"273":1,"274":11,"275":11,"280":4,"281":2,"282":2,"283":2,"284":4,"285":16,"286":18,"287":1,"288":2,"289":7,"290":2,"291":2,"292":1,"293":11,"294":2,"295":2,"297":2,"298":2,"301":3,"302":1,"304":1,"305":3,"306":9,"307":5,"308":1,"309":3,"310":1,"311":13,"312":8,"313":3,"315":1,"317":6,"321":1,"323":5,"324":7,"325":9,"326":1,"327":3,"328":9,"329":3,"330":2,"331":2,"332":7,"333":11,"334":1,"335":1,"337":2,"339":2,"342":3,"343":1,"344":2,"345":1,"346":1,"347":1,"348":1,"350":5,"351":2,"352":6,"353":1,"355":25,"357":1,"358":12,"359":8,"362":4,"365":1,"366":2,"367":2,"368":1,"369":4,"370":6,"371":2,"372":4,"373":4,"374":2,"376":1,"377":1,"378":1,"379":5}}],["d",{"2":{"312":1,"359":1,"379":2}}],["during",{"2":{"232":1,"242":1}}],["duration",{"2":{"107":1}}],["due",{"2":{"214":1,"217":1,"304":1}}],["dropsession",{"2":{"288":1}}],["drop",{"2":{"162":1}}],["dropdown",{"2":{"66":1,"108":1}}],["dapps",{"2":{"321":1,"334":1,"355":1}}],["dapp",{"0":{"333":1,"353":1,"354":1},"2":{"317":1,"321":1,"332":3,"333":9,"335":1,"337":1,"339":1,"345":1,"353":2,"355":6,"358":2,"359":1,"379":1}}],["daicontractaddress",{"2":{"371":3,"374":1}}],["dai",{"2":{"294":2,"307":2}}],["damage",{"2":{"275":1}}],["dangerous",{"2":{"239":1,"254":1}}],["danger",{"2":{"129":1,"213":1}}],["dates",{"2":{"126":1}}],["date",{"2":{"109":1,"126":1}}],["data2",{"2":{"371":2,"372":2,"373":2}}],["data1",{"2":{"371":2,"372":2,"373":2}}],["data",{"0":{"82":1,"84":1,"261":1,"262":1},"2":{"81":1,"82":3,"83":2,"89":1,"90":1,"162":1,"163":1,"197":1,"219":1,"249":2,"255":1,"261":1,"262":2,"263":1,"273":1,"291":1,"293":3,"294":2,"295":2,"311":3,"312":2,"371":4,"372":4,"373":6,"374":4}}],["days",{"2":{"109":1}}],["day",{"2":{"109":1}}],["dashboard",{"0":{"155":1},"2":{"62":1,"63":1,"64":1,"79":1,"80":1,"89":1,"91":2,"103":1,"106":1,"108":1,"109":1,"111":1,"114":1,"115":1,"127":1,"142":1,"161":1,"171":1,"181":1,"274":1}}],["dark",{"2":{"43":1,"333":1}}],["dom",{"2":{"286":1}}],["domains",{"2":{"123":4}}],["domain",{"0":{"123":1},"2":{"123":4}}],["document",{"2":{"286":1}}],["documentation",{"2":{"36":1,"280":1,"317":1}}],["docs",{"0":{"234":1}}],["don",{"2":{"232":1,"235":1,"283":1,"304":1,"355":1,"374":1}}],["done",{"2":{"70":1,"131":1,"141":1,"160":1,"170":1,"180":1,"281":1,"301":1,"312":1,"325":1,"355":1}}],["doesn",{"2":{"237":1,"248":1,"249":1,"253":1,"254":1,"284":1,"298":1}}],["does",{"2":{"225":1,"274":1,"293":1,"303":1}}],["double",{"2":{"213":1}}],["dollars",{"2":{"179":1}}],["do",{"0":{"64":1,"91":1,"159":1},"2":{"72":1,"77":1,"80":1,"102":1,"105":1,"115":1,"121":1,"123":1,"124":1,"129":1,"152":1,"160":1,"162":1,"170":1,"180":1,"189":1,"210":1,"215":1,"218":1,"358":2,"359":3}}],["down",{"2":{"49":1,"50":1,"162":1}}],["diligence",{"0":{"269":1},"2":{"267":1}}],["differs",{"2":{"237":1}}],["difference",{"2":{"372":1,"373":1}}],["differences",{"0":{"132":1}}],["differently",{"2":{"132":1}}],["different",{"2":{"82":1,"145":1,"149":1,"163":1,"178":1,"179":1,"206":1,"213":1,"272":1,"274":1,"333":1,"371":1,"372":1,"373":1}}],["dimensions",{"2":{"177":1}}],["digital",{"0":{"166":1,"171":1},"1":{"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1},"2":{"168":1,"169":3,"174":1,"178":1,"179":1}}],["dive",{"2":{"159":1,"331":1}}],["dispatch",{"2":{"370":1}}],["displays",{"2":{"96":1}}],["displayedassets",{"0":{"51":1}}],["displayed",{"2":{"49":1,"50":1,"51":4,"205":1,"323":1,"355":1}}],["displaying",{"2":{"34":1}}],["disconnect",{"2":{"341":1,"355":1}}],["discord",{"2":{"330":1,"346":1,"359":1}}],["discuss",{"2":{"304":1}}],["dist",{"2":{"318":1}}],["distribution",{"0":{"318":1},"2":{"318":1}}],["distinction",{"2":{"179":1}}],["distinct",{"2":{"168":1,"179":1,"302":1}}],["distinguish",{"2":{"95":1}}],["disable",{"2":{"70":1}}],["direct",{"2":{"249":1,"274":1,"334":1}}],["directly",{"2":{"62":1,"63":2,"85":1,"107":1,"133":1,"135":1,"179":1,"205":1,"232":2,"257":1,"274":1,"285":1,"286":1,"317":1,"323":1,"362":1}}],["directory",{"0":{"25":1}}],["derive",{"2":{"365":1}}],["delightful",{"2":{"333":1}}],["delegatecall",{"0":{"250":1},"2":{"249":2,"250":2,"255":1}}],["deletion",{"2":{"111":1,"118":1}}],["deleting",{"0":{"111":1,"118":1},"1":{"117":1,"118":1,"120":1,"121":1,"123":1,"124":1,"126":1},"2":{"111":1}}],["deleted",{"2":{"107":1}}],["delete",{"0":{"116":1,"129":1},"1":{"117":1,"118":1},"2":{"100":1,"111":2,"114":1,"116":1,"118":2,"129":6}}],["demand",{"0":{"265":1},"2":{"271":1,"332":2,"353":1}}],["demonstrates",{"2":{"359":1}}],["demo",{"0":{"202":1,"277":1,"315":1},"2":{"36":1,"37":1,"202":1,"277":1,"286":2,"315":1,"330":1,"333":2,"353":1}}],["devices",{"2":{"321":1,"326":1}}],["device",{"2":{"288":1,"324":1,"325":1,"366":1}}],["dev",{"2":{"263":1,"378":1}}],["development",{"2":{"200":1,"274":1}}],["developer",{"2":{"205":1,"323":1}}],["developers",{"2":{"41":1,"52":1,"332":1}}],["developed",{"2":{"132":1,"332":1}}],["decimals",{"2":{"301":1}}],["decentraland",{"2":{"295":1}}],["decentralized",{"2":{"90":1,"362":1}}],["declared",{"2":{"254":1}}],["decodeproof",{"2":{"359":1}}],["decode",{"2":{"241":2}}],["defi",{"2":{"335":1}}],["define",{"2":{"274":1,"285":1}}],["defines",{"2":{"239":1,"247":1}}],["defined",{"2":{"227":1,"236":2,"241":1,"249":1,"250":1,"252":1}}],["defense",{"2":{"274":1}}],["defaultpurchaseamount",{"0":{"351":1},"2":{"351":1}}],["defaultfundingcurrency",{"0":{"350":1},"2":{"333":2,"350":1,"352":2}}],["defaults",{"2":{"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1,"328":1}}],["defaultabicoder",{"2":{"241":2}}],["default",{"2":{"114":1,"286":1,"292":1,"328":1,"338":1,"342":1,"349":1,"350":1,"351":2,"352":2}}],["defaultnetwork",{"2":{"60":1,"333":1}}],["defaulttheme",{"0":{"43":1},"2":{"43":1}}],["defaultchainid",{"2":{"36":1,"37":1}}],["debit",{"2":{"205":1,"323":1}}],["described",{"2":{"334":1}}],["description",{"2":{"188":2,"189":2}}],["desktop",{"2":{"332":1}}],["design",{"2":{"211":1,"226":1}}],["designed",{"2":{"91":1,"120":1,"200":1,"332":1}}],["destructive",{"2":{"129":1}}],["determined",{"2":{"149":1,"337":1}}],["determine",{"0":{"150":1},"2":{"51":1}}],["determines",{"2":{"43":1,"44":1,"48":1,"49":1,"50":1,"235":1,"307":1}}],["detection",{"2":{"90":1}}],["detect",{"2":{"38":1}}],["details",{"0":{"5":1,"7":1,"27":1,"29":1,"31":1,"33":1,"78":1,"163":1,"173":1,"183":1,"194":1},"2":{"59":1,"78":1,"114":2,"115":1,"131":1,"153":2,"162":3,"164":1,"172":3,"174":1,"182":3,"184":1,"194":1,"197":1,"274":1,"301":1,"355":1}}],["deprecated",{"2":{"323":1}}],["depend",{"2":{"317":1}}],["dependency",{"2":{"317":1}}],["dependencies",{"2":{"35":1,"317":1}}],["depends",{"2":{"169":1}}],["depending",{"2":{"154":1,"164":1,"174":1,"184":1,"195":1}}],["deployer",{"0":{"213":1},"1":{"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1},"2":{"215":3}}],["deployedwalletcontext",{"2":{"359":1}}],["deployed",{"0":{"65":1,"154":1},"1":{"155":1},"2":{"63":1,"66":1,"67":2,"70":1,"151":1,"154":1,"155":2,"161":1,"162":1,"171":1,"172":1,"181":1,"182":1,"195":1,"214":1,"217":1,"219":1,"226":1,"257":2,"313":1}}],["deploying",{"2":{"78":1,"160":1,"170":1,"180":1,"226":1}}],["deployments",{"2":{"93":1}}],["deployment",{"0":{"63":1,"265":1},"2":{"62":1,"63":1,"149":1,"151":1,"213":1,"215":2,"217":1,"218":1,"238":1}}],["deploy",{"0":{"4":1,"6":1,"9":1,"10":1,"15":1,"16":1,"22":1,"26":1,"28":1,"30":1,"32":1,"141":1,"147":1,"160":1,"170":1,"180":1,"193":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"223":1},"1":{"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":2,"149":2,"150":2,"151":1,"152":1,"153":1,"154":1,"155":1,"215":1,"216":1,"218":1,"219":1,"220":1,"224":1,"225":1},"2":{"62":1,"113":1,"132":1,"141":1,"145":1,"146":1,"148":1,"151":1,"153":2,"160":1,"170":1,"180":1,"192":1,"193":1,"213":1,"214":1,"215":2,"216":2,"217":1,"218":1,"219":3,"220":1,"223":1,"226":1}}],["cdn",{"0":{"318":1},"2":{"318":1}}],["certainty",{"2":{"358":1}}],["certain",{"2":{"309":1}}],["centered",{"2":{"77":1}}],["center",{"2":{"44":3}}],["circle",{"2":{"286":1}}],["cid",{"2":{"189":1,"190":1}}],["curl",{"2":{"199":1}}],["currency",{"0":{"176":1,"181":1,"185":1},"1":{"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1},"2":{"177":2,"180":1,"181":1,"183":2,"184":2,"185":1,"350":2,"352":4}}],["currently",{"2":{"139":1,"205":1,"275":1,"281":1,"323":1,"325":1}}],["current",{"0":{"241":1,"256":1},"1":{"257":1},"2":{"126":3,"245":1,"256":2,"287":1,"301":1,"305":1}}],["custodial",{"2":{"133":1,"271":1,"313":1,"328":1}}],["customization",{"2":{"328":1}}],["customize",{"2":{"41":1,"59":1,"85":1,"135":1,"333":1}}],["custom",{"0":{"58":1,"59":1,"60":1,"61":1},"1":{"59":1},"2":{"58":2,"59":6,"60":5,"61":2,"63":1,"96":1,"200":1,"202":1,"204":1,"304":1,"305":1,"336":1}}],["credential",{"2":{"286":1}}],["credentialresponse",{"2":{"286":2}}],["credentials",{"0":{"119":1},"1":{"120":1,"121":1},"2":{"114":1,"119":2,"120":2,"121":2,"281":1,"328":1}}],["credits",{"2":{"126":3}}],["credit",{"2":{"70":1,"91":1,"205":1,"323":1}}],["creator",{"2":{"195":1}}],["creation",{"2":{"94":1,"132":1,"133":1,"158":1,"226":1,"232":1,"236":1,"242":1,"271":1,"273":1,"283":1,"292":1}}],["creating",{"0":{"59":1},"2":{"58":1,"59":1,"61":1,"72":1,"157":1,"160":1,"167":2,"169":1,"170":1,"177":1,"180":1}}],["createroot",{"2":{"286":1}}],["createhashrouter",{"2":{"286":2}}],["create2",{"2":{"223":1,"224":1,"236":1}}],["createdat",{"2":{"287":2}}],["created",{"0":{"98":1},"2":{"75":1,"80":1,"102":1,"109":1,"141":1,"149":1,"152":1,"160":1,"165":4,"170":1,"174":1,"175":2,"180":1,"184":1,"185":1,"191":1,"195":1,"221":1,"225":1,"249":1,"261":1,"271":2,"284":1,"325":1}}],["creates",{"2":{"69":1,"221":1,"223":1,"325":1}}],["createconnector",{"2":{"59":2}}],["createconfig",{"2":{"36":2,"37":2,"60":1}}],["create",{"0":{"77":1,"79":1,"109":1,"115":1,"160":1,"170":1,"180":1},"1":{"78":1,"79":1,"110":1,"111":1},"2":{"59":3,"60":1,"72":1,"77":1,"79":1,"100":2,"107":1,"109":3,"115":1,"152":1,"161":1,"164":1,"169":1,"171":1,"173":1,"174":1,"181":1,"183":1,"184":1,"189":1,"192":1,"204":1,"282":1,"292":1,"324":2,"359":1,"365":1,"369":1}}],["cryptography",{"2":{"328":1}}],["cryptographically",{"2":{"273":1}}],["crypto",{"0":{"56":1},"2":{"69":1,"273":1}}],["cryptocurrencies",{"2":{"205":1,"323":1}}],["cryptocurrency",{"2":{"52":1,"56":1}}],["cryptocheckout",{"0":{"56":1},"2":{"55":1,"56":2}}],["catch",{"2":{"286":1,"308":1,"312":1,"359":1}}],["cater",{"2":{"133":1}}],["categorized",{"2":{"100":1}}],["caution",{"2":{"225":1,"248":1,"333":1}}],["carefully",{"2":{"332":1}}],["careful",{"2":{"168":1}}],["card",{"2":{"70":1,"80":1,"93":1,"205":2,"323":2}}],["callback",{"0":{"307":1},"2":{"307":2}}],["callcontract",{"2":{"297":1,"299":1,"300":1,"301":1}}],["calldata",{"2":{"263":1,"373":2,"374":1}}],["caller",{"2":{"248":1}}],["called",{"2":{"153":1,"178":1,"221":1,"240":1,"243":1,"248":1,"249":1,"250":1,"252":2,"274":1,"286":1,"317":1,"333":1}}],["calls",{"2":{"240":1,"248":1}}],["calling",{"2":{"226":1,"239":1,"255":1,"256":1,"263":1,"297":1}}],["call",{"0":{"297":1},"1":{"298":1,"299":1,"300":1,"301":1},"2":{"162":2,"199":1,"249":1,"297":2,"298":1,"301":1,"379":1}}],["capabilities",{"2":{"83":1,"379":1}}],["cases",{"2":{"248":1,"358":1,"379":1}}],["case",{"2":{"51":1,"242":1,"250":1,"251":1,"257":2,"293":1,"327":1}}],["cancel",{"2":{"309":1}}],["cancelled",{"2":{"307":1}}],["cannot",{"2":{"275":1,"304":1}}],["candidate",{"2":{"257":1}}],["can",{"0":{"64":1,"82":1,"90":1,"91":1,"131":1,"133":1,"159":1},"2":{"38":1,"40":1,"41":2,"43":1,"51":1,"58":1,"59":3,"60":1,"61":1,"63":1,"66":2,"67":4,"70":1,"75":2,"78":1,"80":2,"83":1,"85":2,"87":1,"93":1,"96":2,"97":2,"100":1,"107":3,"113":1,"114":2,"115":1,"123":3,"124":1,"125":1,"126":1,"127":2,"131":1,"133":1,"135":2,"137":1,"139":1,"146":1,"152":1,"158":1,"162":1,"163":1,"165":2,"175":1,"179":1,"187":1,"188":2,"195":1,"199":2,"205":3,"210":2,"213":1,"215":3,"216":1,"217":1,"218":2,"226":3,"235":1,"237":1,"238":2,"240":1,"242":1,"248":1,"255":1,"256":2,"257":1,"262":1,"263":1,"271":2,"272":1,"273":3,"274":4,"280":1,"282":1,"285":2,"286":2,"288":2,"289":2,"290":1,"291":2,"292":1,"297":1,"298":1,"301":3,"304":1,"306":1,"307":1,"309":1,"312":1,"313":1,"317":2,"318":1,"323":3,"324":2,"325":2,"327":1,"328":2,"332":1,"333":6,"334":1,"337":1,"349":1,"352":1,"355":3,"358":2,"359":1,"362":3,"369":1,"371":2,"372":1,"373":1,"374":1,"378":1,"379":2}}],["claim",{"2":{"340":1}}],["class",{"2":{"282":1}}],["client",{"2":{"286":1,"359":1,"362":1,"367":1,"368":1,"369":1,"376":1,"379":2}}],["clientid=",{"2":{"286":1}}],["client=",{"2":{"36":1,"37":2,"53":1,"60":1}}],["clipboard",{"2":{"120":1,"355":2}}],["clicking",{"2":{"108":2,"109":1,"115":2,"120":1,"121":1,"123":1,"124":1,"127":1,"128":2,"301":1}}],["clicks",{"2":{"94":1,"330":1,"358":1}}],["click",{"2":{"74":1,"76":2,"77":1,"103":1,"106":1,"109":1,"110":1,"111":2,"113":1,"115":1,"117":1,"118":2,"120":1,"121":1,"123":1,"127":1,"129":2,"131":1,"143":1,"146":2,"153":1,"165":2,"175":1,"185":1,"191":1,"192":1,"194":1,"196":1,"198":1}}],["clone",{"2":{"216":1}}],["cloud",{"0":{"189":1},"2":{"189":1,"196":1,"197":1}}],["cloudflare",{"0":{"22":1}}],["closed",{"2":{"281":1,"288":2}}],["close",{"0":{"288":1},"2":{"38":1,"342":1}}],["chrome",{"0":{"354":1},"2":{"284":1,"285":1,"286":1,"287":2,"288":1,"322":1,"332":2,"353":1,"354":1}}],["child",{"2":{"221":1,"223":1}}],["cheap",{"2":{"208":1}}],["checks",{"2":{"249":1}}],["checked",{"2":{"232":1,"293":1,"311":1}}],["check",{"2":{"124":1,"167":1,"202":1,"204":1,"213":1,"225":1,"305":1,"331":1,"333":1}}],["checkboxes",{"2":{"124":1}}],["checking",{"2":{"56":1}}],["checkoutconfig",{"2":{"56":1}}],["checkoutsettings",{"2":{"54":2,"55":2}}],["checkout",{"0":{"23":1,"54":1,"55":1,"56":1},"1":{"56":1,"57":1},"2":{"52":1,"53":6,"54":3,"55":1,"70":1,"127":1,"132":1,"133":1,"331":1}}],["chose",{"2":{"355":1}}],["chosen",{"2":{"97":1,"213":1}}],["choice",{"2":{"169":1,"192":1,"284":1}}],["choosing",{"0":{"169":1},"2":{"63":1,"76":1,"87":1,"137":1,"195":1}}],["chooses",{"2":{"355":1}}],["choose",{"0":{"75":1,"144":1},"1":{"145":1,"146":1},"2":{"63":1,"95":1,"106":1,"113":1,"145":1,"205":1,"323":1,"328":1,"355":1}}],["characters",{"2":{"290":1}}],["changes",{"2":{"106":1,"120":1,"128":1,"286":1,"332":1}}],["change",{"2":{"82":1,"105":1,"114":1,"121":1,"235":1,"237":1,"242":1,"249":1,"370":1}}],["changed",{"2":{"78":1,"97":1,"242":1,"290":1}}],["challenge",{"2":{"69":1}}],["chainid",{"2":{"51":1,"56":1,"262":2,"291":1,"293":2,"294":1,"295":1,"296":1,"307":1,"308":1,"309":1,"311":1,"312":1,"367":2}}],["chains",{"2":{"36":4,"37":4,"60":1,"139":1,"213":2,"226":1}}],["chain",{"0":{"84":1,"139":1},"1":{"140":1},"2":{"36":5,"37":5,"81":4,"82":1,"83":1,"193":1,"196":1,"199":1,"213":1,"214":1,"217":1,"313":1,"352":1,"371":1,"372":1,"373":1}}],["cognito",{"2":{"303":1}}],["course",{"2":{"332":1}}],["count",{"2":{"262":1}}],["counterfactual",{"2":{"226":1,"249":1}}],["counter",{"0":{"226":1},"2":{"224":1,"226":1,"236":1,"242":1,"257":1}}],["could",{"2":{"157":1,"159":2,"188":1,"225":1,"275":1,"328":1}}],["couple",{"2":{"104":1,"145":1,"163":1}}],["copied",{"2":{"120":2}}],["copy",{"0":{"120":1},"2":{"110":1,"114":1,"120":3,"189":1,"190":1,"191":1,"355":1}}],["coordinate",{"2":{"96":1}}],["coding",{"2":{"85":1,"135":1}}],["codehash",{"2":{"236":2}}],["codebase",{"2":{"220":1}}],["code",{"0":{"83":1,"303":1,"360":1},"2":{"37":1,"82":1,"83":1,"131":1,"217":1,"221":1,"223":1,"236":2,"239":1,"273":1,"274":1,"291":1,"293":1,"294":1,"295":1,"303":1,"304":1,"306":4,"311":1,"312":2,"333":1,"355":3}}],["comes",{"2":{"324":1}}],["com",{"2":{"285":1,"287":4,"318":1,"333":2,"345":1,"347":1,"377":1}}],["coming",{"2":{"240":1,"248":1,"273":1,"362":1}}],["combination",{"2":{"231":1}}],["combinations",{"0":{"231":1},"2":{"226":1}}],["combined",{"2":{"179":1,"228":1,"231":4,"248":1,"263":1,"317":1,"325":1}}],["communicate",{"2":{"332":1}}],["communication",{"2":{"274":1,"321":1}}],["communicating",{"2":{"274":1}}],["community",{"2":{"69":1,"87":1,"137":1}}],["commons",{"2":{"359":2}}],["common",{"2":{"178":1,"294":1,"358":1}}],["commonly",{"2":{"157":1,"167":1}}],["compromised",{"2":{"275":3,"313":2,"324":1,"325":2,"327":1,"328":3}}],["comprehensive",{"2":{"64":1,"89":1,"330":1}}],["compared",{"2":{"256":1,"257":1,"324":1}}],["compatible",{"2":{"139":1,"213":1,"271":2,"332":1,"333":1}}],["compatibility",{"2":{"89":1}}],["computing",{"2":{"236":1}}],["computed",{"2":{"235":1}}],["computer",{"2":{"190":1,"320":1}}],["compute",{"0":{"233":1,"236":1},"2":{"91":1,"236":1,"257":1}}],["compile",{"2":{"220":1}}],["component",{"2":{"286":1}}],["components",{"2":{"36":1,"37":1}}],["compose",{"2":{"213":1}}],["composed",{"2":{"207":1,"317":1}}],["complexity",{"2":{"168":1}}],["completed",{"2":{"236":1}}],["complete",{"2":{"37":1,"66":1,"67":1,"123":1,"124":1,"151":1,"154":1,"165":1,"174":1,"184":1,"213":1,"217":1,"286":1,"305":1,"333":1,"377":1}}],["comply",{"2":{"94":1}}],["costs",{"2":{"153":1,"168":1}}],["cost",{"2":{"69":1,"232":1}}],["covering",{"2":{"161":1}}],["covered",{"2":{"103":1}}],["cover",{"2":{"69":1,"153":1}}],["coins",{"2":{"330":1}}],["coin",{"2":{"178":1}}],["coinquantity",{"2":{"56":1}}],["coinbase",{"2":{"50":1}}],["corrupt",{"2":{"239":1}}],["corruption",{"2":{"239":1}}],["correct",{"2":{"90":1,"108":1,"109":1,"115":1,"116":1,"119":1,"122":1,"127":1,"128":1,"129":1,"248":1,"256":1,"263":1}}],["corresponds",{"2":{"243":1,"245":1,"248":1}}],["corresponding",{"2":{"49":1,"50":1,"227":1,"228":1,"289":1}}],["correspond",{"2":{"49":1,"50":1,"248":1}}],["corner",{"2":{"106":1,"152":1}}],["core",{"2":{"35":1,"36":1,"53":1,"239":1,"359":1}}],["collections",{"2":{"165":1,"167":1,"175":1}}],["collection",{"0":{"141":1,"144":1,"161":1},"1":{"142":1,"143":1,"144":1,"145":2,"146":2,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1},"2":{"82":2,"145":1,"160":1,"161":1,"163":3,"165":1,"170":1,"180":1,"193":1}}],["collectible",{"0":{"154":1,"373":1},"1":{"155":1},"2":{"82":2,"171":1,"373":2}}],["collectibles",{"0":{"4":1,"6":1,"9":1,"15":1,"26":1,"28":1,"30":1,"32":1,"166":1,"171":1,"175":1},"1":{"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1},"2":{"57":1,"82":1,"160":1,"167":1,"168":1,"169":3,"170":1,"173":2,"174":2,"175":1,"179":1,"330":1}}],["collects",{"2":{"81":1}}],["collaborator",{"0":{"107":1,"108":1},"1":{"108":1,"109":1,"110":1,"111":1},"2":{"66":2,"107":1,"108":4}}],["collaborators",{"0":{"66":1,"112":1},"1":{"67":1},"2":{"62":1,"96":1,"100":2,"107":5,"108":1,"109":2,"110":1,"112":1}}],["collaborations",{"2":{"64":1}}],["colors",{"2":{"43":2}}],["color",{"2":{"43":1}}],["convenient",{"2":{"362":1}}],["convention",{"2":{"358":1}}],["congratulations",{"2":{"198":1}}],["concept",{"2":{"68":1}}],["confirms",{"2":{"355":1}}],["confirmed",{"2":{"215":1,"218":1,"219":1,"301":1}}],["confirmations",{"2":{"362":1}}],["confirmation",{"0":{"361":1},"2":{"120":1,"355":1,"361":1,"368":1}}],["confirm",{"0":{"148":1,"165":1,"175":1,"185":1},"2":{"108":1,"109":1,"111":1,"118":1,"129":1,"148":1,"152":1,"153":1,"154":1,"164":2,"174":2,"184":2,"362":1}}],["configjsonrpcprovider",{"2":{"359":1}}],["configs",{"2":{"263":1}}],["config=",{"2":{"36":1,"37":3,"41":1,"53":1,"60":2}}],["config",{"2":{"36":2,"37":3,"53":1,"60":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1}}],["configuring",{"0":{"55":1},"1":{"56":1,"57":1}}],["configurations",{"2":{"36":1,"60":1,"256":1}}],["configuration",{"0":{"41":1,"45":1,"56":1,"57":1,"227":1,"228":1,"232":1,"235":1,"242":1,"249":1,"255":1,"256":1,"257":1,"258":1},"1":{"46":1,"47":1,"48":1,"49":1,"50":1,"228":1,"229":2,"230":2,"231":2,"232":2,"233":3,"234":1,"235":1,"236":3,"243":1,"244":1,"245":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":2},"2":{"36":1,"41":1,"56":1,"57":1,"60":2,"214":1,"217":1,"224":1,"225":1,"227":1,"232":1,"235":1,"242":2,"243":1,"244":1,"245":1,"246":1,"247":1,"248":3,"249":4,"251":1,"256":2,"272":1,"281":1,"331":1}}],["configured",{"2":{"97":1,"100":1,"243":1}}],["configure",{"0":{"97":1},"2":{"36":1,"41":1,"45":1,"55":1,"97":1,"100":1,"114":1,"115":1,"205":1,"216":1,"274":1,"323":1}}],["conflicts",{"2":{"59":1}}],["consent",{"2":{"271":1}}],["consensys",{"0":{"269":1},"2":{"267":1}}],["considerations",{"2":{"254":1}}],["considered",{"2":{"228":1,"231":1,"304":1}}],["consistency",{"2":{"219":1}}],["consumption",{"2":{"91":1}}],["console",{"2":{"56":1,"241":1,"284":1,"286":2,"287":1,"291":1,"293":1,"294":1,"295":1,"305":1,"308":1,"309":1,"311":1,"312":1,"333":2,"357":1,"359":2,"367":2,"369":2,"370":1,"371":2,"372":2,"373":2,"374":2}}],["cons",{"2":{"56":1}}],["constant",{"2":{"301":9}}],["constants",{"0":{"253":1,"254":1},"2":{"249":4,"255":2}}],["constraints",{"2":{"274":1}}],["constructions",{"2":{"271":1}}],["construct",{"2":{"261":1,"262":1}}],["const",{"2":{"36":6,"37":7,"38":4,"39":3,"41":1,"53":1,"54":4,"55":1,"59":2,"60":3,"236":6,"241":4,"249":1,"255":1,"261":4,"262":6,"266":1,"282":1,"284":3,"285":6,"286":9,"287":2,"288":2,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"299":1,"300":1,"301":2,"305":1,"306":2,"307":1,"309":1,"311":2,"312":2,"333":11,"334":1,"357":2,"358":2,"359":5,"364":3,"365":3,"366":2,"367":3,"368":2,"369":1,"370":3,"371":12,"372":13,"373":13,"374":13}}],["containing",{"2":{"325":1}}],["contains",{"2":{"40":1,"239":1,"243":1,"274":1}}],["contact",{"2":{"281":1,"304":1}}],["context",{"0":{"216":1,"220":1,"266":1},"2":{"214":1,"216":1,"217":1,"220":2,"236":1,"249":1}}],["content",{"2":{"189":1}}],["continue",{"2":{"76":1,"123":1,"309":1}}],["contrast",{"2":{"168":1}}],["contracts",{"0":{"62":1,"66":1,"142":1,"206":1},"1":{"63":1,"64":1,"65":1,"66":1,"67":2,"143":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1},"2":{"62":1,"63":2,"64":1,"68":1,"70":2,"113":1,"142":1,"145":2,"146":2,"155":1,"168":1,"192":1,"210":2,"213":2,"214":1,"216":2,"217":2,"218":1,"219":1,"220":2,"221":1,"232":1,"267":1,"273":1}}],["contractaddressaddress",{"2":{"225":1}}],["contractaddress",{"2":{"51":1,"56":1,"57":1}}],["contract",{"0":{"4":1,"5":1,"6":1,"7":1,"9":1,"15":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"64":1,"65":1,"66":1,"141":1,"143":1,"144":1,"145":1,"146":1,"147":1,"149":1,"150":1,"154":1,"155":1,"160":1,"162":1,"170":1,"171":1,"172":1,"180":1,"181":1,"182":1,"193":1,"194":1,"195":1,"210":1,"267":1,"297":1},"1":{"67":1,"142":1,"143":1,"144":1,"145":2,"146":2,"147":1,"148":2,"149":2,"150":2,"151":1,"152":1,"153":1,"154":1,"155":2,"211":1,"268":1,"269":1,"270":1,"298":1,"299":1,"300":1,"301":1},"2":{"56":2,"62":4,"63":1,"64":2,"66":2,"67":2,"70":3,"82":1,"83":1,"93":1,"133":1,"141":1,"143":1,"145":1,"146":1,"148":1,"149":3,"150":1,"151":2,"153":1,"154":1,"155":3,"157":1,"158":2,"160":2,"161":2,"162":6,"163":1,"165":1,"167":1,"168":1,"170":2,"171":3,"172":5,"174":1,"177":1,"180":2,"181":3,"182":5,"184":1,"187":1,"192":1,"193":2,"194":1,"195":3,"196":1,"199":1,"206":2,"210":1,"213":2,"215":3,"219":3,"220":1,"221":1,"223":1,"224":1,"225":3,"229":1,"232":2,"236":2,"237":2,"241":1,"242":1,"248":1,"249":1,"260":1,"272":1,"274":1,"297":2,"298":1,"299":1,"300":1,"301":1,"313":1,"372":1,"373":1}}],["contributing",{"2":{"168":1}}],["contribute",{"2":{"61":1}}],["controlling",{"2":{"328":1}}],["controlled",{"2":{"68":1,"313":2,"324":1}}],["control",{"2":{"59":1,"70":1,"87":2,"137":2,"313":1,"324":1,"326":1,"327":1,"328":1,"358":1}}],["connectoptions",{"2":{"334":2}}],["connector",{"0":{"59":1},"2":{"49":2,"50":2,"59":12,"60":3,"132":2,"133":1}}],["connectors",{"0":{"58":1,"60":1,"61":1},"1":{"59":1},"2":{"35":4,"36":3,"37":3,"49":2,"50":2,"58":4,"59":5,"60":5,"61":2}}],["connectdetails",{"2":{"333":3,"334":1,"343":1,"358":2,"359":1}}],["connected",{"2":{"123":1,"333":1,"355":1,"358":1}}],["connect",{"0":{"38":1,"332":1,"334":1,"364":1},"1":{"333":1,"334":1,"335":2,"336":2,"337":2,"338":2,"339":2,"340":2,"341":2,"342":2,"343":2,"344":2,"345":2,"346":2,"347":2,"348":2,"349":2,"350":2,"351":2,"352":2,"353":1,"354":1,"355":1},"2":{"36":1,"37":1,"38":1,"50":1,"60":1,"132":1,"205":1,"323":1,"330":1,"332":3,"333":7,"334":2,"335":2,"338":1,"339":1,"340":1,"341":3,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"355":1,"358":5,"359":1,"364":1}}],["connecting",{"0":{"333":1,"353":1,"354":1,"355":1},"2":{"36":1,"342":2,"343":1,"345":1,"355":1}}],["connections",{"2":{"330":1}}],["connection",{"2":{"34":1,"38":1,"355":3}}],["guard",{"0":{"274":1,"327":1},"2":{"274":4,"275":2,"301":1,"311":1,"325":2,"327":2,"328":1}}],["guarantee",{"2":{"273":1,"304":1}}],["guarantees",{"2":{"271":1}}],["guestmodule",{"0":{"265":1},"2":{"266":1}}],["guess",{"2":{"188":1}}],["guidance",{"2":{"131":1}}],["guides",{"2":{"80":1,"93":1}}],["guide",{"2":{"34":1,"58":1,"59":1,"103":1,"141":1,"157":1,"160":1,"167":2,"170":1,"177":1,"180":1,"187":1,"331":1}}],["global",{"2":{"94":1}}],["groups",{"0":{"360":1},"2":{"163":1}}],["grant",{"2":{"159":1}}],["grab",{"0":{"84":1}}],["great",{"2":{"75":1}}],["gear",{"2":{"128":1}}],["general",{"0":{"104":1},"1":{"105":1,"106":1},"2":{"100":1,"104":2}}],["generated",{"2":{"131":1,"188":1,"285":2,"310":1,"325":2,"328":2,"362":1}}],["generate",{"0":{"365":1},"2":{"91":1,"115":1,"328":1}}],["generates",{"2":{"82":1,"159":1}}],["getchainid",{"2":{"367":1}}],["getprovider",{"2":{"367":1}}],["getwallet",{"2":{"333":5,"357":1,"358":1}}],["getelementbyid",{"2":{"286":1}}],["getsigner",{"2":{"364":1,"370":1,"371":2,"372":2,"373":2,"374":2}}],["getsessionhash",{"2":{"284":1,"285":1,"286":2}}],["getstorageat",{"2":{"241":1}}],["getimagehash",{"2":{"256":1}}],["getfunction",{"2":{"249":2,"255":1}}],["getaddress",{"2":{"236":1,"290":1,"357":1,"364":1,"365":1,"372":1,"373":1}}],["getkitconnectwallets",{"2":{"60":2}}],["getdefaultconnectors",{"2":{"36":2,"37":2,"60":1}}],["get",{"0":{"72":1,"191":1},"1":{"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1},"2":{"35":1,"72":1,"74":1,"75":2,"86":1,"111":1,"120":1,"136":1,"160":1,"169":1,"170":1,"180":1,"199":1,"203":1,"278":1,"284":2,"316":1,"320":1,"321":1,"357":1}}],["getting",{"0":{"20":1,"34":1,"101":1,"204":1,"279":1},"1":{"35":1,"102":1,"103":1,"280":1,"281":1,"282":1},"2":{"331":1}}],["gnosis",{"2":{"81":2,"212":1}}],["golang",{"2":{"377":1}}],["got",{"2":{"196":1}}],["going",{"2":{"157":1,"177":1}}],["go",{"0":{"74":1,"103":1,"142":1,"377":1},"1":{"105":1,"106":1,"143":1},"2":{"74":1,"110":1,"160":1,"170":1,"180":1,"214":1,"217":1,"302":1,"359":3,"377":6,"378":2,"379":1}}],["good",{"2":{"59":1}}],["googlelogin",{"2":{"286":3}}],["googleoauthprovider",{"2":{"286":3}}],["google",{"0":{"286":1},"2":{"49":1,"60":2,"274":1,"284":1,"286":8,"287":4,"301":1,"304":1,"328":1,"330":1,"333":1,"346":2,"348":1}}],["gain",{"2":{"275":2}}],["gained",{"2":{"168":1}}],["gather",{"2":{"188":1,"190":1}}],["gathering",{"2":{"82":1}}],["gateway",{"0":{"89":1,"92":1},"1":{"90":1,"91":1,"92":1},"2":{"89":1,"90":2,"93":1,"113":1}}],["gaming",{"0":{"169":1},"2":{"69":1,"87":1,"90":1,"137":1}}],["games",{"2":{"132":2,"158":1}}],["gamers",{"2":{"69":1}}],["game",{"0":{"4":1,"6":1,"11":1,"12":1,"17":1,"18":1,"26":1,"28":1,"30":1,"32":1,"69":1,"82":1,"87":1,"90":1,"131":1,"137":1,"156":1,"176":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1},"2":{"69":2,"81":1,"82":1,"85":2,"89":1,"123":1,"131":1,"133":2,"135":2,"157":2,"158":1,"159":1,"167":2,"169":3,"177":2,"193":1,"366":1}}],["gasused",{"2":{"312":1}}],["gaslimit",{"0":{"254":1},"2":{"249":2,"254":2,"255":1,"312":1}}],["gaslist",{"2":{"228":1}}],["gasless",{"2":{"133":1}}],["gas",{"0":{"68":1,"69":1,"70":2,"71":1},"1":{"69":1,"70":1,"71":1},"2":{"68":3,"69":3,"70":3,"93":1,"153":1,"162":1,"168":1,"172":1,"182":1,"226":1,"232":1,"254":1,"293":1}}],["giving",{"2":{"90":1}}],["give",{"2":{"109":1,"133":1,"149":2,"163":2,"312":1}}],["given",{"2":{"75":1,"125":1,"214":1,"217":1,"241":1,"245":1,"249":1,"251":1,"293":1}}],["gives",{"2":{"63":1,"87":1,"137":1,"313":1}}],["github",{"2":{"40":1,"377":1}}],["g",{"2":{"56":1,"211":1,"273":1,"362":1}}],["gt",{"2":{"36":9,"37":21,"38":6,"39":4,"41":3,"53":10,"54":4,"56":1,"59":2,"60":8,"190":1,"199":3,"216":1,"263":1,"286":16,"307":1,"308":1,"309":1,"317":1,"318":4,"333":1,"359":2}}],["menu",{"2":{"355":1}}],["mentioned",{"2":{"159":1}}],["measures",{"2":{"332":1}}],["meant",{"2":{"274":1,"313":1}}],["meaning",{"2":{"226":1}}],["means",{"2":{"158":1,"226":1,"240":1,"248":1,"249":1,"274":1,"275":1,"283":1,"321":1,"325":1,"332":1}}],["messages",{"0":{"291":1},"2":{"260":1,"261":1,"291":1,"359":1,"361":1,"362":1}}],["message",{"0":{"356":1,"366":1,"368":1},"1":{"357":1,"358":1,"359":1},"2":{"243":1,"261":5,"262":1,"291":2,"307":1,"312":2,"358":4,"362":1,"366":1,"368":3,"369":1}}],["me",{"0":{"91":1}}],["mechanism",{"2":{"87":1,"137":1}}],["methods",{"2":{"107":1,"162":1,"172":1,"182":1,"195":1,"250":1,"252":1,"294":1,"297":2,"301":1,"310":1}}],["method",{"0":{"75":1,"163":1,"173":1,"183":1},"2":{"107":2,"162":1,"172":1,"173":1,"182":1,"183":1,"213":2,"218":1,"240":2,"248":2,"249":1,"255":1,"256":2,"257":1,"263":1,"295":1,"297":2,"298":1,"302":1,"303":1,"305":1,"306":4,"333":1,"359":1}}],["metatxhash",{"2":{"293":1,"294":1,"295":1,"311":1}}],["meta",{"2":{"211":1,"274":1,"317":1,"379":1}}],["metadata",{"0":{"186":1,"188":1,"190":1,"196":1,"199":1},"1":{"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"2":{"67":2,"82":2,"187":1,"188":1,"189":1,"190":1,"195":1,"196":1,"199":4}}],["metamask",{"2":{"50":1,"59":1,"60":1,"209":1,"330":1,"332":2,"353":1}}],["multisignature",{"2":{"324":1}}],["multisig",{"2":{"272":1}}],["multisigs",{"2":{"272":1}}],["multi",{"0":{"139":1},"1":{"140":1},"2":{"158":1,"313":1}}],["multiple",{"2":{"90":1,"93":1,"97":1,"130":1,"211":1,"213":1,"226":1,"301":1,"313":1,"324":2,"332":1,"355":1,"371":2,"372":2,"373":2,"374":1}}],["mumbai",{"2":{"81":1,"199":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1}}],["much",{"0":{"83":1},"2":{"80":1}}],["must",{"2":{"49":1,"50":1,"236":1,"242":1,"263":1,"275":1,"293":2,"297":1,"311":1}}],["mobile",{"0":{"321":1},"2":{"321":2,"332":2,"333":1}}],["most",{"2":{"207":1,"214":1,"217":1,"313":1,"333":1}}],["moonpay",{"2":{"205":1,"323":1,"333":2,"349":1}}],["move",{"0":{"194":1}}],["monthly",{"2":{"126":2}}],["monitor",{"2":{"64":1,"91":1,"114":1}}],["more",{"2":{"59":1,"69":1,"87":1,"93":1,"133":1,"137":1,"146":2,"162":1,"167":1,"172":1,"182":1,"205":1,"211":1,"215":1,"218":1,"280":1,"293":1,"301":3,"313":1,"317":1,"323":1,"324":2,"330":1,"333":1,"355":1,"358":1}}],["moderately",{"2":{"324":1}}],["modern",{"2":{"320":1,"332":1}}],["model",{"0":{"275":1},"2":{"275":1}}],["modification",{"2":{"370":1}}],["modifier",{"2":{"240":1,"248":1}}],["modify",{"2":{"106":1,"195":1,"196":1}}],["moduleauth",{"2":{"242":1}}],["modules",{"0":{"237":1},"1":{"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1},"2":{"237":3,"238":1,"242":1,"250":1}}],["module",{"2":{"53":1,"89":1,"91":1,"237":1,"238":1,"242":2,"246":1,"250":1,"273":1}}],["modular",{"2":{"35":1}}],["modals",{"2":{"44":1}}],["modal",{"0":{"38":1,"39":1,"45":1,"54":1,"55":1,"153":1},"1":{"46":1,"47":1,"48":1,"49":1,"50":1,"56":1,"57":1},"2":{"34":1,"38":2,"43":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"54":1,"55":1,"66":1,"78":1,"129":1,"146":2,"153":1,"164":1,"174":1,"184":1}}],["mix",{"2":{"374":1}}],["mitm",{"2":{"275":1}}],["migration",{"0":{"258":1}}],["might",{"2":{"114":1,"199":1,"284":1,"304":1}}],["mimics",{"2":{"246":1}}],["mistakes",{"2":{"199":1,"213":1}}],["millions",{"2":{"133":1}}],["min",{"2":{"318":2}}],["minimalupgradeableproxy",{"2":{"223":1}}],["minimalupgradeableproxies",{"2":{"221":1}}],["minimum",{"2":{"188":1}}],["minutes",{"0":{"88":1,"138":1},"2":{"154":1,"164":1,"174":1,"184":1,"306":1}}],["minute",{"2":{"72":1}}],["mints",{"2":{"195":1}}],["minted",{"0":{"165":1,"175":1,"185":1},"2":{"159":1,"163":1,"165":2,"173":1,"175":1,"183":1,"185":1,"198":2}}],["minter",{"0":{"10":1,"16":1,"22":1},"2":{"67":1}}],["minting",{"0":{"197":1},"2":{"56":1,"64":1,"67":1,"149":1,"157":1,"160":1,"165":2,"167":1,"170":1,"174":1,"177":1,"180":1,"184":1,"199":1}}],["mint",{"0":{"11":1,"17":1,"21":1,"156":1,"163":1,"164":1,"166":1,"173":1,"174":1,"176":1,"183":1,"184":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1},"2":{"67":2,"159":1,"160":1,"162":2,"163":3,"164":1,"168":1,"170":1,"172":1,"173":2,"174":1,"180":1,"182":1,"183":2,"184":1,"195":1,"196":1,"197":3,"199":1,"299":2,"300":2}}],["middle",{"2":{"44":2}}],["myetherwallet",{"2":{"209":1}}],["mypinata",{"2":{"196":1}}],["mypage",{"2":{"36":3,"37":3}}],["my",{"0":{"63":1,"69":1,"82":1,"87":2,"90":1,"131":1,"137":2},"2":{"59":2,"60":3,"317":1,"335":1}}],["mycustomlogolight",{"2":{"59":1}}],["mycustomlogodark",{"2":{"59":1}}],["mycustomconnectoroptions",{"2":{"59":1}}],["mycustomconnector",{"2":{"59":2,"60":1}}],["mycomponent",{"2":{"39":1,"54":1}}],["myreactcomponent",{"2":{"38":1}}],["match",{"2":{"374":1}}],["matic",{"2":{"333":1}}],["malicious",{"2":{"324":1,"327":1,"328":1}}],["macbook",{"2":{"284":1,"286":1,"287":2,"288":1}}],["machines",{"2":{"213":1}}],["machine",{"2":{"210":1}}],["march",{"2":{"270":1}}],["marked",{"2":{"254":1}}],["marketplaces",{"2":{"168":1,"169":1}}],["marketplace",{"0":{"13":1,"19":1,"85":1,"87":1,"88":1,"135":1,"137":1,"138":1},"1":{"86":1,"87":1,"88":1,"136":1,"137":1,"138":1},"2":{"56":1,"85":2,"86":1,"87":1,"93":1,"135":2,"136":1,"137":1,"200":4,"202":1,"204":1}}],["magicvalue",{"2":{"263":1}}],["magic",{"2":{"263":3}}],["mail",{"2":{"262":1}}],["maintaining",{"2":{"332":1,"362":1}}],["mainmoduleinterface",{"2":{"249":2,"255":2}}],["mainmoduleupgradable",{"2":{"246":1,"249":3,"254":1,"255":1,"256":1,"257":1,"266":1}}],["mainmoduleupgradeable",{"0":{"246":1,"258":1},"1":{"247":1,"248":1}}],["mainmoduleaddressinitial",{"2":{"224":1}}],["mainmodule",{"2":{"223":2,"224":1,"225":1,"226":1,"235":1,"236":2,"237":1,"242":2,"246":1,"249":3,"266":1}}],["main",{"2":{"51":3,"286":3}}],["mainnet",{"2":{"36":2,"37":2,"97":1,"293":1,"333":1,"359":1}}],["maximum",{"2":{"128":1}}],["major",{"2":{"87":1,"137":1}}],["master",{"2":{"76":1}}],["maybe",{"2":{"154":1,"164":1,"174":1,"184":1}}],["may",{"2":{"75":1,"121":1,"148":1,"169":1,"206":1,"213":1,"225":1,"229":1,"239":1,"248":1,"269":1,"308":1,"317":1,"333":1}}],["making",{"2":{"64":1,"69":1,"178":1,"213":1,"328":1}}],["makes",{"2":{"70":1,"91":2,"178":1,"273":1}}],["make",{"2":{"59":1,"108":1,"109":1,"115":1,"116":1,"119":1,"122":1,"127":1,"128":1,"129":1,"141":1,"153":1,"199":1,"355":1}}],["many",{"2":{"358":1,"379":1}}],["managing",{"2":{"93":2}}],["managed",{"2":{"309":1}}],["manage",{"0":{"186":1},"1":{"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"2":{"89":1,"158":1,"187":1,"215":1,"330":1}}],["management",{"0":{"94":1,"283":1,"324":1},"1":{"95":1,"96":1,"97":1,"98":1,"284":1,"285":1,"286":1,"287":1,"288":1,"325":1,"326":1,"327":1,"328":1},"2":{"62":1,"93":1,"271":1,"273":1,"283":1}}],["manually",{"0":{"21":1},"2":{"306":1}}],["awesome",{"2":{"332":1}}],["aware",{"2":{"359":1}}],["await",{"2":{"241":1,"261":1,"262":1,"284":2,"285":4,"286":3,"287":2,"288":3,"290":2,"291":2,"293":2,"294":2,"295":2,"296":2,"299":1,"300":1,"301":1,"305":1,"306":2,"307":1,"308":1,"309":1,"311":2,"312":2,"333":2,"334":1,"335":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"358":1,"359":2,"364":1,"365":1,"366":1,"367":2,"368":1,"370":1,"371":2,"372":3,"373":3,"374":2}}],["away",{"2":{"68":1}}],["azure",{"2":{"196":1}}],["aim",{"2":{"169":1}}],["ahead",{"2":{"107":1,"145":1,"153":1}}],["apis",{"2":{"271":1}}],["api",{"0":{"114":1,"115":1,"116":1,"122":1,"222":1},"1":{"115":1,"116":1,"117":2,"118":2,"119":1,"120":1,"121":1,"122":1,"123":2,"124":2,"126":1,"223":1,"224":1,"225":1},"2":{"91":1,"93":1,"100":1,"114":2,"115":3,"116":1,"119":1,"120":1,"122":2,"123":1,"124":1,"200":2,"203":1,"204":2,"281":1,"285":1,"312":1}}],["appprotocol",{"0":{"336":1}}],["approval",{"2":{"301":1}}],["approve",{"2":{"301":1}}],["append",{"2":{"236":1}}],["appended",{"2":{"196":1}}],["appears",{"2":{"59":1}}],["appleid",{"2":{"328":1}}],["apple",{"0":{"286":1},"2":{"49":1,"285":1,"286":1,"346":1,"348":1}}],["applications",{"0":{"329":1},"1":{"330":1},"2":{"90":1,"273":1,"329":1,"358":1,"359":1,"362":2}}],["application",{"2":{"34":1,"36":1,"120":2,"271":1,"283":1,"286":2,"330":1,"331":1,"361":1,"362":1,"369":1}}],["appname",{"2":{"36":1,"37":1,"60":1}}],["app",{"0":{"335":1},"2":{"36":4,"37":3,"40":1,"41":1,"53":2,"60":4,"123":1,"133":1,"199":2,"273":1,"275":1,"286":1,"320":1,"321":1,"332":1,"333":2,"335":3,"358":1,"359":1}}],["against",{"2":{"232":2,"249":1,"257":1,"275":2,"328":1}}],["again",{"2":{"196":1,"325":1,"341":1}}],["aggregates",{"2":{"90":1}}],["aggregate",{"2":{"87":1,"137":1}}],["agreement",{"2":{"76":1,"94":1}}],["atomic",{"2":{"251":1}}],["attacks",{"2":{"286":1}}],["attacker",{"2":{"275":2,"326":1}}],["attackers",{"2":{"273":1}}],["attested",{"2":{"273":1}}],["attention",{"2":{"168":1}}],["attributes",{"0":{"195":1},"2":{"159":1,"188":1,"195":1}}],["at",{"2":{"86":1,"97":1,"111":1,"136":1,"146":1,"149":2,"188":1,"237":1,"238":1,"275":1,"277":1,"315":1,"320":1,"321":1,"325":1,"331":1,"358":1}}],["absolute",{"2":{"358":1}}],["abstraction",{"2":{"133":1}}],["abstracted",{"2":{"68":1}}],["ability",{"2":{"328":1}}],["abis",{"2":{"301":1}}],["abi",{"0":{"301":1},"2":{"263":1,"297":1,"298":1,"299":1,"300":1,"301":6}}],["above",{"2":{"231":1,"261":1,"262":1,"333":1,"358":1,"359":1}}],["about",{"2":{"78":1,"90":1,"93":1,"126":1,"157":1,"199":1,"215":1,"218":1,"333":1}}],["able",{"2":{"155":1,"165":1,"261":1,"275":2,"328":1,"332":3,"349":1,"352":1,"355":1}}],["after",{"2":{"76":1,"111":1,"120":1,"121":1,"153":1,"154":1,"164":2,"174":1,"184":1,"189":1,"215":1,"218":1,"219":1,"238":1,"292":1,"301":2,"333":1,"342":2}}],["audits",{"0":{"267":1},"1":{"268":1,"269":1,"270":1},"2":{"267":1}}],["audit",{"2":{"168":1}}],["audited",{"0":{"66":1},"1":{"67":1},"2":{"273":1}}],["authorizationmessage",{"2":{"366":2,"367":1}}],["authorization",{"0":{"366":1,"367":1},"2":{"359":1}}],["authorized",{"2":{"367":2}}],["authorizenonce",{"0":{"340":1},"2":{"340":2}}],["authorize",{"0":{"339":1},"2":{"333":1,"339":2,"358":2,"362":2,"366":1}}],["authenticated",{"2":{"282":1,"289":1}}],["authenticates",{"2":{"275":1}}],["authenticate",{"0":{"356":1,"358":1,"359":1},"1":{"357":1,"358":1,"359":1},"2":{"274":1,"283":1,"358":2,"359":1}}],["authenticating",{"2":{"274":1}}],["authentication",{"2":{"49":1,"50":1,"280":1,"283":1,"304":1,"317":1,"325":1,"362":1}}],["auth",{"0":{"273":1,"286":1},"2":{"273":1,"274":1,"275":2,"283":2,"284":1,"286":4,"302":1,"304":1,"336":1,"346":1,"359":1}}],["automatic",{"0":{"309":1},"2":{"90":1,"309":1}}],["automatically",{"2":{"38":1,"91":1,"193":1,"284":1,"293":1,"294":1,"295":1,"321":1,"337":1,"342":1,"346":1,"347":1,"358":3}}],["auto",{"2":{"90":1,"325":1}}],["availability",{"2":{"90":1}}],["available",{"0":{"42":1},"1":{"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1},"2":{"59":1,"100":1,"131":1,"205":1,"210":1,"273":1,"281":1,"286":1,"294":1,"323":1,"331":1,"332":1,"333":1,"344":1,"348":1,"376":1,"377":1}}],["avalanche",{"2":{"81":2}}],["avatars",{"2":{"96":1}}],["avatar",{"0":{"96":1,"106":1},"2":{"78":1,"96":1,"97":1,"100":1,"106":2}}],["avoid",{"2":{"59":1,"333":1}}],["alternatively",{"2":{"355":2}}],["alternative",{"2":{"213":1}}],["alongside",{"2":{"226":1}}],["along",{"2":{"80":1,"153":1,"155":1,"165":1,"196":1}}],["always",{"2":{"78":1,"96":1,"199":1,"253":1,"254":1,"274":1,"293":1,"312":1,"355":1,"359":1}}],["already",{"2":{"70":1,"75":1,"148":1,"160":2,"170":2,"180":2,"197":1,"214":2,"217":2,"284":1,"331":1,"333":1,"346":1,"347":1,"348":1,"355":2}}],["also",{"2":{"58":1,"59":1,"63":1,"70":1,"87":1,"93":2,"114":1,"125":1,"128":1,"129":2,"132":1,"133":1,"137":1,"146":1,"155":1,"165":1,"205":1,"210":1,"249":1,"257":1,"262":1,"274":1,"275":1,"286":1,"295":1,"296":1,"317":1,"323":1,"333":2,"352":1,"355":1,"376":1,"377":1,"378":1}}],["allowance",{"2":{"301":1}}],["allowlists",{"2":{"274":1}}],["allow",{"2":{"260":1,"271":1,"332":1,"347":1,"352":1}}],["allowed",{"2":{"250":1,"274":1,"300":1}}],["allows",{"2":{"106":1,"158":1,"195":1,"205":1,"206":1,"210":1,"213":1,"215":1,"232":1,"239":1,"242":1,"246":1,"301":1,"323":1,"327":1,"332":1,"358":3}}],["allowing",{"2":{"35":1,"64":1,"70":1,"78":1,"332":1}}],["all",{"2":{"51":1,"85":1,"89":1,"93":1,"97":1,"121":1,"123":1,"124":1,"125":1,"129":1,"133":1,"135":1,"139":2,"158":2,"159":1,"163":1,"188":1,"190":1,"191":1,"200":1,"213":1,"221":1,"239":1,"242":1,"249":1,"254":1,"273":1,"289":1,"292":2,"293":2,"320":1,"321":1,"325":1,"328":1,"330":1,"332":1,"349":1,"359":1,"377":1}}],["amazon",{"2":{"273":1,"303":1}}],["amount4",{"2":{"374":1}}],["amount3",{"2":{"374":1}}],["amount2",{"2":{"371":1,"372":1,"373":1,"374":1}}],["amount1",{"2":{"371":1,"372":1,"373":1}}],["amount",{"2":{"109":1,"126":1,"128":1,"163":2,"173":1,"183":1,"197":1,"254":1,"296":1,"351":2,"371":2,"373":1}}],["amountrequiredraw",{"2":{"56":1}}],["amongst",{"2":{"95":1}}],["amp",{"0":{"237":1,"258":1},"1":{"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1},"2":{"38":2,"132":1,"231":3,"286":2}}],["argument",{"2":{"306":1}}],["arguments",{"0":{"299":1,"300":1},"2":{"300":1,"301":2}}],["args",{"2":{"299":1,"300":1,"301":1}}],["argent",{"2":{"212":1}}],["architecture",{"0":{"272":1},"1":{"273":1,"274":1}}],["arcadeum",{"2":{"267":2}}],["arbitrary",{"2":{"210":1}}],["arbitrum",{"2":{"81":2,"293":1}}],["art",{"2":{"179":1}}],["around",{"2":{"77":1}}],["array",{"2":{"49":1,"50":1,"263":1}}],["area",{"2":{"129":1}}],["are",{"0":{"63":1,"132":1,"133":1,"231":1},"2":{"49":1,"50":1,"51":2,"59":1,"68":1,"70":1,"75":1,"76":1,"100":2,"103":1,"108":1,"109":1,"114":1,"115":1,"116":1,"119":1,"120":1,"122":1,"123":1,"125":1,"127":1,"128":1,"129":3,"131":1,"139":1,"149":1,"152":1,"157":1,"161":1,"168":1,"178":1,"179":1,"195":1,"199":1,"205":1,"207":2,"210":3,"214":1,"217":1,"221":2,"226":2,"231":1,"232":1,"236":1,"237":1,"240":1,"248":3,"249":1,"250":1,"252":1,"261":2,"262":1,"267":1,"272":2,"274":1,"275":3,"284":1,"286":1,"287":1,"292":1,"293":1,"294":1,"297":1,"309":1,"310":1,"311":1,"312":1,"313":1,"323":1,"325":3,"326":1,"328":1,"332":2,"333":1,"334":1,"362":2,"379":2}}],["act",{"2":{"362":1}}],["actor",{"2":{"324":1,"327":1,"328":1}}],["actually",{"2":{"370":1}}],["actual",{"2":{"317":1,"333":1,"358":1}}],["acting",{"2":{"324":1}}],["activity",{"2":{"327":1,"355":1}}],["activities",{"2":{"64":1,"69":1}}],["active",{"2":{"288":1}}],["action",{"0":{"71":1},"2":{"100":1,"129":1,"202":1,"274":1,"307":2,"309":1,"333":1,"362":1,"368":1}}],["actions",{"2":{"64":1,"100":1,"114":1,"274":1,"309":1,"362":1}}],["acquire",{"2":{"281":1}}],["achieves",{"2":{"274":1}}],["achievements",{"0":{"156":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1},"2":{"157":1,"159":1}}],["achievement",{"0":{"11":1,"12":1,"17":1,"18":1}}],["acc36ed4ef40db74137266e48d863083a5c7e85e2735d69adafcb5b362b6cfc0",{"2":{"293":1,"311":2}}],["accepted",{"2":{"333":1}}],["accelerating",{"2":{"200":1}}],["accessible",{"2":{"325":1}}],["accessing",{"2":{"311":1}}],["accessed",{"2":{"108":1,"109":1,"115":1,"116":1,"119":1,"122":1,"127":1,"128":1,"271":1}}],["access",{"0":{"114":1,"115":1,"116":1,"119":1,"122":1,"123":1,"124":1},"1":{"115":1,"116":1,"117":2,"118":2,"119":1,"120":2,"121":2,"122":1,"123":2,"124":2,"126":1},"2":{"36":1,"37":1,"60":1,"91":1,"93":1,"100":1,"107":2,"108":2,"109":2,"113":1,"114":2,"115":5,"116":1,"119":3,"120":1,"121":1,"122":3,"123":1,"124":1,"126":1,"273":3,"275":3,"281":1,"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1,"326":2,"328":1,"332":3,"333":2,"349":2}}],["accounts",{"0":{"207":1},"1":{"208":1,"209":1},"2":{"206":1,"207":2,"287":4,"301":2}}],["account",{"2":{"133":1,"189":1,"192":1,"273":1,"283":1,"284":1,"289":2,"290":1,"313":1,"325":3,"328":1,"333":1,"358":1,"379":1}}],["across",{"2":{"96":1,"132":1,"169":1}}],["admire",{"0":{"198":1}}],["administrative",{"2":{"129":1}}],["admin",{"2":{"67":3,"109":1,"129":1}}],["adoption",{"2":{"168":1}}],["advantages",{"2":{"133":1}}],["advanced",{"2":{"36":1}}],["adds",{"2":{"324":1}}],["added",{"2":{"107":1,"313":1,"328":1}}],["addition",{"2":{"93":1}}],["additional",{"2":{"58":1,"131":1,"132":1,"206":1,"215":1,"218":1,"231":1,"255":1,"303":1,"304":2,"327":2,"332":1}}],["additionally",{"2":{"35":1,"90":1,"91":1}}],["adding",{"2":{"70":1,"123":1,"162":1,"172":1,"182":1}}],["addresses",{"0":{"226":1},"2":{"213":1,"240":2,"248":3}}],["address",{"0":{"236":1,"290":1,"357":1},"2":{"66":1,"82":1,"108":3,"150":1,"162":1,"163":3,"172":1,"173":2,"182":1,"183":2,"189":1,"195":1,"197":4,"199":1,"213":3,"215":5,"218":5,"219":2,"223":2,"226":4,"229":3,"230":4,"232":1,"235":3,"236":4,"239":1,"241":10,"249":1,"252":1,"257":2,"262":1,"285":1,"286":1,"287":2,"290":2,"293":1,"299":2,"300":2,"301":13,"304":1,"311":2,"312":1,"333":1,"347":1,"357":3,"358":3,"359":3,"365":1,"371":2,"372":8,"373":8,"374":7,"379":1}}],["add",{"0":{"66":1,"108":1,"143":1},"1":{"67":1},"2":{"35":1,"37":1,"53":1,"62":1,"66":2,"78":1,"100":1,"107":2,"108":3,"114":1,"115":3,"123":2,"177":1,"273":1,"280":1,"317":4,"328":2,"333":1}}],["ask",{"0":{"357":1},"2":{"343":1,"371":1}}],["askforemail",{"0":{"343":1},"2":{"343":2}}],["asking",{"2":{"304":1,"358":1}}],["aspect",{"2":{"333":2,"345":1}}],["aspects",{"2":{"96":1,"283":1}}],["asset",{"2":{"295":1,"296":2}}],["assets",{"2":{"51":5,"69":1,"157":2,"167":1,"213":1,"296":1}}],["assured",{"2":{"273":1}}],["assurance",{"2":{"90":1}}],["assumes",{"2":{"160":1,"170":1,"180":1,"333":1}}],["associated",{"2":{"149":1,"263":1,"365":1}}],["assigned",{"2":{"238":2}}],["assign",{"2":{"66":1}}],["async",{"2":{"56":1,"286":3}}],["as",{"0":{"318":1},"2":{"35":1,"36":1,"37":1,"49":1,"50":1,"59":2,"64":1,"66":1,"68":1,"93":2,"96":1,"114":1,"149":2,"159":2,"167":1,"169":1,"179":2,"188":1,"189":1,"197":2,"205":1,"206":1,"210":1,"215":1,"218":1,"224":1,"232":1,"236":1,"241":1,"242":1,"261":4,"262":3,"263":1,"267":1,"271":1,"272":1,"281":1,"282":1,"284":1,"285":4,"292":1,"293":1,"294":1,"298":1,"301":1,"306":1,"307":1,"318":1,"323":1,"328":1,"330":1,"340":1,"351":1,"355":2,"358":1,"359":2,"362":2,"370":1,"371":2,"372":2,"373":2,"374":1,"378":1,"379":1}}],["a",{"0":{"9":1,"10":1,"15":1,"16":1,"22":1,"59":1,"65":1,"75":1,"77":1,"88":1,"92":1,"98":1,"102":1,"108":1,"115":1,"119":1,"122":1,"129":1,"131":1,"134":1,"138":1,"143":1,"144":1,"145":1,"149":1,"150":1,"160":2,"170":2,"180":2,"202":1,"277":1,"315":1,"365":1,"374":1},"1":{"78":1,"79":1,"120":1,"121":1,"123":1,"124":1,"126":1,"145":1,"146":1},"2":{"36":1,"43":2,"49":2,"50":2,"51":1,"54":1,"56":1,"59":5,"60":1,"61":1,"62":2,"63":2,"64":1,"66":3,"68":2,"69":3,"70":7,"72":2,"75":5,"77":1,"78":2,"80":1,"83":4,"85":1,"89":1,"95":1,"96":2,"97":3,"100":1,"102":3,"104":1,"105":1,"108":2,"109":3,"111":1,"112":1,"113":1,"114":3,"115":3,"117":1,"119":1,"121":1,"122":1,"123":2,"127":1,"128":2,"129":3,"132":3,"133":2,"135":1,"141":2,"145":2,"146":1,"149":4,"150":1,"151":2,"152":2,"153":5,"154":1,"158":2,"159":1,"160":2,"162":1,"163":3,"164":3,"165":1,"168":1,"170":2,"171":1,"172":1,"173":1,"174":3,"178":2,"179":1,"180":2,"182":1,"183":1,"184":3,"187":1,"188":2,"190":1,"191":1,"197":1,"198":1,"200":3,"202":1,"203":1,"205":1,"206":1,"207":1,"213":3,"214":3,"215":3,"216":1,"217":4,"223":1,"224":2,"225":3,"227":3,"228":1,"230":1,"231":1,"232":1,"238":2,"240":1,"241":1,"242":1,"243":1,"246":1,"248":2,"249":1,"251":2,"253":1,"254":1,"256":1,"257":3,"261":1,"262":2,"271":1,"272":2,"273":6,"274":2,"275":1,"278":1,"281":1,"282":2,"283":1,"284":3,"285":3,"286":6,"287":1,"288":1,"290":1,"292":1,"293":4,"295":1,"297":1,"298":2,"300":1,"301":1,"303":2,"304":2,"306":2,"307":4,"311":2,"312":2,"313":5,"316":1,"317":2,"318":1,"323":1,"324":7,"325":5,"327":3,"328":6,"329":2,"330":3,"331":1,"332":6,"333":4,"334":1,"341":1,"345":2,"346":1,"351":1,"353":2,"355":1,"358":6,"359":2,"361":1,"362":7,"365":1,"366":1,"368":1,"369":1,"370":2,"371":4,"372":3,"373":3,"374":1,"377":1,"379":4}}],["announced",{"2":{"335":1}}],["anonymous",{"2":{"301":2}}],["another",{"2":{"120":1,"123":1,"179":1,"229":1,"274":1,"325":1}}],["answer",{"2":{"285":2}}],["anything",{"2":{"333":1}}],["anytime",{"2":{"152":1}}],["anyone",{"2":{"273":1}}],["any",{"0":{"297":1,"354":1},"1":{"298":1,"299":1,"300":1,"301":1},"2":{"75":1,"82":6,"97":1,"107":1,"115":1,"155":1,"157":1,"196":1,"197":1,"213":1,"226":1,"231":2,"248":2,"255":1,"267":1,"275":1,"282":1,"286":1,"288":2,"297":1,"310":1,"311":1,"312":1,"320":1,"321":1,"332":3,"333":1,"355":1,"359":1}}],["and",{"0":{"133":1,"149":1,"156":1,"160":1,"164":1,"170":1,"174":1,"180":1,"184":1,"188":1,"198":1,"265":1,"289":1,"334":1,"364":1},"1":{"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1},"2":{"34":1,"35":2,"40":1,"49":1,"50":1,"54":1,"58":1,"59":1,"60":1,"61":1,"62":3,"63":1,"64":4,"66":3,"67":1,"69":2,"70":3,"72":3,"74":1,"76":1,"78":1,"81":5,"82":3,"85":1,"87":1,"90":3,"91":2,"93":3,"94":2,"96":1,"97":1,"100":1,"105":1,"106":1,"107":3,"108":3,"109":2,"110":1,"111":1,"113":2,"114":1,"115":3,"116":1,"117":1,"119":1,"120":1,"122":1,"123":1,"125":1,"127":2,"128":1,"129":3,"131":3,"132":2,"133":5,"135":1,"137":1,"139":1,"141":2,"145":1,"152":1,"154":1,"157":1,"158":1,"159":2,"160":2,"162":1,"164":1,"165":1,"168":2,"170":2,"172":1,"174":2,"175":1,"177":2,"179":2,"180":2,"182":1,"184":2,"185":1,"188":1,"189":2,"192":1,"193":1,"195":1,"196":2,"197":1,"198":2,"199":1,"200":2,"205":1,"206":1,"210":1,"213":1,"216":1,"217":1,"220":1,"225":1,"226":1,"227":1,"230":1,"232":3,"235":1,"243":2,"249":1,"253":1,"254":1,"257":1,"260":1,"261":2,"262":1,"263":2,"267":1,"271":3,"273":4,"274":5,"280":1,"281":1,"284":1,"286":4,"287":1,"289":1,"290":1,"293":3,"301":2,"305":2,"312":1,"313":3,"317":1,"323":1,"325":3,"327":1,"328":5,"329":1,"330":3,"332":6,"333":5,"337":2,"339":1,"343":1,"353":1,"355":2,"358":3,"359":1,"362":3,"365":1,"369":1,"374":1,"377":1,"378":1}}],["an",{"0":{"4":1,"6":1,"13":1,"19":1,"26":1,"28":1,"30":1,"32":1,"109":1,"110":1,"111":1,"116":1,"141":1,"158":1,"178":1},"1":{"110":1,"111":1,"117":2,"118":2,"120":1,"121":1,"123":1,"124":1,"126":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1},"2":{"40":1,"59":4,"75":1,"78":1,"81":1,"94":1,"106":1,"107":1,"109":1,"110":1,"111":1,"114":1,"128":1,"129":2,"132":1,"145":3,"149":1,"157":1,"159":1,"160":1,"161":1,"162":1,"163":1,"167":1,"170":1,"172":1,"177":1,"178":1,"180":1,"182":1,"189":1,"195":1,"204":1,"219":1,"229":1,"239":1,"248":1,"249":1,"254":1,"271":2,"274":1,"275":2,"283":1,"284":1,"285":6,"288":1,"293":1,"297":1,"298":1,"301":2,"303":1,"306":1,"307":1,"312":3,"313":1,"325":1,"326":1,"332":2,"339":1,"340":1,"347":1,"351":1,"355":1,"358":2,"359":1,"361":1,"371":1,"372":2,"373":2,"378":1}}],["w3c",{"2":{"332":1}}],["wyre",{"2":{"323":1}}],["won",{"2":{"273":1}}],["wooden",{"2":{"196":1}}],["world",{"2":{"261":1,"291":1,"329":1}}],["worry",{"2":{"90":1}}],["workflow",{"2":{"358":1}}],["works",{"2":{"127":1,"320":1,"321":1,"332":1,"333":3,"345":1,"376":1}}],["work",{"2":{"61":1,"93":1,"197":1,"285":1,"332":4}}],["workers",{"0":{"22":1}}],["wouldn",{"2":{"275":1}}],["would",{"0":{"69":1,"87":1,"137":1},"2":{"76":1,"78":1,"128":1,"161":1,"171":1,"181":1,"313":1,"327":1,"328":1,"333":1}}],["wrong",{"2":{"352":2}}],["written",{"2":{"359":1,"376":1,"377":1,"379":1}}],["writing",{"2":{"83":1}}],["write",{"0":{"83":1,"162":1,"172":1,"182":1},"2":{"64":1,"109":1,"162":1,"163":1,"164":1,"172":1,"173":1,"174":1,"182":1,"183":1,"184":1,"195":1,"196":1,"198":1}}],["wrap",{"2":{"36":1}}],["wrappers",{"2":{"59":1}}],["wrapper",{"0":{"36":1,"37":1},"2":{"36":2,"37":1,"41":1}}],["who",{"2":{"275":1,"304":1,"332":1}}],["whole",{"2":{"251":1}}],["while",{"2":{"200":1,"249":1,"271":1,"273":1,"321":1,"328":1,"332":1,"343":1,"355":1,"358":1,"362":1}}],["white",{"0":{"85":1,"135":1},"1":{"86":1,"87":1,"88":1,"136":1,"137":1,"138":1},"2":{"85":1,"135":1}}],["which",{"2":{"49":1,"50":1,"51":1,"78":1,"113":1,"127":1,"133":1,"146":1,"153":1,"169":1,"205":2,"206":1,"221":1,"240":1,"243":1,"248":1,"256":1,"272":1,"313":1,"321":1,"323":2,"332":1,"335":1,"353":1,"355":1,"358":2,"371":1,"372":1,"373":1,"376":1,"378":1}}],["why",{"0":{"69":1,"87":1,"137":1,"206":1},"1":{"207":1,"208":1,"209":1,"210":1,"211":1,"212":1},"2":{"226":1}}],["what",{"0":{"63":1,"64":1,"82":1,"90":1,"91":1,"132":1,"133":1,"158":1,"159":1,"178":1},"2":{"96":1,"155":1,"178":1,"195":1,"210":1,"250":1,"274":1}}],["where",{"2":{"110":1,"114":1,"123":1,"127":2,"195":1,"345":1,"361":1,"379":1}}],["whenever",{"2":{"283":1}}],["when",{"2":{"60":1,"75":1,"102":1,"107":1,"120":1,"149":1,"152":2,"154":1,"162":1,"165":1,"172":1,"174":1,"182":1,"184":1,"221":1,"249":1,"254":2,"263":1,"274":1,"286":2,"293":1,"304":1,"307":2,"309":1,"325":1,"333":2,"334":1,"345":1,"350":1,"358":1}}],["whether",{"2":{"48":1,"263":1,"304":1,"307":1,"343":1,"352":1}}],["width=",{"2":{"286":1}}],["widespread",{"2":{"168":1}}],["window",{"2":{"152":1,"333":1,"342":1}}],["wish",{"2":{"113":1,"160":1,"170":1,"180":1,"304":1}}],["will",{"0":{"83":1},"2":{"34":1,"37":1,"38":1,"48":1,"49":2,"50":2,"51":2,"58":1,"72":1,"75":2,"76":1,"78":1,"102":1,"103":1,"104":1,"111":2,"114":1,"118":1,"124":1,"127":2,"128":1,"129":4,"131":3,"146":1,"149":2,"150":1,"151":2,"153":3,"154":2,"160":1,"162":2,"163":1,"164":3,"165":1,"169":1,"170":1,"172":2,"173":1,"174":4,"180":1,"182":2,"183":1,"184":4,"191":1,"193":1,"196":4,"197":2,"205":2,"213":1,"225":1,"226":1,"239":1,"240":1,"248":2,"251":1,"254":1,"261":2,"262":2,"263":1,"274":3,"281":1,"285":3,"293":2,"306":1,"310":1,"311":1,"312":4,"321":1,"323":2,"328":2,"330":1,"332":3,"333":2,"335":1,"337":1,"339":1,"341":1,"342":1,"343":2,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"352":1,"355":1,"358":3,"370":1}}],["without",{"2":{"75":1,"83":1,"87":1,"121":1,"137":1,"226":1,"248":1,"255":1,"310":1,"332":1,"333":2,"361":1,"362":1,"368":2}}],["withdraw",{"2":{"67":2}}],["within",{"2":{"36":1,"63":1,"103":1,"162":1,"172":1,"182":1,"210":1,"274":1,"306":1,"330":1,"332":1}}],["with",{"0":{"8":1,"14":1,"34":1,"65":1,"70":1,"131":1,"134":1,"159":1,"333":1,"353":1,"354":1,"356":1,"360":1,"363":1,"368":1,"375":1},"1":{"35":1,"357":1,"358":1,"359":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"376":1,"377":1,"378":1,"379":1},"2":{"35":1,"36":1,"43":1,"56":2,"58":1,"59":1,"61":1,"62":2,"63":1,"66":1,"68":1,"72":1,"75":1,"76":1,"81":1,"85":3,"87":2,"89":2,"90":1,"93":1,"94":1,"97":1,"114":1,"121":1,"123":1,"124":1,"128":2,"132":2,"133":1,"135":3,"137":2,"145":1,"149":1,"153":1,"155":1,"158":1,"159":1,"162":2,"164":1,"165":1,"168":1,"172":1,"174":1,"179":2,"182":1,"184":1,"187":1,"189":1,"196":1,"198":1,"199":1,"200":1,"203":1,"205":1,"215":1,"216":1,"218":1,"219":1,"224":2,"227":1,"228":1,"229":1,"231":1,"239":1,"261":1,"263":2,"267":1,"271":2,"273":2,"274":3,"275":2,"278":1,"280":1,"281":1,"282":1,"283":1,"284":2,"285":3,"286":1,"288":1,"290":1,"298":1,"300":1,"302":1,"303":1,"306":2,"313":1,"316":1,"317":2,"320":1,"321":1,"323":1,"324":1,"325":3,"326":1,"329":2,"330":3,"331":1,"332":4,"333":1,"334":1,"344":1,"346":2,"347":2,"358":2,"359":2,"362":1,"366":1,"371":1,"372":1,"373":1,"377":1,"379":2}}],["were",{"2":{"275":1,"362":1}}],["weight",{"2":{"228":2,"229":2,"230":4,"231":4,"248":1}}],["weights",{"2":{"227":1,"243":1,"247":1}}],["week",{"2":{"109":1,"338":1}}],["well",{"2":{"93":1,"149":1,"261":1,"262":1,"328":1,"370":1,"379":1}}],["we",{"2":{"34":1,"72":1,"90":1,"91":1,"124":1,"145":1,"157":1,"159":1,"161":1,"162":2,"165":1,"169":1,"175":2,"177":1,"185":1,"219":2,"273":1,"280":1,"304":3,"317":1,"328":1,"332":1,"358":1}}],["web2",{"2":{"332":1}}],["web3modal",{"2":{"333":1,"353":1}}],["web3",{"0":{"87":1,"137":1,"329":1,"353":1},"1":{"330":1},"2":{"36":1,"50":1,"68":1,"69":1,"89":1,"91":1,"132":1,"193":1,"321":1,"329":2,"330":2,"332":6}}],["web",{"0":{"23":1,"24":1,"320":1},"2":{"131":1,"132":1,"273":1,"320":1,"321":1,"332":3}}],["was",{"2":{"263":1,"267":1,"311":2,"328":1}}],["warning",{"2":{"239":1,"254":1}}],["wants",{"2":{"327":1}}],["want",{"0":{"69":1,"87":1,"137":1},"2":{"66":1,"82":1,"96":1,"108":1,"109":3,"110":1,"113":1,"114":1,"116":1,"119":1,"121":1,"122":1,"123":2,"124":1,"127":1,"129":1,"148":1,"163":2,"173":2,"183":2,"195":1,"199":1,"332":1,"343":1,"358":1,"370":1}}],["watch",{"0":{"65":1,"71":1,"84":1,"88":1,"92":1,"98":1,"112":1,"134":1,"138":1},"2":{"112":2,"131":1}}],["ways",{"2":{"274":1,"332":1}}],["way",{"2":{"61":1,"75":1,"77":1,"131":1,"200":1,"242":1,"249":1,"273":1,"298":1,"362":1}}],["wagmiconfig",{"2":{"36":3,"37":4,"53":2,"60":3}}],["wagmiprovider",{"2":{"36":1,"37":1}}],["wagmi",{"2":{"35":4,"36":5,"37":2,"38":2,"49":1,"50":1,"59":3,"60":1,"329":1}}],["walkthrough",{"2":{"169":1}}],["walks",{"2":{"141":1,"167":1}}],["walk",{"2":{"34":1,"58":1,"107":1,"157":1,"177":1}}],["walletaddress",{"2":{"286":2}}],["walletauthoptions",{"0":{"50":1},"2":{"60":2}}],["walletinterface",{"2":{"249":2}}],["walletconnect",{"0":{"355":1},"2":{"330":1,"332":1,"353":1,"355":4}}],["walletconnectprojectid",{"2":{"36":1,"37":1}}],["walletcontext",{"2":{"266":1}}],["walletcontractbytecode",{"2":{"236":1}}],["walletproxybytecode",{"2":{"236":1}}],["wallets",{"0":{"206":1,"210":1,"289":1,"325":1,"329":1},"1":{"207":1,"208":1,"209":1,"210":1,"211":2,"212":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"326":1,"327":1,"328":1,"330":1},"2":{"36":1,"49":1,"50":1,"58":1,"68":1,"93":1,"131":1,"133":1,"206":2,"210":3,"213":2,"221":2,"226":3,"232":1,"237":2,"238":1,"239":1,"242":1,"248":1,"249":1,"257":1,"260":1,"271":3,"272":1,"273":1,"274":1,"275":5,"292":1,"313":1,"328":1,"329":1,"330":1,"332":1,"378":1}}],["wallet",{"0":{"3":1,"37":1,"39":1,"130":1,"131":1,"134":1,"152":1,"216":1,"220":1,"221":1,"227":1,"235":1,"236":1,"237":1,"238":1,"242":1,"252":1,"257":1,"266":1,"271":1,"290":1,"313":1,"320":1,"321":1,"322":1,"332":1,"334":1,"354":1,"357":1,"358":1,"359":1,"361":1,"364":1},"1":{"131":1,"132":1,"133":1,"134":1,"222":1,"223":1,"224":1,"225":1,"226":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":2,"238":1,"239":2,"240":2,"241":2,"242":1,"243":2,"244":2,"245":2,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"272":1,"273":1,"274":1,"275":1,"333":1,"334":1,"335":2,"336":2,"337":2,"338":2,"339":2,"340":2,"341":2,"342":2,"343":2,"344":2,"345":2,"346":2,"347":2,"348":2,"349":2,"350":2,"351":2,"352":2,"353":1,"354":1,"355":1},"2":{"34":1,"35":3,"36":1,"37":4,"39":3,"50":3,"51":1,"75":4,"82":2,"83":1,"95":1,"108":2,"130":1,"131":1,"132":8,"133":5,"139":1,"150":1,"151":1,"152":2,"153":3,"159":1,"164":1,"174":1,"184":1,"197":1,"205":2,"206":1,"207":1,"213":2,"214":2,"216":2,"217":3,"220":3,"224":2,"225":1,"226":7,"227":1,"229":1,"232":2,"235":4,"236":5,"237":1,"238":1,"239":3,"240":3,"241":5,"242":3,"243":3,"244":1,"245":1,"246":1,"247":2,"248":6,"249":6,"250":1,"251":2,"252":2,"254":3,"255":2,"256":3,"257":5,"261":6,"262":7,"263":2,"267":3,"271":5,"272":1,"273":2,"277":1,"278":1,"280":2,"281":3,"282":2,"283":1,"284":1,"285":1,"289":2,"290":1,"291":1,"292":2,"293":1,"302":1,"312":3,"313":6,"315":1,"317":2,"321":2,"323":2,"324":8,"325":3,"328":1,"330":3,"332":12,"333":19,"334":2,"335":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":3,"343":2,"344":2,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"355":2,"357":3,"358":6,"359":1,"361":1,"362":5,"364":6,"365":1,"366":1,"367":3,"368":1,"370":2,"371":3,"372":3,"373":3,"374":2,"379":1}}],["waasconfigkey",{"2":{"282":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1}}],["waas",{"0":{"8":1,"14":1},"2":{"280":1,"282":4,"283":1,"284":6,"285":6,"286":5,"287":5,"288":6,"290":5,"291":5,"293":6,"294":5,"295":5,"296":5,"305":1,"306":2,"307":1,"308":2,"309":1,"311":5,"312":5,"317":1}}],["snippet",{"2":{"359":1}}],["snippets",{"2":{"82":1,"131":1}}],["src=",{"2":{"318":2}}],["skyweaver",{"2":{"296":1}}],["skip",{"2":{"107":1,"145":1}}],["slot",{"2":{"241":5}}],["synonymous",{"2":{"267":1}}],["sync",{"2":{"90":1}}],["system",{"2":{"206":1,"271":1,"280":1,"283":1,"317":1}}],["symbols",{"2":{"149":1}}],["symbol",{"0":{"149":1},"2":{"149":2,"301":1}}],["sdk",{"0":{"280":1},"2":{"130":1,"131":4,"132":3,"133":2,"280":3,"282":1,"283":1,"285":3,"286":2,"289":1,"312":1,"317":5,"359":1,"377":1}}],["sdks",{"0":{"130":1},"1":{"131":1,"132":1,"133":1,"134":1},"2":{"131":1,"139":1,"280":1,"281":1,"317":1}}],["scan",{"2":{"355":1}}],["scanned",{"2":{"355":2}}],["scalability",{"2":{"90":1}}],["scenario",{"2":{"275":5}}],["scenarios",{"2":{"208":1,"275":1}}],["scope",{"2":{"261":1,"262":1,"285":1,"362":1}}],["script",{"2":{"213":1,"216":2,"318":5}}],["scroll",{"2":{"196":1,"197":1}}],["screen",{"2":{"44":1,"103":1,"127":1,"194":1,"335":1}}],["smooth",{"2":{"329":1,"330":1}}],["smoothly",{"2":{"90":1}}],["small",{"2":{"370":1}}],["smaller",{"2":{"100":1,"103":1}}],["smart",{"0":{"146":1,"147":1,"160":1,"170":1,"180":1,"206":1,"210":1},"1":{"148":1,"149":1,"150":1,"207":1,"208":1,"209":1,"210":1,"211":2,"212":1},"2":{"62":2,"64":1,"68":1,"81":2,"113":1,"133":1,"145":1,"149":1,"151":1,"155":1,"160":2,"162":2,"165":1,"170":2,"172":1,"174":1,"180":2,"182":1,"184":1,"206":2,"210":2,"213":1,"229":1,"248":1,"272":1,"273":1,"313":1,"359":1}}],["switching",{"2":{"90":1}}],["spender",{"2":{"301":3}}],["special",{"2":{"178":1,"333":1}}],["specify",{"2":{"107":1,"205":1,"293":1,"323":1,"333":1,"334":1,"346":1,"347":1,"348":1,"351":1}}],["specifying",{"2":{"60":1}}],["specified",{"2":{"293":2,"351":1,"352":1,"371":1}}],["specifies",{"2":{"56":1,"57":1}}],["specification",{"2":{"215":1}}],["specific",{"2":{"43":1,"66":1,"70":1,"83":2,"96":1,"100":1,"114":2,"123":1,"124":1,"178":1,"199":1,"317":1,"355":1,"362":1}}],["space",{"2":{"211":1}}],["split",{"2":{"179":1}}],["sponsored",{"2":{"70":1,"93":1}}],["sponsor",{"0":{"69":1},"2":{"70":3}}],["sponsoring",{"0":{"70":1},"2":{"68":1,"69":2,"70":1}}],["sample",{"2":{"286":1}}],["same",{"2":{"93":1,"131":2,"179":1,"213":2,"226":2,"254":1,"284":1,"358":1,"374":1}}],["saltbytes32arbitrary",{"2":{"224":1}}],["salt",{"2":{"215":1,"223":1,"224":2,"225":1,"226":1,"232":1,"236":1,"237":1,"249":1}}],["safetransferfrom",{"2":{"372":5,"373":5,"374":4}}],["safeguarding",{"2":{"326":1}}],["safeguards",{"2":{"275":1}}],["safely",{"2":{"226":1}}],["safe",{"2":{"212":1,"275":1}}],["sardine",{"2":{"205":1,"323":1}}],["say",{"2":{"159":1}}],["save",{"2":{"105":1,"106":1,"123":1,"124":1,"128":1,"131":1}}],["saved",{"2":{"63":1}}],["sadfasdf",{"2":{"3":1}}],["situation",{"2":{"379":1}}],["silently",{"2":{"308":1}}],["since",{"2":{"253":1,"254":1,"293":1,"313":1,"326":1}}],["singletondeployer",{"2":{"226":1}}],["singleton",{"0":{"215":1},"2":{"215":7,"216":1}}],["single",{"2":{"97":1,"158":1,"168":1,"190":1,"207":1,"215":1,"301":1,"313":1,"317":1,"324":1,"371":3,"372":2,"373":2,"374":1}}],["simulation",{"2":{"312":1}}],["simulations",{"2":{"293":1,"294":1,"295":1,"311":1,"312":1}}],["simulating",{"2":{"312":1}}],["similarly",{"2":{"132":1,"285":1}}],["similar",{"2":{"132":1,"262":1,"372":1,"373":1}}],["simplicity",{"2":{"168":1}}],["simplify",{"0":{"91":1}}],["simplified",{"2":{"63":1}}],["simplifies",{"2":{"62":1}}],["simply",{"2":{"75":1,"77":1,"82":1,"131":1,"158":1,"189":1}}],["simpler",{"2":{"358":1}}],["simple",{"2":{"70":1,"97":1,"197":1,"200":1,"208":1,"273":1,"286":1,"332":1,"358":1}}],["side",{"0":{"359":1},"2":{"103":1,"142":1,"275":1,"359":1,"362":1,"367":1,"368":1,"369":1,"379":1}}],["signtransactions",{"2":{"370":1}}],["sign+verify",{"2":{"358":1}}],["signmessage",{"2":{"261":1,"262":1,"291":1,"366":1,"368":1}}],["signer",{"0":{"229":1,"273":1,"274":1},"1":{"230":1,"231":1},"2":{"229":2,"242":1,"364":2,"366":1,"370":2,"371":4,"372":4,"373":4,"374":4}}],["signerssigner",{"2":{"228":1}}],["signers",{"0":{"231":1},"2":{"227":1,"228":2,"230":2,"231":2,"237":1,"240":1,"242":1,"243":1,"247":1,"248":4,"261":1,"262":1,"272":1}}],["signedmessage",{"2":{"291":1}}],["signed",{"0":{"261":1},"2":{"75":1,"76":1,"141":1,"152":1,"160":1,"170":1,"180":1,"215":1,"218":1,"261":3,"262":1,"263":1,"333":2,"346":1,"347":1,"348":1,"358":3,"359":1,"362":1,"370":1}}],["signaturevalidation",{"2":{"263":1}}],["signatures",{"0":{"262":1,"361":1},"2":{"232":1,"242":1,"243":1,"249":1,"261":1,"262":1,"263":5,"291":1,"379":1}}],["signature",{"0":{"153":1,"260":1,"298":1,"356":1,"367":1,"369":1},"1":{"261":1,"262":1,"263":1,"299":1,"300":1,"357":1,"358":1,"359":1},"2":{"153":1,"164":1,"174":1,"184":1,"228":1,"229":1,"232":1,"260":1,"261":2,"262":2,"263":8,"291":3,"297":1,"298":2,"299":1,"300":2,"358":1,"359":1,"366":1,"367":2,"369":3}}],["signup",{"2":{"152":1}}],["signinwithemail",{"0":{"347":1},"2":{"347":2}}],["signinwith",{"0":{"346":1},"2":{"346":2}}],["signinoptions",{"0":{"348":1},"2":{"333":2,"348":2}}],["signingin",{"2":{"286":1}}],["signing",{"2":{"72":1,"260":1,"261":1,"262":1,"284":2,"301":1,"307":1,"339":1,"355":1,"358":1,"362":1,"370":1}}],["signin",{"0":{"45":1,"46":1,"47":1,"48":1,"49":1,"50":1},"1":{"46":1,"47":1,"48":1,"49":1,"50":1},"2":{"45":1,"60":1,"284":1,"285":1,"286":1,"287":1,"288":1,"290":1,"291":1,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1}}],["signs",{"2":{"38":1}}],["sign",{"0":{"45":1,"73":1,"75":1,"76":1,"151":1,"164":1,"174":1,"184":1,"284":2,"285":2,"291":1,"366":1,"368":1},"1":{"46":1,"47":1,"48":1,"49":1,"50":1,"74":1,"75":1,"76":1,"152":1,"153":1,"285":2,"286":2},"2":{"38":1,"45":1,"46":1,"47":1,"48":1,"49":1,"67":1,"72":1,"75":3,"76":1,"151":2,"153":1,"154":1,"164":1,"174":1,"184":1,"194":1,"196":1,"198":1,"272":1,"274":1,"284":1,"285":1,"291":1,"333":1,"343":1,"346":1,"347":1,"348":1,"358":2,"361":1,"366":1,"368":1}}],["shape=",{"2":{"286":1}}],["sharing",{"0":{"110":1}}],["share",{"0":{"61":1},"2":{"61":1,"110":2,"343":1}}],["shortly",{"2":{"131":1}}],["should",{"2":{"59":1,"72":1,"79":1,"108":1,"109":1,"123":1,"152":1,"155":2,"161":1,"165":1,"171":1,"181":1,"188":1,"189":1,"195":1,"196":1,"215":1,"218":1,"219":1,"251":1,"254":4,"256":1,"307":1,"317":1,"326":1,"345":1,"369":1}}],["show",{"2":{"350":1}}],["showing",{"2":{"146":1,"191":1}}],["showemailinput",{"0":{"48":1}}],["shown",{"2":{"46":1,"47":1,"48":1,"49":1,"50":1,"57":1}}],["soon",{"2":{"273":1}}],["soliditypack",{"2":{"236":2}}],["solves",{"2":{"69":1}}],["some",{"2":{"153":1,"162":1,"208":1,"284":1,"333":1,"379":1}}],["something",{"2":{"95":2,"96":1,"188":1,"196":1,"317":1}}],["source",{"2":{"146":1,"273":1,"318":1,"333":1,"378":1}}],["so",{"2":{"59":1,"77":1,"80":1,"93":1,"96":1,"100":1,"102":1,"105":1,"115":1,"129":1,"141":1,"148":1,"160":1,"161":1,"162":1,"170":1,"180":1,"196":1,"210":1,"250":1,"252":1,"273":1,"359":1}}],["social",{"0":{"304":1,"325":1},"1":{"326":1,"327":1,"328":1},"2":{"49":1,"75":1,"133":1,"211":1,"273":1,"284":1,"285":1,"286":1,"301":1,"304":1,"305":1,"324":1,"325":3,"328":2,"330":1}}],["socialauthoptions",{"0":{"49":1},"2":{"60":2}}],["s",{"2":{"38":1,"41":1,"49":1,"50":1,"59":2,"66":1,"68":1,"72":1,"77":1,"78":1,"93":1,"100":1,"107":1,"151":1,"159":2,"169":1,"178":1,"190":1,"197":1,"210":2,"213":1,"215":1,"218":1,"224":1,"226":2,"228":1,"239":1,"242":1,"243":1,"250":1,"254":1,"256":1,"263":1,"273":1,"274":3,"275":1,"285":1,"289":2,"290":1,"301":1,"304":1,"306":1,"324":1,"326":1,"328":1,"333":1,"337":1,"340":1,"355":1,"357":1,"359":1,"362":2,"366":1,"377":1,"379":1}}],["still",{"2":{"249":1,"275":1,"287":1,"362":1,"379":1}}],["store",{"2":{"232":1,"237":1,"365":1}}],["stored",{"2":{"232":1,"241":1,"324":1,"326":1,"362":1,"369":1}}],["storage",{"2":{"232":1,"237":1,"241":2,"362":1,"365":1,"369":1}}],["stone",{"2":{"96":1}}],["stepping",{"2":{"96":1}}],["step",{"0":{"74":1,"75":1,"76":1,"78":1,"79":1,"142":1,"144":1,"147":1,"151":1,"154":1,"161":1,"162":1,"163":1,"164":1,"165":1,"171":1,"172":1,"173":1,"174":1,"175":1,"181":1,"182":1,"183":1,"184":1,"185":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1},"1":{"143":1,"145":1,"146":1,"148":1,"149":1,"150":1,"152":1,"153":1,"155":1},"2":{"145":1,"219":1,"284":1}}],["steps",{"0":{"331":1},"2":{"36":1,"53":1,"129":1,"214":1,"217":1,"292":1}}],["stripe",{"2":{"332":1}}],["strictmode",{"2":{"286":2}}],["string",{"2":{"51":1,"248":1,"261":1,"262":2,"290":1,"301":2,"358":1}}],["structured",{"0":{"262":1},"2":{"262":1}}],["streamlining",{"2":{"362":1}}],["streamlined",{"2":{"63":1,"68":1}}],["stress",{"2":{"82":1}}],["styling",{"2":{"43":1}}],["statemutability",{"2":{"301":10}}],["state",{"2":{"257":1,"286":1}}],["status",{"0":{"305":1},"1":{"306":1,"307":1,"308":1},"2":{"38":1,"126":1,"139":2,"305":1,"311":3}}],["standards",{"2":{"332":1}}],["standard",{"2":{"145":2,"146":1,"158":1,"168":1,"260":1,"321":1,"359":1,"372":1,"373":1,"374":1,"379":2}}],["starting",{"2":{"59":1,"290":1}}],["start",{"2":{"20":1,"74":1,"77":2,"78":1,"80":1,"100":1,"107":1,"108":1,"109":2,"115":1,"116":1,"119":1,"122":1,"127":1,"128":1,"161":1,"171":1,"181":1,"281":1,"282":1}}],["started",{"0":{"20":1,"34":1,"72":1,"204":1,"279":1},"1":{"35":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"280":1,"281":1,"282":1},"2":{"35":1,"72":1,"74":1,"75":2,"86":1,"136":1,"160":1,"169":1,"170":1,"180":1,"203":1,"278":1,"316":1,"320":1,"321":1,"331":1}}],["stack",{"0":{"1":1}}],["surf",{"2":{"332":1}}],["sure",{"2":{"59":1,"108":1,"109":1,"115":1,"116":1,"119":1,"122":1,"127":1,"128":1,"129":1,"141":1,"153":1}}],["suspicious",{"2":{"327":1}}],["sufficient",{"2":{"304":1}}],["suffix",{"2":{"196":1}}],["sub",{"2":{"317":3}}],["subject",{"2":{"287":2}}],["subsequent",{"0":{"255":1},"2":{"235":1}}],["subsection",{"2":{"175":1,"185":1}}],["subset",{"2":{"162":1,"172":1,"182":1,"213":1}}],["subscription",{"0":{"127":1},"2":{"125":2,"126":2,"127":1}}],["succeeded",{"2":{"311":2,"312":1,"355":1}}],["successful",{"0":{"311":1},"2":{"310":1}}],["successfully",{"2":{"286":1,"311":1}}],["success",{"2":{"111":1,"121":1}}],["such",{"2":{"35":1,"59":1,"64":1,"114":1,"169":1,"179":1,"275":1,"294":1,"307":1,"308":1,"328":2,"330":1,"358":1}}],["supply",{"2":{"82":1}}],["supports",{"2":{"205":1,"323":1,"353":1,"355":2,"378":1}}],["supported",{"2":{"113":1,"139":1,"210":1,"285":1,"286":1,"296":1,"297":1,"324":1,"346":2,"350":1}}],["support",{"0":{"2":1,"139":1,"379":1},"1":{"140":1},"2":{"58":1,"139":1,"205":1,"211":1,"224":1,"229":1,"248":1,"260":1,"273":1,"301":1,"304":1,"313":1,"321":1,"323":1,"332":1}}],["suited",{"2":{"169":1}}],["suite",{"2":{"62":1,"217":1,"220":1}}],["summary",{"0":{"57":1},"2":{"57":1}}],["sessionaddress",{"2":{"365":1,"369":1}}],["sessionwallet",{"2":{"365":2,"368":1}}],["sessionprivatekey",{"2":{"365":4}}],["sessionsignature",{"2":{"368":1,"369":1}}],["sessions",{"0":{"287":1},"2":{"284":1,"287":4,"288":2,"359":2}}],["sessionid",{"2":{"284":1,"288":1}}],["sessionhash",{"2":{"284":3,"285":2,"286":6}}],["session",{"0":{"283":1,"288":1,"306":1,"308":1,"309":1,"326":1,"362":1,"363":1,"365":1,"368":1,"369":1},"1":{"284":1,"285":1,"286":1,"287":1,"288":1,"307":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1},"2":{"273":2,"283":1,"285":3,"286":5,"288":4,"290":1,"291":1,"293":1,"294":1,"301":1,"305":1,"306":2,"307":3,"308":3,"309":2,"311":1,"312":1,"325":4,"326":2,"327":1,"355":1,"361":1,"362":4,"366":1,"367":2,"368":1,"369":5}}],["self",{"2":{"240":1,"248":1,"253":1}}],["selects",{"2":{"355":1}}],["selector",{"2":{"263":1}}],["selecting",{"2":{"70":1,"102":1,"107":1,"109":1,"115":1,"116":1,"119":1,"122":1,"161":1,"163":1,"171":1,"172":1,"173":1,"181":1,"182":1,"183":1}}],["select",{"0":{"102":1,"145":1,"148":1,"161":1,"171":1,"181":1},"2":{"66":3,"78":1,"82":1,"108":1,"109":1,"127":2,"131":1,"161":2,"162":2,"171":1,"172":2,"181":1,"182":2,"193":1}}],["selected",{"2":{"66":1,"108":1,"109":1,"115":1,"116":1,"119":1,"122":1,"127":1,"128":1,"129":1,"148":1}}],["senttransactionresponse",{"2":{"311":1}}],["sent",{"2":{"197":1,"226":1,"301":1,"311":1,"312":2,"374":1}}],["senderc1155",{"2":{"296":1}}],["senderc721",{"2":{"295":1}}],["senderc20",{"2":{"294":1,"307":1}}],["sendtransactionbatch",{"2":{"372":1,"373":1}}],["sendtransaction",{"2":{"293":1,"308":1,"309":1,"311":1,"312":2,"370":2,"371":2,"372":1,"373":1,"374":2}}],["sends",{"2":{"195":1,"303":1,"308":1}}],["sending",{"0":{"370":1,"371":1,"372":1,"373":1,"374":1},"2":{"162":1,"213":1,"284":1,"293":1,"294":1,"295":1,"296":1,"307":1,"310":1,"312":1,"372":2,"373":2}}],["send",{"0":{"292":1,"294":1,"295":1,"296":1},"1":{"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1},"2":{"110":1,"163":1,"164":1,"173":1,"174":1,"183":1,"184":1,"215":1,"218":1,"219":1,"285":2,"292":1,"293":2,"299":1,"300":1,"301":3,"304":1,"306":1,"371":3,"372":2,"373":2}}],["separate",{"2":{"189":1}}],["seperate",{"2":{"165":1}}],["sepolia",{"2":{"81":1}}],["semi",{"2":{"158":1}}],["serious",{"2":{"95":1}}],["server",{"0":{"359":1},"2":{"359":2,"367":1,"369":1,"379":1}}],["servers",{"2":{"327":1}}],["serverless",{"0":{"22":1},"2":{"199":1}}],["service",{"0":{"124":1},"2":{"94":1,"124":1,"200":1,"271":1,"273":1,"274":1}}],["services",{"2":{"76":1,"123":1,"124":3,"379":1}}],["secured",{"2":{"325":1}}],["secure",{"2":{"273":1,"324":2,"329":1,"330":1,"362":2}}],["securely",{"2":{"199":1}}],["security",{"2":{"168":2,"206":1,"273":1,"313":1,"324":1,"328":2,"332":2}}],["second",{"2":{"106":1,"107":1,"284":1}}],["seconds",{"2":{"85":1,"135":1,"154":1,"164":1,"174":1,"184":1,"338":2}}],["sections",{"2":{"100":1,"103":1,"129":1}}],["section",{"0":{"142":1},"1":{"143":1},"2":{"93":1,"100":1,"107":1,"108":1,"109":1,"114":1,"115":1,"116":1,"119":1,"122":1,"126":1,"127":1,"128":1,"129":2,"131":1,"155":1,"192":1,"195":1,"198":1,"261":1,"262":1,"311":1,"312":1}}],["several",{"2":{"83":1,"94":1,"114":1,"124":1,"149":1,"162":2,"163":1,"172":1,"182":1,"317":1}}],["searching",{"2":{"70":1}}],["seamlessly",{"0":{"329":1},"1":{"330":1},"2":{"330":1}}],["seamless",{"2":{"61":1,"69":1,"94":1,"132":1,"133":1,"274":1,"277":1,"313":1,"358":1}}],["seen",{"2":{"272":1}}],["see",{"2":{"49":1,"50":1,"75":1,"102":1,"108":1,"109":1,"113":1,"121":1,"152":1,"153":1,"155":2,"161":1,"162":1,"165":3,"171":1,"172":1,"175":2,"181":1,"182":1,"185":1,"198":1,"202":1,"205":1,"214":1,"215":1,"217":1,"218":2,"219":1,"224":1,"257":1,"284":1,"286":3,"293":1,"301":1,"311":1,"312":1,"320":1,"321":1,"323":1,"333":1,"345":1,"353":1,"359":1,"379":1}}],["setitem",{"2":{"365":1}}],["seterror",{"2":{"286":3}}],["setsigningin",{"2":{"286":1}}],["setsessionhash",{"2":{"286":3}}],["sets",{"2":{"286":1}}],["setbasemetadatauri",{"2":{"195":1,"196":1}}],["setup",{"0":{"281":1,"282":1},"2":{"141":1,"328":1}}],["set",{"0":{"123":1,"124":1,"128":1,"189":1,"192":1,"196":1},"2":{"67":1,"100":1,"114":1,"124":1,"125":1,"128":4,"178":1,"192":1,"195":1,"196":1,"237":1,"242":1,"254":1,"352":1}}],["setopenwalletmodal",{"2":{"39":2}}],["setopenconnectmodal",{"2":{"38":2}}],["settings",{"0":{"99":1,"100":1,"101":1,"103":1,"104":1,"107":1,"113":1,"114":1,"122":1,"125":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1},"1":{"100":1,"101":1,"102":2,"103":2,"104":1,"105":3,"106":3,"107":1,"108":2,"109":2,"110":2,"111":2,"112":1,"113":1,"114":1,"115":2,"116":2,"117":2,"118":2,"119":2,"120":2,"121":2,"122":2,"123":3,"124":3,"125":1,"126":3,"127":2,"128":2,"129":1},"2":{"54":1,"56":1,"66":1,"70":1,"91":1,"97":1,"100":5,"103":2,"104":2,"107":2,"108":1,"109":1,"113":2,"114":1,"115":1,"116":1,"119":1,"122":2,"125":1,"126":1,"127":1,"128":1,"129":2,"333":8,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1}}],["setting",{"0":{"36":1,"37":1},"2":{"87":1,"109":1,"137":1,"162":1,"172":1,"182":1}}],["sequencewaas",{"2":{"282":2,"284":2,"285":2,"286":2,"287":2,"288":2,"290":2,"291":2,"293":1,"294":1,"295":1,"296":1,"311":1,"312":1}}],["sequenceutils",{"2":{"266":1}}],["sequencecontext",{"2":{"266":1}}],["sequence",{"0":{"34":1,"35":1,"58":1,"74":1,"76":1,"93":1,"152":1,"186":1,"192":1,"271":1,"273":1,"274":1,"329":1,"354":1,"363":1,"364":1,"375":1},"1":{"35":1,"59":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"272":1,"273":1,"274":1,"275":1,"330":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"376":1,"377":1,"378":1,"379":1},"2":{"34":1,"35":1,"40":1,"41":1,"43":2,"50":1,"53":1,"58":2,"59":2,"60":2,"61":1,"62":1,"63":1,"64":1,"68":2,"72":1,"74":1,"75":1,"81":1,"83":1,"85":1,"86":1,"89":1,"90":1,"93":1,"100":2,"102":1,"113":1,"130":2,"133":1,"135":1,"136":1,"139":7,"151":1,"152":1,"153":1,"187":1,"192":1,"193":1,"197":1,"199":3,"200":2,"205":4,"206":1,"212":1,"213":3,"214":1,"216":2,"217":1,"220":1,"221":2,"224":2,"225":2,"226":3,"227":1,"237":2,"238":1,"242":1,"249":1,"260":1,"261":1,"262":1,"267":3,"271":2,"272":1,"273":2,"274":4,"275":4,"281":2,"282":1,"283":1,"284":1,"285":1,"286":8,"293":1,"294":1,"295":1,"296":1,"299":1,"300":1,"301":2,"304":1,"311":1,"312":1,"313":2,"317":1,"320":3,"321":4,"322":1,"323":4,"324":2,"325":3,"328":1,"329":1,"330":1,"331":2,"332":10,"333":9,"334":1,"344":2,"349":1,"350":1,"353":1,"354":1,"355":6,"357":2,"358":3,"359":4,"361":1,"362":1,"366":1,"367":1,"377":5,"378":1,"379":5}}],["sequencekit",{"0":{"8":1,"14":1,"134":1},"2":{"93":1,"131":1,"132":3,"133":1,"315":1,"316":1}}]],"serializationVersion":2}
