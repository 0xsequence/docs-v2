import{d as o,j as e}from"./index-B9imbMQJ.js";const a={title:"Trust Contract Recovery Flow",description:"undefined"};function r(n){const t={a:"a",div:"div",h1:"h1",h2:"h2",header:"header",p:"p",...o(),...n.components};return e.jsxs(e.Fragment,{children:[e.jsx(t.header,{children:e.jsxs(t.h1,{id:"trust-contract-recovery-flow",children:["Trust Contract Recovery Flow",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#trust-contract-recovery-flow",children:e.jsx(t.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsx(t.p,{children:"Sequence WaaS accounts are protected by a disaster recovery mechanism contract called Trust. This document outlines the working mechanism behind the Trust contract, as well as the recovery flow to be triggered during a disaster scenario."}),`
`,e.jsxs(t.h2,{id:"trust-contract-architecture",children:["Trust Contract Architecture",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#trust-contract-architecture",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Trust is essentially a time lock contract. For every configured WaaS tenant project, there are two Trust contract instances deployed. One instance is controlled by the recovery wallet of the project. The other instance is controlled by the Sequence recovery wallet. In their default state, Trust contracts are in locked status. While locked, neither party can access WaaS accounts created under the tenant configuration."}),`
`,e.jsx(t.p,{children:"The only way for a Trust contract to be unlocked is for one of the controlling parties to call the setUnlocksAt method on the Trust contract instance controlled by the other party. When this method is called, Trust contract instance goes into countdown state, beginning an enforced 90-day countdown. Since the countdown state is on-chain, it's publicly available for either party to observe."}),`
`,e.jsx(t.p,{children:"Once the countdown is over, the party that called setUnlocksAt gains control over the Trust instance of the counterparty. Having control over both instances, they can recover all accounts created with the WaaS tenant configuration."}),`
`,e.jsxs(t.h2,{id:"unlock-state-monitoring",children:["Unlock State Monitoring",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#unlock-state-monitoring",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Sequence provides unlock state monitoring for all deployed Trust contract instances. This service runs under the existing Sequence WaaS implementation deployed on AWS Nitro Secure Enclave instances. Monitoring system checks every Trust contract instance and notifies both Sequence team and the project owner when an unlock state is detected on a deployed contract. This ensures that neither party can call setUnlocksAt on another party's contract without notifying them."}),`
`,e.jsxs(t.h2,{id:"disaster-recovery-flow",children:["Disaster Recovery Flow",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#disaster-recovery-flow",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Trust contracts are deployed to recover accounts in the unlikely case that one of the parties disappears and accounts created with the WaaS configuration are inaccessible. In such a case, the counterparty can initiate the recovery flow by calling the setUnlocksAt method on the other party's Trust contract instance. This will automatically trigger unlock notifications for both parties until the countdown period is over. Once the 90-day countdown period concludes, accounts created as well as the tokens held in the accounts can be recovered."})]})}function i(n={}){const{wrapper:t}={...o(),...n.components};return t?e.jsx(t,{...n,children:e.jsx(r,{...n})}):r(n)}export{i as default,a as frontmatter};
