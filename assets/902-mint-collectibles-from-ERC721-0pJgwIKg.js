import{u as o,j as e}from"./index-Bru7ybvz.js";const s={slug:"/solutions/collectibles/contracts/mint-collectibles-from-ERC721",title:"How to Mint Digital Collectibles in Builder",description:"undefined"};function n(i){const t={a:"a",code:"code",div:"div",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",p:"p",...o(),...i.components};return e.jsxs(e.Fragment,{children:[e.jsx(t.header,{children:e.jsxs(t.h1,{id:"how-to-mint-digital-collectibles-in-builder",children:["How to Mint Digital Collectibles in Builder",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#how-to-mint-digital-collectibles-in-builder",children:e.jsx(t.div,{"data-autolink-icon":!0})})]})}),`
`,e.jsxs(t.h2,{id:"introduction",children:["Introduction",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#introduction",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"This guide walks you through creating in-game assets by minting from an ERC-721 contract, commonly known as NFTs (Non-Fungible Tokens), often used for collectibles."}),`
`,e.jsxs(t.p,{children:["For more on creating in-game items from collections, ",e.jsx(t.a,{href:"/solutions/collectibles/contracts/900-mint-items-from-ERC1155",children:"check our guide on using ERC-1155"}),"."]}),`
`,e.jsxs(t.h4,{id:"erc-721-vs-erc-1155",children:["ERC-721 vs. ERC-1155",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#erc-721-vs-erc-1155",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Both contracts mint NFTs, but ERC-721, being the earlier standard, has gained widespread adoption, particularly in digital collectibles. Known for its simplicity and ease to audit for security, ERC-721 tokens are distinct, contributing to their recognition in various NFT marketplaces."}),`
`,e.jsx(t.p,{children:"In contrast, ERC-1155 offers versatility with efficient batch operations for both fungible and non-fungible tokens in a single contract, reducing gas costs. However, this flexibility introduces complexity, necessitating careful security attention."}),`
`,e.jsxs(t.h4,{id:"choosing-for-gaming",children:["Choosing for Gaming",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#choosing-for-gaming",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"The choice depends on your needs. ERC-1155 is efficient for creating various unique in-game items. However, If you aim to provide tradable digital collectibles recognized across marketplaces, ERC-721 may be better suited."}),`
`,e.jsx(t.p,{children:"Which leads us to the point of this walkthrough - digital collectibles. As such, we will focus on using ERC-721 to create in-game digital collectibles to use in your game."}),`
`,e.jsx(t.p,{children:"Let's get started!"}),`
`,e.jsxs(t.h3,{id:"prerequisite-create-a-project-and-deploy-a-smart-contract",children:["Prerequisite: Create a Project and deploy a Smart Contract",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#prerequisite-create-a-project-and-deploy-a-smart-contract",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(t.p,{children:["This guide assumes that you have already ",e.jsx(t.a,{href:"/solutions/builder/getting-started",children:"signed up for Builder and created a Project"}),"."]}),`
`,e.jsxs(t.p,{children:["Before you get started creating (minting) collectibles, you will need to first deploy the smart contract you wish to mint from. If you have not done so already, go back and do ",e.jsx(t.a,{href:"/solutions/collectibles/contracts/200-deploy-an-item-collection-contract",children:"how to load an item collection through deploying a smart contract"}),"."]}),`
`,e.jsxs(t.h2,{id:"step-1-select-the-contract-for-your-digital-collectibles",children:["Step 1: Select the contract for your digital collectibles",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#step-1-select-the-contract-for-your-digital-collectibles",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"Start by selecting the contract you would like to create a collectible from."}),`
`,e.jsx(t.p,{children:"Once in the contract dashboard, you should see the ERC-721 contract that you have deployed - select it."}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{src:"/img/builder/builder_choose_contract_mint_collectibles.png",alt:"Sequence builder choose contract"})}),`
`,e.jsxs(t.h2,{id:"step-2-navigate-to-write-contract",children:["Step 2: Navigate to Write Contract",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#step-2-navigate-to-write-contract",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsx(t.p,{children:"When opening the contract, you will see several options. Everything from details like your contract address, type, the network its deployed on - to options for adding gas or help setting up an indexer. Below those details, you have more options to view contract details and interact with it."}),`
`,e.jsxs(t.p,{children:["Within that subset of options, select ",e.jsx(t.code,{children:"Write Contract"}),"."]}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{src:"/img/builder/builder_select_write_contract_mint_collectibles.png",alt:"Sequence builder write contract"})}),`
`,e.jsx(t.p,{children:"Selecting this will reveal a variety of methods on the smart contract."}),`
`,e.jsxs(t.p,{children:["Select the ",e.jsx(t.code,{children:"mint"})," method."]}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{src:"/img/builder/builder_select_mint_method_mint_collectibles.png",alt:"Sequence builder mint method"})}),`
`,e.jsxs(t.h2,{id:"step-3-provide-details-for-the-mint-method",children:["Step 3: Provide details for the Mint method",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#step-3-provide-details-for-the-mint-method",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(t.p,{children:["Selecting ",e.jsx(t.code,{children:"mint"})," will expand the method, providing inputs."]}),`
`,e.jsx(t.p,{children:"Enter the address you want these collectibles to be minted to, for this example put your own address in."}),`
`,e.jsx(t.p,{children:"Enter the amount of collectibles you want to create."}),`
`,e.jsxs(t.p,{children:["Then hit ",e.jsx(t.code,{children:"write"})," to send a transaction to mint."]}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{src:"/img/builder/builder_fill_mint_details_mint_collectibles.png",alt:"Sequence builder mint details"})}),`
`,e.jsxs(t.h2,{id:"step-4-mint-and-sign-your-transaction",children:["Step 4: Mint and sign your transaction",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#step-4-mint-and-sign-your-transaction",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(t.p,{children:["Once you hit ",e.jsx(t.code,{children:"write"}),", a modal with your wallet will pop-up. In order to create (mint) these collectibles, you will need to send a transaction."]}),`
`,e.jsxs(t.p,{children:["Read the transaction details and execute the transaction by hitting ",e.jsx(t.code,{children:"confirm"})," on the signature."]}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{src:"/img/builder/builder_sign_transaction_mint_collectibles.png",alt:"Sequence builder sign transaction"})}),`
`,e.jsx(t.p,{children:"After you sign the transaction, the network will take a few seconds (maybe minutes depending on the network and other factors) to confirm your transaction."}),`
`,e.jsx(t.p,{children:"When the transaction is complete, you will have created your digital collectibles by minting them from the smart contract!"}),`
`,e.jsxs(t.h2,{id:"step-5-confirm-your-minted-collectibles",children:["Step 5: Confirm your minted collectibles",e.jsx(t.a,{"aria-hidden":"true",tabIndex:"-1",href:"#step-5-confirm-your-minted-collectibles",children:e.jsx(t.div,{"data-autolink-icon":!0})})]}),`
`,e.jsxs(t.p,{children:["Click the ",e.jsx(t.code,{children:"Tokens"})," subsection to see the both of the collections that we created and minted from."]}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{src:"/img/builder/builder_confirm_mint_collectibles.png",alt:"Sequence builder confirm mint"})}),`
`,e.jsx(t.p,{children:"In the example, you can see the 5 collectibles that we created."})]})}function c(i={}){const{wrapper:t}={...o(),...i.components};return t?e.jsx(t,{...i,children:e.jsx(n,{...i})}):n(i)}export{c as default,s as frontmatter};
